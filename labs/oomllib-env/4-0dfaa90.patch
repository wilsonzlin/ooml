From 0dfaa90f29c08becb545c56a64e75220135846b6 Mon Sep 17 00:00:00 2001
From: Wilson Lin <contact@wilsonl.in>
Date: Mon, 30 Apr 2018 23:32:38 +1200
Subject: [PATCH] More changes to declarations to compile to Java without
 static Java errors

---
 Deviations.md                                 |    2 +-
 archive/Python/PythonClass.java               |   91 --
 archive/Python/PythonClassConstructor.java    |   38 -
 archive/Python/PythonClassMethod.java         |   45 -
 archive/Python/PythonClassVariable.java       |   24 -
 archive/Python/PythonCompiler.java            |   75 --
 archive/Python/PythonFunction.java            |   25 -
 archive/Python/PythonFunctionParameter.java   |   29 -
 archive/Python/PythonLiteral.java             |    7 -
 archive/Python/PythonModule.java              |   26 -
 archive/Python/PythonVariable.java            |   16 -
 dec/dom.generated.d.ts                        | 1149 ++++++++---------
 dec/dom.iterable.d.ts                         |   41 +-
 dec/es2015.collection.d.ts                    |    2 +-
 dec/es2018.promise.d.ts                       |    2 +-
 dec/es5.d.ts                                  |   12 +-
 .../env/gen/Compiling/Java/JavaBuiltin.java   |   25 -
 .../gen/Compiling/Java/JavaClassMethod.java   |    2 +-
 .../Java/JavaClassMethodParameter.java        |   13 +-
 .../gen/Compiling/Java/JavaClassVariable.java |    2 +-
 .../env/gen/Compiling/Java/JavaCompiler.java  |   50 +-
 .../core/env/gen/Compiling/Java/UtilJava.java |    2 +
 .../ooml/oomlc/core/env/gen/Lexing/Code.java  |    6 +
 .../ooml/oomlc/core/env/gen/Lexing/Lexer.java |   30 +-
 .../org/ooml/oomlc/core/env/gen/Main.java     |   11 +-
 .../oomlc/core/env/gen/Parsing/TokenType.java |    1 +
 .../core/env/gen/Syntax/STAnnotation.java     |   43 +-
 .../oomlc/core/env/gen/Syntax/STSyntax.java   |   18 +-
 notes/Compiling/EventTarget.md                |   65 +
 29 files changed, 714 insertions(+), 1138 deletions(-)
 delete mode 100644 archive/Python/PythonClass.java
 delete mode 100644 archive/Python/PythonClassConstructor.java
 delete mode 100644 archive/Python/PythonClassMethod.java
 delete mode 100644 archive/Python/PythonClassVariable.java
 delete mode 100644 archive/Python/PythonCompiler.java
 delete mode 100644 archive/Python/PythonFunction.java
 delete mode 100644 archive/Python/PythonFunctionParameter.java
 delete mode 100644 archive/Python/PythonLiteral.java
 delete mode 100644 archive/Python/PythonModule.java
 delete mode 100644 archive/Python/PythonVariable.java
 create mode 100644 notes/Compiling/EventTarget.md

diff --git a/Deviations.md b/Deviations.md
index 1bd139920d..d77c468078 100644
--- a/Deviations.md
+++ b/Deviations.md
@@ -6,4 +6,4 @@ Changes to the upstream official TypeScript declarations are also reflected here
 
 If a version is not listed, it means that it did not make any modifications.
 
-## 20180431.0
+## 20180507.0
diff --git a/archive/Python/PythonClass.java b/archive/Python/PythonClass.java
deleted file mode 100644
index 8e7d4847f9..0000000000
--- a/archive/Python/PythonClass.java
+++ /dev/null
@@ -1,91 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Compiling.Python;
-
-import org.ooml.oomlc.core.env.gen.Exception.MalformedSyntaxException;
-import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterface;
-import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterfaceProperty;
-import org.ooml.oomlc.core.env.gen.Syntax.Statement.STInterfaceStatement;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.STReferenceType;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
-import org.ooml.oomlc.core.env.gen.Utils.Util;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.List;
-
-class PythonClass {
-  String name;
-  List<PythonClassVariable> variables;
-  List<PythonClassConstructor> constructors;
-  List<PythonClassMethod> methods;
-  List<PythonClass> nestedClasses;
-
-  static PythonClass from (STInterface st_intf) {
-    STInterfaceProperty prototypeProp = st_intf.getProperties().get("prototype");
-    STType prototypePropType = prototypeProp != null ?
-      prototypeProp.getType() :
-      null;
-    String prototypeReference = null;
-
-    if (prototypePropType != null) {
-      if (!(prototypePropType instanceof STReferenceType) ||
-          !((STReferenceType) prototypePropType).getGenericArguments().isEmpty() ||
-          !((STReferenceType) prototypePropType).getIndexQueries().isEmpty() ||
-          ((STReferenceType) prototypePropType).getReference().size() != 1) {
-        throw new MalformedSyntaxException("\"prototype\" property has invalid type", prototypePropType.getPosition());
-      }
-      prototypeReference = ((STReferenceType) prototypePropType).getReference().get(0).getName();
-    }
-
-    STInterfaceStatement st_proto_intfstmt = prototypeProp != null ?
-      PythonCompiler.declarations.getInterface(prototypeReference) :
-      null;
-    if (prototypeReference != null && st_proto_intfstmt == null) {
-      throw new MalformedSyntaxException("\"prototype\" property references non-existent interface", prototypePropType.getPosition());
-    }
-    STInterface st_proto_intf = prototypeProp != null ?
-      st_proto_intfstmt.getInterface() :
-      null;
-
-    PythonClass c = new PythonClass();
-    c.variables = Util.map(st_intf.getProperties().values(), PythonClassVariable::from);
-    c.constructors = Util.map(st_intf.getConstructors(), PythonClassConstructor::from);
-    c.methods = Util.map(st_intf.getMethods(), PythonClassMethod::fromStatic);
-    c.nestedClasses = new ArrayList<>();
-
-    if (st_proto_intfstmt != null) {
-      c.variables.removeIf(pythonClassVariable -> pythonClassVariable.name.equals("prototype"));
-
-      if (!st_proto_intf.getConstructors().isEmpty()) {
-        throw new MalformedSyntaxException("Prototype interface has constructors", st_proto_intf.getPosition());
-      }
-
-      c.name = st_proto_intfstmt.getName().getName();
-      c.methods.addAll(Util.map(st_proto_intf.getMethods(), PythonClassMethod::from));
-      List<PythonClassVariable> instanceVariables = Util.map(st_proto_intf.getProperties().values(), PythonClassVariable::from);
-      for (PythonClassConstructor constructor : c.constructors) {
-        constructor.instanceVariables.addAll(instanceVariables);
-      }
-    }
-
-    return c;
-  }
-
-  @Override
-  public String toString () {
-    StringBuilder syntax = new StringBuilder();
-
-    syntax
-      .append("class ")
-      .append(name)
-      .append(":\n")
-      .append(Util.indent(Util.join("\n", variables)))
-      .append("\n\n")
-      .append(Util.indent(Util.join("\n\n", constructors)))
-      .append("\n\n")
-      .append(Util.indent(Util.join("\n\n", methods)))
-      .append("\n\n")
-      .append(Util.indent(Util.join("\n\n", nestedClasses)));
-
-    return syntax.toString();
-  }
-}
diff --git a/archive/Python/PythonClassConstructor.java b/archive/Python/PythonClassConstructor.java
deleted file mode 100644
index 9e8c2a99c6..0000000000
--- a/archive/Python/PythonClassConstructor.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Compiling.Python;
-
-import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterfaceConstructor;
-import org.ooml.oomlc.core.env.gen.Utils.Util;
-
-import java.util.ArrayList;
-import java.util.List;
-
-class PythonClassConstructor {
-  List<PythonFunctionParameter> parameters;
-  List<PythonClassVariable> instanceVariables;
-
-  static PythonClassConstructor from (STInterfaceConstructor st_constructor) {
-    PythonClassConstructor classConstructor = new PythonClassConstructor();
-    classConstructor.parameters = Util.map(st_constructor.getCallable().getParameters(), PythonFunctionParameter::from);
-    classConstructor.instanceVariables = new ArrayList<>();
-    return classConstructor;
-  }
-
-  @Override
-  public String toString () {
-    StringBuilder syntax = new StringBuilder();
-
-    syntax
-      .append("def __init__(self")
-      .append(!parameters.isEmpty() ? ", " + Util.join(", ", parameters) : "")
-      .append("):\n");
-    if (instanceVariables.isEmpty()) {
-      syntax.append("\tpass");
-    } else {
-      syntax
-        .append("\tself.")
-        .append(Util.indent(Util.join("\nself.", instanceVariables)).trim());
-    }
-
-    return syntax.toString();
-  }
-}
diff --git a/archive/Python/PythonClassMethod.java b/archive/Python/PythonClassMethod.java
deleted file mode 100644
index bfee9a36e0..0000000000
--- a/archive/Python/PythonClassMethod.java
+++ /dev/null
@@ -1,45 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Compiling.Python;
-
-import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterfaceMethod;
-import org.ooml.oomlc.core.env.gen.Utils.Util;
-
-import java.util.List;
-
-class PythonClassMethod {
-  String name;
-  boolean isStatic;
-  List<PythonFunctionParameter> parameters;
-
-  private static PythonClassMethod _from (STInterfaceMethod st_method, boolean isStatic) {
-    PythonClassMethod classMethod = new PythonClassMethod();
-    classMethod.name = st_method.getName().getName();
-    classMethod.isStatic = isStatic;
-    classMethod.parameters = Util.map(st_method.getCallable().getParameters(), PythonFunctionParameter::from);
-    return classMethod;
-  }
-
-  static PythonClassMethod from (STInterfaceMethod st_method) {
-    return _from(st_method, false);
-  }
-
-  static PythonClassMethod fromStatic (STInterfaceMethod st_method) {
-    return _from(st_method, true);
-  }
-
-  @Override
-  public String toString () {
-    StringBuilder syntax = new StringBuilder();
-
-    syntax
-      .append(isStatic ? "@staticmethod\n" : "")
-      .append("def ")
-      .append(name)
-      .append("(")
-      .append(!isStatic ? "self" + (!parameters.isEmpty() ? ", " : "") : "")
-      .append(Util.join(", ", parameters))
-      .append("):\n")
-      .append("\tpass");
-
-    return syntax.toString();
-  }
-}
diff --git a/archive/Python/PythonClassVariable.java b/archive/Python/PythonClassVariable.java
deleted file mode 100644
index e5f70efec1..0000000000
--- a/archive/Python/PythonClassVariable.java
+++ /dev/null
@@ -1,24 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Compiling.Python;
-
-import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterfaceProperty;
-
-class PythonClassVariable {
-  String name;
-
-  static PythonClassVariable from(STInterfaceProperty st_prop) {
-    PythonClassVariable classVariable = new PythonClassVariable();
-    classVariable.name = st_prop.getName().getName();
-    return classVariable;
-  }
-
-  @Override
-  public String toString () {
-    StringBuilder syntax = new StringBuilder();
-
-    syntax
-      .append(name)
-      .append(" = None");
-
-    return syntax.toString();
-  }
-}
diff --git a/archive/Python/PythonCompiler.java b/archive/Python/PythonCompiler.java
deleted file mode 100644
index c489541034..0000000000
--- a/archive/Python/PythonCompiler.java
+++ /dev/null
@@ -1,75 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Compiling.Python;
-
-import org.ooml.oomlc.core.env.gen.Declaration.Declarations;
-import org.ooml.oomlc.core.env.gen.Exception.MalformedSyntaxException;
-import org.ooml.oomlc.core.env.gen.Syntax.Statement.STDataUnitStatement;
-import org.ooml.oomlc.core.env.gen.Syntax.Statement.STDeclarationStatement;
-import org.ooml.oomlc.core.env.gen.Syntax.Statement.STFunctionStatement;
-import org.ooml.oomlc.core.env.gen.Syntax.Statement.STInterfaceStatement;
-import org.ooml.oomlc.core.env.gen.Syntax.Statement.STVariableStatement;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.STInlineInterfaceType;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.STPrimitiveType;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.STReferenceType;
-import org.ooml.oomlc.core.env.gen.Utils.Util;
-
-public class PythonCompiler {
-  private static final PythonModule window = new PythonModule();
-  public static Declarations declarations;
-
-  public static String compile () {
-    for (STDeclarationStatement st_stmt : declarations.getDeclarations()) {
-      STDataUnitStatement st_dec = st_stmt.getDeclarable();
-      switch (st_dec.getStatementType()) {
-      case FUNCTION:
-        PythonFunction function = new PythonFunction();
-        function.name = st_dec.getName().getName();
-        function.parameters = Util.map(((STFunctionStatement) st_dec)
-          .getCallable()
-          .getParameters(), PythonFunctionParameter::from);
-        window.functions.add(function);
-        break;
-
-      case VARIABLE:
-        // Always assume readonly, even if not
-
-        if (((STVariableStatement) st_dec).getType() instanceof STPrimitiveType) {
-          // Constant global value
-          PythonVariable variable = new PythonVariable();
-          variable.name = st_dec.getName().getName();
-          window.variables.add(variable);
-
-        } else if (((STVariableStatement) st_dec).getType() instanceof STReferenceType &&
-                   ((STReferenceType) ((STVariableStatement) st_dec).getType()).getReference().size() == 1 &&
-                   ((STReferenceType) ((STVariableStatement) st_dec).getType()).getGenericArguments().isEmpty() &&
-                   ((STReferenceType) ((STVariableStatement) st_dec).getType()).getIndexQueries().isEmpty()) {
-          // Export of interface
-          String reference = ((STReferenceType) ((STVariableStatement) st_dec).getType())
-            .getReference()
-            .get(0)
-            .getName();
-          STInterfaceStatement st_intfstmt = declarations.getInterface(reference);
-          PythonClass c = PythonClass.from(st_intfstmt.getInterface());
-          c.name = st_intfstmt.getName().getName();
-          window.classes.add(c);
-
-        } else if (((STVariableStatement) st_dec).getType() instanceof STInlineInterfaceType) {
-          // Export of interface
-          PythonClass c = PythonClass.from(((STInlineInterfaceType) ((STVariableStatement) st_dec).getType()).getInterface());
-          c.name = st_dec.getName().getName();
-          window.classes.add(c);
-
-        } else {
-          // TODO throw new MalformedSyntaxException("Unknown variable declaration type", st_dec.getPosition());
-        }
-        break;
-
-      default:
-        throw new MalformedSyntaxException("Unknown declaration type", st_dec.getPosition());
-      }
-    }
-
-    // TODO
-
-    return window.toString().replaceAll("\\n\\n+", "\n\n");
-  }
-}
diff --git a/archive/Python/PythonFunction.java b/archive/Python/PythonFunction.java
deleted file mode 100644
index 16a3860815..0000000000
--- a/archive/Python/PythonFunction.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Compiling.Python;
-
-import org.ooml.oomlc.core.env.gen.Utils.Util;
-
-import java.util.List;
-
-class PythonFunction {
-  String name;
-  List<PythonFunctionParameter> parameters;
-
-  @Override
-  public String toString () {
-    StringBuilder syntax = new StringBuilder();
-
-    syntax
-      .append("def ")
-      .append(name)
-      .append("(")
-      .append(Util.join(", ", parameters))
-      .append("):\n")
-      .append("\tpass");
-
-    return syntax.toString();
-  }
-}
diff --git a/archive/Python/PythonFunctionParameter.java b/archive/Python/PythonFunctionParameter.java
deleted file mode 100644
index c68d149f19..0000000000
--- a/archive/Python/PythonFunctionParameter.java
+++ /dev/null
@@ -1,29 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Compiling.Python;
-
-import org.ooml.oomlc.core.env.gen.Syntax.STCallableParameter;
-
-class PythonFunctionParameter {
-  boolean isVariableLength;
-  String name;
-  String defaultValue; // Can be null
-
-  static PythonFunctionParameter from (STCallableParameter st_p) {
-    PythonFunctionParameter genericParameter = new PythonFunctionParameter();
-    genericParameter.isVariableLength = st_p.isVariableLength();
-    genericParameter.name = st_p.getName().getName();
-    genericParameter.defaultValue = st_p.getDefaultValue();
-    return genericParameter;
-  }
-
-  @Override
-  public String toString () {
-    StringBuilder syntax = new StringBuilder();
-
-    syntax
-      .append(isVariableLength ? "..." : "")
-      .append(name)
-      .append(defaultValue != null ? "=" + PythonLiteral.stringFrom(defaultValue) : "");
-
-    return syntax.toString();
-  }
-}
diff --git a/archive/Python/PythonLiteral.java b/archive/Python/PythonLiteral.java
deleted file mode 100644
index 4946f4a2f1..0000000000
--- a/archive/Python/PythonLiteral.java
+++ /dev/null
@@ -1,7 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Compiling.Python;
-
-class PythonLiteral {
-  static String stringFrom (String value) {
-    return '"' + value.replaceAll("\\\\", "\\\\").replaceAll("\"", "\\\"") + '"';
-  }
-}
diff --git a/archive/Python/PythonModule.java b/archive/Python/PythonModule.java
deleted file mode 100644
index dfdaa3388e..0000000000
--- a/archive/Python/PythonModule.java
+++ /dev/null
@@ -1,26 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Compiling.Python;
-
-import org.ooml.oomlc.core.env.gen.Utils.Util;
-
-import java.util.ArrayList;
-import java.util.List;
-
-class PythonModule {
-  List<PythonVariable> variables = new ArrayList<>();
-  List<PythonFunction> functions = new ArrayList<>();
-  List<PythonClass> classes = new ArrayList<>();
-
-  @Override
-  public String toString () {
-    StringBuilder syntax = new StringBuilder();
-
-    syntax
-      .append(Util.join("\n", variables))
-      .append("\n\n")
-      .append(Util.join("\n\n", functions))
-      .append("\n\n")
-      .append(Util.join("\n\n", classes));
-
-    return syntax.toString();
-  }
-}
diff --git a/archive/Python/PythonVariable.java b/archive/Python/PythonVariable.java
deleted file mode 100644
index 1ce31facc5..0000000000
--- a/archive/Python/PythonVariable.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Compiling.Python;
-
-class PythonVariable {
-  String name;
-
-  @Override
-  public String toString () {
-    StringBuilder syntax = new StringBuilder();
-
-    syntax
-      .append(name)
-      .append(" = None");
-
-    return syntax.toString();
-  }
-}
diff --git a/dec/dom.generated.d.ts b/dec/dom.generated.d.ts
index 83da7c3adc..d955f954b7 100644
--- a/dec/dom.generated.d.ts
+++ b/dec/dom.generated.d.ts
@@ -1608,13 +1608,14 @@ declare var AbortController: {
     new(): AbortController;
 };
 
-interface AbortSignalEventMap {
+interface AbortSignalEventType {
     "abort": ProgressEvent;
 }
 
-interface AbortSignal extends EventTarget<AbortSignal, AbortSignalEventType> {
+interface AbortSignal extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addAbortSignalEventListener<T extends AbortSignalEventType>(type: __Class<T>, listener: EventListener<AbortSignal, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeAbortSignalEventListener<T extends AbortSignalEventType>(type: __Class<T>, listener: EventListener<AbortSignal, T>, options?: boolean | EventListenerOptions): void;
     readonly aborted: boolean;
-
 }
 
 declare var AbortSignal: {
@@ -1622,12 +1623,13 @@ declare var AbortSignal: {
     new(): AbortSignal;
 };
 
-interface AbstractWorkerEventMap {
+interface AbstractWorkerEventType {
     "error": ErrorEvent;
 }
 
-interface AbstractWorker extends EventTarget<AbstractWorker, AbstractWorkerEventType> {
-
+interface AbstractWorker extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addAbstractWorkerEventListener<T extends AbstractWorkerEventType>(type: __Class<T>, listener: EventListener<AbstractWorker, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeAbstractWorkerEventListener<T extends AbstractWorkerEventType>(type: __Class<T>, listener: EventListener<AbstractWorker, T>, options?: boolean | EventListenerOptions): void;
 }
 
 interface AesCfbParams extends Algorithm {
@@ -1732,7 +1734,7 @@ interface AnimationTimeline {
     readonly currentTime: number | null;
 }
 
-interface ApplicationCacheEventMap {
+interface ApplicationCacheEventType {
     "cached": Event;
     "checking": Event;
     "downloading": Event;
@@ -1743,12 +1745,13 @@ interface ApplicationCacheEventMap {
     "updateready": Event;
 }
 
-interface ApplicationCache extends EventTarget<ApplicationCache, ApplicationCacheEventType> {
+interface ApplicationCache extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addApplicationCacheEventListener<T extends ApplicationCacheEventType>(type: __Class<T>, listener: EventListener<ApplicationCache, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeApplicationCacheEventListener<T extends ApplicationCacheEventType>(type: __Class<T>, listener: EventListener<ApplicationCache, T>, options?: boolean | EventListenerOptions): void;
     readonly status: number;
     abort(): void;
     swapCache(): void;
     update(): void;
-
 }
 
 declare var ApplicationCache: {
@@ -1794,11 +1797,13 @@ declare var AudioBuffer: {
     new(): AudioBuffer;
 };
 
-interface AudioBufferSourceNodeEventMap {
+interface AudioBufferSourceNodeEventType {
     "ended": Event;
 }
 
-interface AudioBufferSourceNode extends EventTarget<AudioBufferSourceNode, AudioBufferSourceNodeEventType>, AudioNode {
+interface AudioBufferSourceNode extends AudioNode {
+    /*! @ooml-mapto(addEventListener) */ addAudioBufferSourceNodeEventListener<T extends AudioBufferSourceNodeEventType>(type: __Class<T>, listener: EventListener<AudioBufferSourceNode, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeAudioBufferSourceNodeEventListener<T extends AudioBufferSourceNodeEventType>(type: __Class<T>, listener: EventListener<AudioBufferSourceNode, T>, options?: boolean | EventListenerOptions): void;
     buffer: AudioBuffer | null;
     readonly detune: AudioParam;
     loop: boolean;
@@ -1808,7 +1813,6 @@ interface AudioBufferSourceNode extends EventTarget<AudioBufferSourceNode, Audio
     readonly playbackRate: AudioParam;
     start(when?: number, offset?: number, duration?: number): void;
     stop(when?: number): void;
-
 }
 
 declare var AudioBufferSourceNode: {
@@ -1816,11 +1820,13 @@ declare var AudioBufferSourceNode: {
     new(): AudioBufferSourceNode;
 };
 
-interface AudioContextEventMap {
+interface AudioContextEventType {
     "statechange": Event;
 }
 
-interface AudioContextBase extends EventTarget<AudioContextBase, AudioContextEventType> {
+interface AudioContextBase extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addAudioContextBaseEventListener<T extends AudioContextEventType>(type: __Class<T>, listener: EventListener<AudioContextBase, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeAudioContextBaseEventListener<T extends AudioContextEventType>(type: __Class<T>, listener: EventListener<AudioContextBase, T>, options?: boolean | EventListenerOptions): void;
     readonly currentTime: number;
     readonly destination: AudioDestinationNode;
     readonly listener: AudioListener;
@@ -1848,7 +1854,6 @@ interface AudioContextBase extends EventTarget<AudioContextBase, AudioContextEve
     createWaveShaper(): WaveShaperNode;
     decodeAudioData(audioData: ArrayBuffer, successCallback?: DecodeSuccessCallback, errorCallback?: DecodeErrorCallback): Promise<AudioBuffer>;
     resume(): Promise<void>;
-
 }
 
 interface AudioContext extends AudioContextBase {
@@ -1951,13 +1956,15 @@ declare var AudioTrack: {
     new(): AudioTrack;
 };
 
-interface AudioTrackListEventMap {
+interface AudioTrackListEventType {
     "addtrack": TrackEvent;
     "change": Event;
     "removetrack": TrackEvent;
 }
 
-interface AudioTrackList extends EventTarget<AudioTrackList, AudioTrackListEventType> {
+interface AudioTrackList extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addAudioTrackListEventListener<T extends AudioTrackListEventType>(type: __Class<T>, listener: EventListener<AudioTrackList, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeAudioTrackListEventListener<T extends AudioTrackListEventType>(type: __Class<T>, listener: EventListener<AudioTrackList, T>, options?: boolean | EventListenerOptions): void;
     readonly length: number;
     getTrackById(id: string): AudioTrack | null;
     item(index: number): AudioTrack;
@@ -1989,28 +1996,6 @@ declare var BeforeUnloadEvent: {
     new(): BeforeUnloadEvent;
 };
 
-interface BhxBrowser {
-    readonly lastError: DOMException;
-    checkMatchesGlobExpression(pattern: string, value: string): boolean;
-    checkMatchesUriExpression(pattern: string, value: string): boolean;
-    clearLastError(): void;
-    currentWindowId(): number;
-    fireExtensionApiTelemetry(functionName: string, isSucceeded: boolean, isSupported: boolean, errorString: string): void;
-    genericFunction(functionId: number, destination: any, parameters?: string, callbackId?: number): void;
-    genericSynchronousFunction(functionId: number, parameters?: string): string;
-    getExtensionId(): string;
-    getThisAddress(): any;
-    registerGenericFunctionCallbackHandler(callbackHandler: Function): void;
-    registerGenericListenerHandler(eventHandler: Function): void;
-    setLastError(parameters: string): void;
-    webPlatformGenericFunction(destination: any, parameters?: string, callbackId?: number): void;
-}
-
-declare var BhxBrowser: {
-    prototype: BhxBrowser;
-    new(): BhxBrowser;
-};
-
 interface BiquadFilterNode extends AudioNode {
     readonly Q: AudioParam;
     readonly detune: AudioParam;
@@ -2052,7 +2037,9 @@ interface Body {
     text(): Promise<string>;
 }
 
-interface BroadcastChannel extends EventTarget<BroadcastChannel, BroadcastChannelEventType> {
+interface BroadcastChannel extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addBroadcastChannelEventListener<T extends BroadcastChannelEventType>(type: __Class<T>, listener: EventListener<BroadcastChannel, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeBroadcastChannelEventListener<T extends BroadcastChannelEventType>(type: __Class<T>, listener: EventListener<BroadcastChannel, T>, options?: boolean | EventListenerOptions): void;
     readonly name: string;
     close(): void;
     postMessage(message: any): void;
@@ -2063,7 +2050,7 @@ declare var BroadcastChannel: {
     new(name: string): BroadcastChannel;
 };
 
-interface BroadcastChannelEventMap {
+interface BroadcastChannelEventType {
     message: MessageEvent;
     messageerror: MessageEvent;
 }
@@ -2666,8 +2653,6 @@ declare var CSSSupportsRule: {
 
 interface Cache {
     add(request: Request | string): Promise<void>;
-    addAll(requests: Request[]): Promise<void>;
-    addAll(requests: string[]): Promise<void>;
     delete(request: Request | string, options?: CacheQueryOptions): Promise<boolean>;
     keys(request?: Request | string, options?: CacheQueryOptions): Promise<Request[]>;
     match(request: Request | string, options?: CacheQueryOptions): Promise<Response>;
@@ -2952,16 +2937,6 @@ declare var Console: {
     new(): Console;
 };
 
-interface ContentScriptGlobalScope extends EventTarget {
-    readonly msContentScript: ExtensionScriptApis;
-    readonly window: Window;
-}
-
-declare var ContentScriptGlobalScope: {
-    prototype: ContentScriptGlobalScope;
-    new(): ContentScriptGlobalScope;
-};
-
 interface ConvolverNode extends AudioNode {
     buffer: AudioBuffer | null;
     normalize: boolean;
@@ -3029,12 +3004,6 @@ declare var CryptoKeyPair: {
     new(): CryptoKeyPair;
 };
 
-interface CustomElementRegistry {
-    define(name: string, constructor: Function, options?: ElementDefinitionOptions): void;
-    get(name: string): any;
-    whenDefined(name: string): Promise<void>;
-}
-
 interface CustomEvent<T = any> extends Event {
     readonly detail: T;
     initCustomEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, detailArg: T): void;
@@ -3047,7 +3016,6 @@ declare var CustomEvent: {
 
 interface DOMError {
     readonly name: string;
-    toString(): string;
 }
 
 declare var DOMError: {
@@ -3059,7 +3027,6 @@ interface DOMException {
     readonly code: number;
     readonly message: string;
     readonly name: string;
-    toString(): string;
 }
 
 declare var DOMException: {
@@ -3188,7 +3155,6 @@ interface DOMTokenList {
     item(index: number): string | null;
     remove(...tokens: string[]): void;
     replace(oldToken: string, newToken: string): void;
-    toString(): string;
     toggle(token: string, force?: boolean): boolean;
     [index: number]: string;
 }
@@ -3198,9 +3164,10 @@ declare var DOMTokenList: {
     new(): DOMTokenList;
 };
 
-interface DataCue extends EventTarget<DataCue, TextTrackCueEventType>, TextTrackCue {
+interface DataCue extends TextTrackCue {
+    /*! @ooml-mapto(addEventListener) */ addDataCueEventListener<T extends TextTrackCueEventType>(type: __Class<T>, listener: EventListener<DataCue, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeDataCueEventListener<T extends TextTrackCueEventType>(type: __Class<T>, listener: EventListener<DataCue, T>, options?: boolean | EventListenerOptions): void;
     data: ArrayBuffer;
-
 }
 
 declare var DataCue: {
@@ -3351,7 +3318,7 @@ interface DhKeyGenParams extends Algorithm {
     prime: Uint8Array;
 }
 
-interface DocumentEventMap extends GlobalEventHandlersEventMap {
+interface DocumentEventType extends GlobalEventHandlersEventType {
     "abort": UIEvent;
     "activate": Event;
     "beforeactivate": Event;
@@ -3442,7 +3409,9 @@ interface DocumentEventMap extends GlobalEventHandlersEventMap {
     "webkitfullscreenerror": Event;
 }
 
-interface Document extends EventTarget<Document, DocumentEventType>, Node, GlobalEventHandlers, ParentNode {
+interface Document extends Node, GlobalEventHandlers, ParentNode {
+    /*! @ooml-mapto(addEventListener) */ addDocumentEventListener<T extends DocumentEventType>(type: __Class<T>, listener: EventListener<Document, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeDocumentEventListener<T extends DocumentEventType>(type: __Class<T>, listener: EventListener<Document, T>, options?: boolean | EventListenerOptions): void;
     /**
      * Sets or gets the URL for the current document.
      */
@@ -3466,11 +3435,11 @@ interface Document extends EventTarget<Document, DocumentEventType>, Node, Globa
     /**
      * Retrieves a collection of all a objects that have a name and/or id property. Objects in this collection are in HTML source order.
      */
-    readonly anchors: HTMLCollectionOf<HTMLAnchorElement>;
+    readonly anchors: HTMLCollection<HTMLAnchorElement>;
     /**
      * Retrieves a collection of all applet objects in the document.
      */
-    readonly applets: HTMLCollectionOf<HTMLAppletElement>;
+    readonly applets: HTMLCollection<HTMLAppletElement>;
     /**
      * Deprecated. Sets or retrieves a value that indicates the background color behind the object.
      */
@@ -3514,7 +3483,7 @@ interface Document extends EventTarget<Document, DocumentEventType>, Node, Globa
     /**
      * Retrieves a collection of all embed objects in the document.
      */
-    readonly embeds: HTMLCollectionOf<HTMLEmbedElement>;
+    readonly embeds: HTMLCollection<HTMLEmbedElement>;
     /**
      * Sets or gets the foreground (text) color of the document.
      */
@@ -3522,7 +3491,7 @@ interface Document extends EventTarget<Document, DocumentEventType>, Node, Globa
     /**
      * Retrieves a collection, in source order, of all form objects in the document.
      */
-    readonly forms: HTMLCollectionOf<HTMLFormElement>;
+    readonly forms: HTMLCollection<HTMLFormElement>;
     readonly fullscreenElement: Element | null;
     readonly fullscreenEnabled: boolean;
     readonly head: HTMLHeadElement;
@@ -3530,7 +3499,7 @@ interface Document extends EventTarget<Document, DocumentEventType>, Node, Globa
     /**
      * Retrieves a collection, in source order, of img objects in the document.
      */
-    readonly images: HTMLCollectionOf<HTMLImageElement>;
+    readonly images: HTMLCollection<HTMLImageElement>;
     /**
      * Gets the implementation object of the current document.
      */
@@ -3550,14 +3519,14 @@ interface Document extends EventTarget<Document, DocumentEventType>, Node, Globa
     /**
      * Retrieves a collection of all a objects that specify the href property and all area objects in the document.
      */
-    readonly links: HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>;
+    readonly links: HTMLCollection<HTMLHyperlinkElement>;
     /**
      * Contains information about the current URL.
      */
     location: Location;
     msCSSOMElementFloatMetrics: boolean;
     msCapsLockWarningOff: boolean;
-    readonly plugins: HTMLCollectionOf<HTMLEmbedElement>;
+    readonly plugins: HTMLCollection<HTMLEmbedElement>;
     readonly pointerLockElement: Element;
     /**
      * Retrieves a value that indicates the current state of the object.
@@ -3574,7 +3543,7 @@ interface Document extends EventTarget<Document, DocumentEventType>, Node, Globa
     /**
      * Retrieves a collection of all script objects in the document.
      */
-    readonly scripts: HTMLCollectionOf<HTMLScriptElement>;
+    readonly scripts: HTMLCollection<HTMLScriptElement>;
     readonly scrollingElement: Element | null;
     /**
      * Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document.
@@ -3692,20 +3661,19 @@ interface Document extends EventTarget<Document, DocumentEventType>, Node, Globa
      * @param elementId String that specifies the ID value. Case-insensitive.
      */
     getElementById(elementId: string): HTMLElement | null;
-    getElementsByClassName(classNames: string): HTMLCollectionOf<Element>;
+    getElementsByClassName(classNames: string): HTMLCollection<Element>;
     /**
      * Gets a collection of objects based on the value of the NAME or ID attribute.
      * @param elementName Gets a collection of objects based on the value of the NAME or ID attribute.
      */
-    getElementsByName(elementName: string): NodeListOf<HTMLElement>;
+    getElementsByName(elementName: string): NodeList<HTMLElement>;
     /**
      * Retrieves a collection of objects based on the specified element name.
      * @param name Specifies the name of an element.
      */
-    getElementsByTagName<K extends HTMLElement>(tagname: __Class<K>): NodeListOf<K>;
-    getElementsByTagName<K extends SVGElement>(tagname: __Class<K>): NodeListOf<K>;
-    getElementsByTagName(tagname: string): NodeListOf<Element>;
-    getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>;
+    getElementsByTagName<K extends Element>(tagname: __Class<K>): NodeList<K>;
+    getElementsByTagName(tagname: string): NodeList<Element>;
+    getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollection<Element>;
     /**
      * Returns an object representing the current selection of the document that is loaded into the object displaying a webpage.
      */
@@ -3715,8 +3683,8 @@ interface Document extends EventTarget<Document, DocumentEventType>, Node, Globa
      */
     hasFocus(): boolean;
     importNode<T extends Node>(importedNode: T, deep: boolean): T;
-    msElementsFromPoint(x: number, y: number): NodeListOf<Element>;
-    msElementsFromRect(left: number, top: number, width: number, height: number): NodeListOf<Element>;
+    msElementsFromPoint(x: number, y: number): NodeList<Element>;
+    msElementsFromRect(left: number, top: number, width: number, height: number): NodeList<Element>;
     /**
      * Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the url parameter and the name parameter to collect the output of the write method and the writeln method.
      * @param url Specifies a MIME type for the document.
@@ -3769,7 +3737,6 @@ interface Document extends EventTarget<Document, DocumentEventType>, Node, Globa
      * @param content The text and HTML tags to write.
      */
     writeln(...content: string[]): void;
-
 }
 
 declare var Document: {
@@ -3786,7 +3753,7 @@ declare var DocumentFragment: {
     new(): DocumentFragment;
 };
 
-interface DocumentOrShadowRoot {
+interface DocumentOrShadowRoot /*! @ooml-interface */ {
     readonly activeElement: Element | null;
     readonly styleSheets: StyleSheetList;
     elementFromPoint(x: number, y: number): Element | null;
@@ -3861,7 +3828,7 @@ declare var EXT_texture_filter_anisotropic: {
     readonly TEXTURE_MAX_ANISOTROPY_EXT: number;
 };
 
-interface ElementEventMap extends GlobalEventHandlersEventMap {
+interface ElementEventType extends GlobalEventHandlersEventType {
     "ariarequest": Event;
     "command": Event;
     "gotpointercapture": PointerEvent;
@@ -3891,7 +3858,9 @@ interface ElementEventMap extends GlobalEventHandlersEventMap {
     "webkitfullscreenerror": Event;
 }
 
-interface Element extends EventTarget<Element, ElementEventType>, Node, GlobalEventHandlers, ElementTraversal, ParentNode /*! @ooml-abstract */ {
+interface Element extends Node, GlobalEventHandlers, ParentNode /*! @ooml-abstract */ {
+    /*! @ooml-mapto(addEventListener) */ addElementEventListener<T extends ElementEventType>(type: __Class<T>, listener: EventListener<Element, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeElementEventListener<T extends ElementEventType>(type: __Class<T>, listener: EventListener<Element, T>, options?: boolean | EventListenerOptions): void;
     readonly assignedSlot: HTMLSlotElement | null;
     readonly attributes: NamedNodeMap;
     readonly classList: DOMTokenList;
@@ -3914,8 +3883,6 @@ interface Element extends EventTarget<Element, ElementEventType>, Node, GlobalEv
     slot: string;
     readonly tagName: string;
     attachShadow(shadowRootInitDict: ShadowRootInit): ShadowRoot;
-    closest<K extends HTMLElement>(selector: __Class<K>): K | null;
-    closest<K extends SVGElement>(selector: __Class<K>): K | null;
     closest(selector: string): Element | null;
     getAttribute(qualifiedName: string): string | null;
     getAttributeNS(namespaceURI: string, localName: string): string;
@@ -3923,11 +3890,9 @@ interface Element extends EventTarget<Element, ElementEventType>, Node, GlobalEv
     getAttributeNodeNS(namespaceURI: string, localName: string): Attr | null;
     getBoundingClientRect(): ClientRect | DOMRect;
     getClientRects(): ClientRectList | DOMRectList;
-    getElementsByClassName(classNames: string): NodeListOf<Element>;
-    getElementsByTagName<K extends HTMLElement>(name: __Class<K>): NodeListOf<K>;
-    getElementsByTagName<K extends SVGElement>(name: __Class<K>): NodeListOf<K>;
-    getElementsByTagName(name: string): NodeListOf<Element>;
-    getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>;
+    getElementsByClassName(classNames: string): NodeList<Element>;
+    getElementsByTagName(name: string): NodeList<Element>;
+    getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollection<Element>;
     hasAttribute(name: string): boolean;
     hasAttributeNS(namespaceURI: string, localName: string): boolean;
     hasAttributes(): boolean;
@@ -3963,6 +3928,8 @@ interface Element extends EventTarget<Element, ElementEventType>, Node, GlobalEv
     webkitRequestFullScreen(): void;
     webkitRequestFullscreen(): void;
 
+    readonly nextElementSibling: Element | null;
+    readonly previousElementSibling: Element | null;
 }
 
 declare var Element: {
@@ -3970,7 +3937,7 @@ declare var Element: {
     new(): Element;
 };
 
-interface ElementCSSInlineStyle {
+interface ElementCSSInlineStyle /*! @ooml-interface */ {
     readonly style: CSSStyleDeclaration;
 }
 
@@ -3982,14 +3949,6 @@ interface ElementDefinitionOptions {
     extends: string;
 }
 
-interface ElementTraversal {
-    readonly childElementCount: number;
-    readonly firstElementChild: Element | null;
-    readonly lastElementChild: Element | null;
-    readonly nextElementSibling: Element | null;
-    readonly previousElementSibling: Element | null;
-}
-
 interface ErrorEvent extends Event {
     readonly colno: number;
     readonly error: any;
@@ -4060,29 +4019,10 @@ interface EventSourceInit {
     readonly withCredentials: boolean;
 }
 
-interface EventTarget<Target, Type extends EventType> /*! @ooml-interface */ {
+interface EventTarget {
     dispatchEvent(evt: Event): boolean;
-    addEventListener<SpecificType extends Type>(type: __Class<SpecificType>, listener: EventListener<Target, SpecificType>, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<SpecificType extends Type>(type: __Class<SpecificType>, listener: EventListener<Target, SpecificType>, options?: boolean | EventListenerOptions): void;
 }
 
-interface ExtensionScriptApis {
-    extensionIdToShortId(extensionId: string): number;
-    fireExtensionApiTelemetry(functionName: string, isSucceeded: boolean, isSupported: boolean, errorString: string): void;
-    genericFunction(routerAddress: any, parameters?: string, callbackId?: number): void;
-    genericSynchronousFunction(functionId: number, parameters?: string): string;
-    genericWebRuntimeCallout(to: any, from: any, payload: string): void;
-    getExtensionId(): string;
-    registerGenericFunctionCallbackHandler(callbackHandler: Function): void;
-    registerGenericPersistentCallbackHandler(callbackHandler: Function): void;
-    registerWebRuntimeCallbackHandler(handler: Function): any;
-}
-
-declare var ExtensionScriptApis: {
-    prototype: ExtensionScriptApis;
-    new(): ExtensionScriptApis;
-};
-
 interface External {
 }
 
@@ -4101,9 +4041,7 @@ interface File extends Blob {
 
 declare var File: {
     prototype: File;
-    new (parts: BufferSource[], filename: string, properties?: FilePropertyBag): File;
-    new (parts: Blob[], filename: string, properties?: FilePropertyBag): File;
-    new (parts: string[], filename: string, properties?: FilePropertyBag): File;
+    new (parts: any[], filename: string, properties?: FilePropertyBag): File;
 };
 
 interface FileList {
@@ -4121,7 +4059,7 @@ interface FilePropertyBag extends BlobPropertyBag {
     lastModified?: number;
 }
 
-interface FileReaderEventMap {
+interface FileReaderEventType {
     "abort": ProgressEvent;
     "error": ProgressEvent;
     "load": ProgressEvent;
@@ -4130,7 +4068,9 @@ interface FileReaderEventMap {
     "progress": ProgressEvent;
 }
 
-interface FileReader extends EventTarget<FileReader, FileReaderEventType> {
+interface FileReader extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addFileReaderEventListener<T extends FileReaderEventType>(type: __Class<T>, listener: EventListener<FileReader, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeFileReaderEventListener<T extends FileReaderEventType>(type: __Class<T>, listener: EventListener<FileReader, T>, options?: boolean | EventListenerOptions): void;
     readonly error: DOMException | null;
     readonly readyState: number;
     readonly result: any;
@@ -4139,7 +4079,6 @@ interface FileReader extends EventTarget<FileReader, FileReaderEventType> {
     readAsBinaryString(blob: Blob): void;
     readAsDataURL(blob: Blob): void;
     readAsText(blob: Blob, label?: string): void;
-
 }
 
 declare var FileReader: {
@@ -4278,11 +4217,11 @@ declare var Geolocation: {
     new(): Geolocation;
 };
 
-interface GetSVGDocument {
+interface GetSVGDocument /*! @ooml-interface */ {
     getSVGDocument(): Document;
 }
 
-interface GlobalEventHandlersEventMap {
+interface GlobalEventHandlersEventType {
     "pointercancel": PointerEvent;
     "pointerdown": PointerEvent;
     "pointerenter": PointerEvent;
@@ -4294,8 +4233,9 @@ interface GlobalEventHandlersEventMap {
     "wheel": WheelEvent;
 }
 
-interface GlobalEventHandlers extends EventTarget<GlobalEventHandlers, GlobalEventHandlersEventType> /*! @ooml-interface */ {
-
+interface GlobalEventHandlers /*! @ooml-interface */ {
+    /*! @ooml-mapto(addEventListener) */ addGlobalEventHandlersEventListener<T extends GlobalEventHandlersEventType>(type: __Class<T>, listener: EventListener<GlobalEventHandlers, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeGlobalEventHandlersEventListener<T extends GlobalEventHandlersEventType>(type: __Class<T>, listener: EventListener<GlobalEventHandlers, T>, options?: boolean | EventListenerOptions): void;
 }
 
 interface HTMLAllCollection {
@@ -4310,7 +4250,7 @@ declare var HTMLAllCollection: {
     new(): HTMLAllCollection;
 };
 
-interface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {
+interface HTMLAnchorElement extends HTMLHyperlinkElement {
     Methods: string;
     /**
      * Sets or retrieves the character set used to encode the object.
@@ -4359,7 +4299,6 @@ interface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {
     text: string;
     type: string;
     urn: string;
-
 }
 
 declare var HTMLAnchorElement: {
@@ -4406,7 +4345,6 @@ interface HTMLAppletElement extends HTMLElement {
     vspace: number;
     /** @deprecated */
     width: string;
-
 }
 
 declare var HTMLAppletElement: {
@@ -4414,7 +4352,7 @@ declare var HTMLAppletElement: {
     new(): HTMLAppletElement;
 };
 
-interface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {
+interface HTMLAreaElement extends HTMLHyperlinkElement {
     /**
      * Sets or retrieves a text alternative to the graphic.
      */
@@ -4438,7 +4376,6 @@ interface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {
      * Sets or retrieves the window or frame at which to target content.
      */
     target: string;
-
 }
 
 declare var HTMLAreaElement: {
@@ -4446,16 +4383,9 @@ declare var HTMLAreaElement: {
     new(): HTMLAreaElement;
 };
 
-interface HTMLAreasCollection extends HTMLCollectionBase {
-}
-
-declare var HTMLAreasCollection: {
-    prototype: HTMLAreasCollection;
-    new(): HTMLAreasCollection;
-};
-
-interface HTMLAudioElement extends EventTarget<HTMLAudioElement, HTMLMediaElementEventType>, HTMLMediaElement {
-
+interface HTMLAudioElement extends HTMLMediaElement {
+    /*! @ooml-mapto(addEventListener) */ addHTMLAudioElementEventListener<T extends HTMLMediaElementEventType>(type: __Class<T>, listener: EventListener<HTMLAudioElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeHTMLAudioElementEventListener<T extends HTMLMediaElementEventType>(type: __Class<T>, listener: EventListener<HTMLAudioElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var HTMLAudioElement: {
@@ -4469,7 +4399,6 @@ interface HTMLBRElement extends HTMLElement {
      */
     /** @deprecated */
     clear: string;
-
 }
 
 declare var HTMLBRElement: {
@@ -4486,7 +4415,6 @@ interface HTMLBaseElement extends HTMLElement {
      * Sets or retrieves the window or frame at which to target content.
      */
     target: string;
-
 }
 
 declare var HTMLBaseElement: {
@@ -4505,7 +4433,6 @@ interface HTMLBaseFontElement extends HTMLElement {
      */
     /** @deprecated */
     size: number;
-
 }
 
 declare var HTMLBaseFontElement: {
@@ -4513,7 +4440,7 @@ declare var HTMLBaseFontElement: {
     new(): HTMLBaseFontElement;
 };
 
-interface HTMLBodyElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {
+interface HTMLBodyElementEventType extends HTMLElementEventType, WindowEventHandlersEventType {
     "blur": FocusEvent;
     "error": ErrorEvent;
     "focus": FocusEvent;
@@ -4523,7 +4450,9 @@ interface HTMLBodyElementEventMap extends HTMLElementEventMap, WindowEventHandle
     "scroll": UIEvent;
 }
 
-interface HTMLBodyElement extends EventTarget<HTMLBodyElement, HTMLBodyElementEventType>, HTMLElement, WindowEventHandlers {
+interface HTMLBodyElement extends HTMLElement, WindowEventHandlers {
+    /*! @ooml-mapto(addEventListener) */ addHTMLBodyElementEventListener<T extends HTMLBodyElementEventType>(type: __Class<T>, listener: EventListener<HTMLBodyElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeHTMLBodyElementEventListener<T extends HTMLBodyElementEventType>(type: __Class<T>, listener: EventListener<HTMLBodyElement, T>, options?: boolean | EventListenerOptions): void;
     /** @deprecated */
     aLink: string;
     /** @deprecated */
@@ -4539,7 +4468,6 @@ interface HTMLBodyElement extends EventTarget<HTMLBodyElement, HTMLBodyElementEv
     text: string;
     /** @deprecated */
     vLink: string;
-
 }
 
 declare var HTMLBodyElement: {
@@ -4611,7 +4539,6 @@ interface HTMLButtonElement extends HTMLElement {
      * @param error Sets a custom error message that is displayed when a form is submitted.
      */
     setCustomValidity(error: string): void;
-
 }
 
 declare var HTMLButtonElement: {
@@ -4643,7 +4570,6 @@ interface HTMLCanvasElement extends HTMLElement {
      * @param type The standard MIME type for the image format to return. If you do not specify this parameter, the default value is a PNG format image.
      */
     toDataURL(type?: string, ...args: any[]): string;
-
 }
 
 declare var HTMLCanvasElement: {
@@ -4655,19 +4581,19 @@ interface HTMLCollectionBase {
     /**
      * Sets or retrieves the number of objects in a collection.
      */
-    readonly length: number;
     /**
      * Retrieves an object from various collections.
      */
-    item(index: number): Element;
-    [index: number]: Element;
 }
 
-interface HTMLCollection extends HTMLCollectionBase {
+interface HTMLCollection<T extends Element> {
+  readonly length: number;
     /**
      * Retrieves a select object or an object from an options collection.
      */
-    namedItem(name: string): Element | null;
+    namedItem(name: string): T | null;
+    item(index: number): T;
+    [index: number]: T;
 }
 
 declare var HTMLCollection: {
@@ -4675,16 +4601,9 @@ declare var HTMLCollection: {
     new(): HTMLCollection;
 };
 
-interface HTMLCollectionOf<T extends Element> extends HTMLCollectionBase {
-    item(index: number): T;
-    namedItem(name: string): T;
-    [index: number]: T;
-}
-
 interface HTMLDListElement extends HTMLElement {
     /** @deprecated */
     compact: boolean;
-
 }
 
 declare var HTMLDListElement: {
@@ -4694,7 +4613,6 @@ declare var HTMLDListElement: {
 
 interface HTMLDataElement extends HTMLElement {
     value: string;
-
 }
 
 declare var HTMLDataElement: {
@@ -4703,8 +4621,7 @@ declare var HTMLDataElement: {
 };
 
 interface HTMLDataListElement extends HTMLElement {
-    readonly options: HTMLCollectionOf<HTMLOptionElement>;
-
+    readonly options: HTMLCollection<HTMLOptionElement>;
 }
 
 declare var HTMLDataListElement: {
@@ -4714,7 +4631,6 @@ declare var HTMLDataListElement: {
 
 interface HTMLDetailsElement extends HTMLElement {
     open: boolean;
-
 }
 
 declare var HTMLDetailsElement: {
@@ -4728,7 +4644,6 @@ interface HTMLDialogElement extends HTMLElement {
     close(returnValue?: string): void;
     show(): void;
     showModal(): void;
-
 }
 
 declare var HTMLDialogElement: {
@@ -4738,7 +4653,6 @@ declare var HTMLDialogElement: {
 
 interface HTMLDirectoryElement extends HTMLElement {
     compact: boolean;
-
 }
 
 declare var HTMLDirectoryElement: {
@@ -4756,7 +4670,6 @@ interface HTMLDivElement extends HTMLElement {
      * Sets or retrieves whether the browser automatically performs wordwrap.
      */
     noWrap: boolean;
-
 }
 
 declare var HTMLDivElement: {
@@ -4764,8 +4677,9 @@ declare var HTMLDivElement: {
     new(): HTMLDivElement;
 };
 
-interface HTMLDocument extends EventTarget<HTMLDocument, DocumentEventType>, Document {
-
+interface HTMLDocument extends Document {
+    /*! @ooml-mapto(addEventListener) */ addHTMLDocumentEventListener<T extends DocumentEventType>(type: __Class<T>, listener: EventListener<HTMLDocument, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeHTMLDocumentEventListener<T extends DocumentEventType>(type: __Class<T>, listener: EventListener<HTMLDocument, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var HTMLDocument: {
@@ -4773,7 +4687,7 @@ declare var HTMLDocument: {
     new(): HTMLDocument;
 };
 
-interface HTMLElementEventMap extends ElementEventMap {
+interface HTMLElementEventType extends ElementEventType {
     "abort": UIEvent;
     "activate": Event;
     "beforeactivate": Event;
@@ -4843,7 +4757,9 @@ interface HTMLElementEventMap extends ElementEventMap {
     "waiting": Event;
 }
 
-interface HTMLElement extends EventTarget<HTMLElement, HTMLElementEventType>, Element, ElementCSSInlineStyle {
+interface HTMLElement extends Element, ElementCSSInlineStyle {
+    /*! @ooml-mapto(addEventListener) */ addHTMLElementEventListener<T extends HTMLElementEventType>(type: __Class<T>, listener: EventListener<HTMLElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeHTMLElementEventListener<T extends HTMLElementEventType>(type: __Class<T>, listener: EventListener<HTMLElement, T>, options?: boolean | EventListenerOptions): void;
     accessKey: string;
     contentEditable: string;
     readonly dataset: DOMStringMap;
@@ -4869,7 +4785,8 @@ interface HTMLElement extends EventTarget<HTMLElement, HTMLElementEventType>, El
     dragDrop(): boolean;
     focus(): void;
     msGetInputContext(): MSInputMethodContext;
-
+    closest<K extends HTMLElement>(selector: __Class<K>): K | null;
+    getElementsByTagName<K extends HTMLElement>(name: __Class<K>): NodeList<K>;
 }
 
 declare var HTMLElement: {
@@ -4925,7 +4842,6 @@ interface HTMLEmbedElement extends HTMLElement, GetSVGDocument {
      * Sets or retrieves the width of the object.
      */
     width: string;
-
 }
 
 declare var HTMLEmbedElement: {
@@ -4965,7 +4881,6 @@ interface HTMLFieldSetElement extends HTMLElement {
      * @param error Sets a custom error message that is displayed when a form is submitted.
      */
     setCustomValidity(error: string): void;
-
 }
 
 declare var HTMLFieldSetElement: {
@@ -4979,7 +4894,6 @@ interface HTMLFontElement extends HTMLElement {
      */
     /** @deprecated */
     face: string;
-
 }
 
 declare var HTMLFontElement: {
@@ -5074,11 +4988,13 @@ declare var HTMLFormElement: {
     new(): HTMLFormElement;
 };
 
-interface HTMLFrameElementEventMap extends HTMLElementEventMap {
+interface HTMLFrameElementEventType extends HTMLElementEventType {
     "load": Event;
 }
 
-interface HTMLFrameElement extends EventTarget<HTMLFrameElement, HTMLFrameElementEventType>, HTMLElement, GetSVGDocument {
+interface HTMLFrameElement extends HTMLElement, GetSVGDocument {
+    /*! @ooml-mapto(addEventListener) */ addHTMLFrameElementEventListener<T extends HTMLFrameElementEventType>(type: __Class<T>, listener: EventListener<HTMLFrameElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeHTMLFrameElementEventListener<T extends HTMLFrameElementEventType>(type: __Class<T>, listener: EventListener<HTMLFrameElement, T>, options?: boolean | EventListenerOptions): void;
     /**
      * Specifies the properties of a border drawn around an object.
      */
@@ -5149,7 +5065,6 @@ interface HTMLFrameElement extends EventTarget<HTMLFrameElement, HTMLFrameElemen
      * Sets or retrieves the width of the object.
      */
     width: string | number;
-
 }
 
 declare var HTMLFrameElement: {
@@ -5157,7 +5072,7 @@ declare var HTMLFrameElement: {
     new(): HTMLFrameElement;
 };
 
-interface HTMLFrameSetElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {
+interface HTMLFrameSetElementEventType extends HTMLElementEventType, WindowEventHandlersEventType {
     "blur": FocusEvent;
     "error": ErrorEvent;
     "focus": FocusEvent;
@@ -5167,7 +5082,9 @@ interface HTMLFrameSetElementEventMap extends HTMLElementEventMap, WindowEventHa
     "scroll": UIEvent;
 }
 
-interface HTMLFrameSetElement extends EventTarget<HTMLFrameSetElement, HTMLFrameSetElementEventType>, HTMLElement, WindowEventHandlers {
+interface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {
+    /*! @ooml-mapto(addEventListener) */ addHTMLFrameSetElementEventListener<T extends HTMLFrameSetElementEventType>(type: __Class<T>, listener: EventListener<HTMLFrameSetElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeHTMLFrameSetElementEventListener<T extends HTMLFrameSetElementEventType>(type: __Class<T>, listener: EventListener<HTMLFrameSetElement, T>, options?: boolean | EventListenerOptions): void;
     /**
      * Sets or retrieves the frame widths of the object.
      */
@@ -5179,7 +5096,6 @@ interface HTMLFrameSetElement extends EventTarget<HTMLFrameSetElement, HTMLFrame
      */
     /** @deprecated */
     rows: string;
-
 }
 
 declare var HTMLFrameSetElement: {
@@ -5203,7 +5119,6 @@ interface HTMLHRElement extends HTMLElement {
      */
     /** @deprecated */
     width: string;
-
 }
 
 declare var HTMLHRElement: {
@@ -5214,7 +5129,6 @@ declare var HTMLHRElement: {
 interface HTMLHeadElement extends HTMLElement {
     /** @deprecated */
     profile: string;
-
 }
 
 declare var HTMLHeadElement: {
@@ -5228,7 +5142,6 @@ interface HTMLHeadingElement extends HTMLElement {
      */
     /** @deprecated */
     align: string;
-
 }
 
 declare var HTMLHeadingElement: {
@@ -5242,7 +5155,6 @@ interface HTMLHtmlElement extends HTMLElement {
      */
     /** @deprecated */
     version: string;
-
 }
 
 declare var HTMLHtmlElement: {
@@ -5250,7 +5162,7 @@ declare var HTMLHtmlElement: {
     new(): HTMLHtmlElement;
 };
 
-interface HTMLHyperlinkElementUtils {
+interface HTMLHyperlinkElement extends HTMLElement {
     hash: string;
     host: string;
     hostname: string;
@@ -5260,14 +5172,15 @@ interface HTMLHyperlinkElementUtils {
     port: string;
     protocol: string;
     search: string;
-    toString(): string;
 }
 
-interface HTMLIFrameElementEventMap extends HTMLElementEventMap {
+interface HTMLIFrameElementEventType extends HTMLElementEventType {
     "load": Event;
 }
 
-interface HTMLIFrameElement extends EventTarget<HTMLIFrameElement, HTMLIFrameElementEventType>, HTMLElement, GetSVGDocument {
+interface HTMLIFrameElement extends HTMLElement, GetSVGDocument {
+    /*! @ooml-mapto(addEventListener) */ addHTMLIFrameElementEventListener<T extends HTMLIFrameElementEventType>(type: __Class<T>, listener: EventListener<HTMLIFrameElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeHTMLIFrameElementEventListener<T extends HTMLIFrameElementEventType>(type: __Class<T>, listener: EventListener<HTMLIFrameElement, T>, options?: boolean | EventListenerOptions): void;
     /**
      * Sets or retrieves how the object is aligned with adjacent text.
      */
@@ -5329,7 +5242,6 @@ interface HTMLIFrameElement extends EventTarget<HTMLIFrameElement, HTMLIFrameEle
      * Sets or retrieves the width of the object.
      */
     width: string;
-
 }
 
 declare var HTMLIFrameElement: {
@@ -5426,7 +5338,6 @@ interface HTMLImageElement extends HTMLElement {
     readonly x: number;
     readonly y: number;
     msGetAsCastingSource(): any;
-
 }
 
 declare var HTMLImageElement: {
@@ -5623,7 +5534,6 @@ interface HTMLInputElement extends HTMLElement {
      * @param n Value to increment the value by.
      */
     stepUp(n?: number): void;
-
 }
 
 declare var HTMLInputElement: {
@@ -5638,7 +5548,6 @@ interface HTMLLIElement extends HTMLElement {
      * Sets or retrieves the value of a list item.
      */
     value: number;
-
 }
 
 declare var HTMLLIElement: {
@@ -5656,7 +5565,6 @@ interface HTMLLabelElement extends HTMLElement {
      * Sets or retrieves the object to which the given label object is assigned.
      */
     htmlFor: string;
-
 }
 
 declare var HTMLLabelElement: {
@@ -5674,7 +5582,6 @@ interface HTMLLegendElement extends HTMLElement {
      * Retrieves a reference to the form that the object is embedded in.
      */
     readonly form: HTMLFormElement | null;
-
 }
 
 declare var HTMLLegendElement: {
@@ -5723,7 +5630,6 @@ interface HTMLLinkElement extends HTMLElement, LinkStyle {
      * Sets or retrieves the MIME type of the object.
      */
     type: string;
-
 }
 
 declare var HTMLLinkElement: {
@@ -5744,12 +5650,11 @@ interface HTMLMapElement extends HTMLElement {
     /**
      * Retrieves a collection of the area objects defined for the given map object.
      */
-    readonly areas: HTMLAreasCollection;
+    readonly areas: HTMLCollection<HTMLAreaElement>;
     /**
      * Sets or retrieves the name of the object.
      */
     name: string;
-
 }
 
 declare var HTMLMapElement: {
@@ -5757,13 +5662,15 @@ declare var HTMLMapElement: {
     new(): HTMLMapElement;
 };
 
-interface HTMLMarqueeElementEventMap extends HTMLElementEventMap {
+interface HTMLMarqueeElementEventType extends HTMLElementEventType {
     "bounce": Event;
     "finish": Event;
     "start": Event;
 }
 
-interface HTMLMarqueeElement extends EventTarget<HTMLMarqueeElement, HTMLMarqueeElementEventType>, HTMLElement {
+interface HTMLMarqueeElement extends HTMLElement {
+    /*! @ooml-mapto(addEventListener) */ addHTMLMarqueeElementEventListener<T extends HTMLMarqueeElementEventType>(type: __Class<T>, listener: EventListener<HTMLMarqueeElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeHTMLMarqueeElementEventListener<T extends HTMLMarqueeElementEventType>(type: __Class<T>, listener: EventListener<HTMLMarqueeElement, T>, options?: boolean | EventListenerOptions): void;
     /** @deprecated */
     behavior: string;
     /** @deprecated */
@@ -5790,7 +5697,6 @@ interface HTMLMarqueeElement extends EventTarget<HTMLMarqueeElement, HTMLMarquee
     start(): void;
     /** @deprecated */
     stop(): void;
-
 }
 
 declare var HTMLMarqueeElement: {
@@ -5798,12 +5704,14 @@ declare var HTMLMarqueeElement: {
     new(): HTMLMarqueeElement;
 };
 
-interface HTMLMediaElementEventMap extends HTMLElementEventMap {
+interface HTMLMediaElementEventType extends HTMLElementEventType {
     "encrypted": MediaEncryptedEvent;
     "msneedkey": Event;
 }
 
-interface HTMLMediaElement extends EventTarget<HTMLMediaElement, HTMLMediaElementEventType>, HTMLElement {
+interface HTMLMediaElement extends HTMLElement {
+    /*! @ooml-mapto(addEventListener) */ addHTMLMediaElementEventListener<T extends HTMLMediaElementEventType>(type: __Class<T>, listener: EventListener<HTMLMediaElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeHTMLMediaElementEventListener<T extends HTMLMediaElementEventType>(type: __Class<T>, listener: EventListener<HTMLMediaElement, T>, options?: boolean | EventListenerOptions): void;
     /**
      * Returns an AudioTrackList object with the audio tracks for a given video element.
      */
@@ -5982,7 +5890,6 @@ interface HTMLMenuElement extends HTMLElement {
     /** @deprecated */
     compact: boolean;
     type: string;
-
 }
 
 declare var HTMLMenuElement: {
@@ -6018,7 +5925,6 @@ interface HTMLMetaElement extends HTMLElement {
      */
     /** @deprecated */
     url: string;
-
 }
 
 declare var HTMLMetaElement: {
@@ -6033,7 +5939,6 @@ interface HTMLMeterElement extends HTMLElement {
     min: number;
     optimum: number;
     value: number;
-
 }
 
 declare var HTMLMeterElement: {
@@ -6050,7 +5955,6 @@ interface HTMLModElement extends HTMLElement {
      * Sets or retrieves the date and time of a modification to the object.
      */
     dateTime: string;
-
 }
 
 declare var HTMLModElement: {
@@ -6066,7 +5970,6 @@ interface HTMLOListElement extends HTMLElement {
      */
     start: number;
     type: string;
-
 }
 
 declare var HTMLOListElement: {
@@ -6185,7 +6088,6 @@ interface HTMLObjectElement extends HTMLElement, GetSVGDocument {
      * @param error Sets a custom error message that is displayed when a form is submitted.
      */
     setCustomValidity(error: string): void;
-
 }
 
 declare var HTMLObjectElement: {
@@ -6203,7 +6105,6 @@ interface HTMLOptGroupElement extends HTMLElement {
      * Sets or retrieves a value that you can use to implement your own label functionality for the object.
      */
     label: string;
-
 }
 
 declare var HTMLOptGroupElement: {
@@ -6241,7 +6142,6 @@ interface HTMLOptionElement extends HTMLElement {
      * Sets or retrieves the value which is returned to the server when the form control is submitted.
      */
     value: string;
-
 }
 
 declare var HTMLOptionElement: {
@@ -6249,7 +6149,7 @@ declare var HTMLOptionElement: {
     new(): HTMLOptionElement;
 };
 
-interface HTMLOptionsCollection extends HTMLCollectionOf<HTMLOptionElement> {
+interface HTMLOptionsCollection extends HTMLCollection<HTMLOptionElement> {
     length: number;
     selectedIndex: number;
     add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null): void;
@@ -6274,7 +6174,6 @@ interface HTMLOutputElement extends HTMLElement {
     checkValidity(): boolean;
     reportValidity(): boolean;
     setCustomValidity(error: string): void;
-
 }
 
 declare var HTMLOutputElement: {
@@ -6289,7 +6188,6 @@ interface HTMLParagraphElement extends HTMLElement {
     /** @deprecated */
     align: string;
     clear: string;
-
 }
 
 declare var HTMLParagraphElement: {
@@ -6316,7 +6214,6 @@ interface HTMLParamElement extends HTMLElement {
      */
     /** @deprecated */
     valueType: string;
-
 }
 
 declare var HTMLParamElement: {
@@ -6339,7 +6236,6 @@ interface HTMLPreElement extends HTMLElement {
      */
     /** @deprecated */
     width: number;
-
 }
 
 declare var HTMLPreElement: {
@@ -6364,7 +6260,6 @@ interface HTMLProgressElement extends HTMLElement {
      * Sets or gets the current value of a progress element. The value must be a non-negative number between 0 and the max value.
      */
     value: number;
-
 }
 
 declare var HTMLProgressElement: {
@@ -6377,7 +6272,6 @@ interface HTMLQuoteElement extends HTMLElement {
      * Sets or retrieves reference information about the object.
      */
     cite: string;
-
 }
 
 declare var HTMLQuoteElement: {
@@ -6420,7 +6314,6 @@ interface HTMLScriptElement extends HTMLElement {
      * Sets or retrieves the MIME type for the associated scripting engine.
      */
     type: string;
-
 }
 
 declare var HTMLScriptElement: {
@@ -6459,7 +6352,7 @@ interface HTMLSelectElement extends HTMLElement {
      * Sets or retrieves the index of the selected option in a select object.
      */
     selectedIndex: number;
-    readonly selectedOptions: HTMLCollectionOf<HTMLOptionElement>;
+    readonly selectedOptions: HTMLCollection<HTMLOptionElement>;
     /**
      * Sets or retrieves the number of rows in the list box.
      */
@@ -6528,7 +6421,6 @@ declare var HTMLSelectElement: {
 interface HTMLSlotElement extends HTMLElement {
     name: string;
     assignedNodes(options?: AssignedNodesOptions): Node[];
-
 }
 
 interface HTMLSourceElement extends HTMLElement {
@@ -6548,7 +6440,6 @@ interface HTMLSourceElement extends HTMLElement {
      * Gets or sets the MIME type of a media resource.
      */
     type: string;
-
 }
 
 declare var HTMLSourceElement: {
@@ -6576,7 +6467,6 @@ interface HTMLStyleElement extends HTMLElement, LinkStyle {
      * Retrieves the CSS language in which the style sheet is written.
      */
     type: string;
-
 }
 
 declare var HTMLStyleElement: {
@@ -6599,7 +6489,6 @@ interface HTMLTableCaptionElement extends HTMLElement {
      */
     /** @deprecated */
     align: string;
-
 }
 
 declare var HTMLTableCaptionElement: {
@@ -6665,7 +6554,6 @@ interface HTMLTableCellElement extends HTMLElement {
      */
     /** @deprecated */
     width: string;
-
 }
 
 declare var HTMLTableCellElement: {
@@ -6694,7 +6582,6 @@ interface HTMLTableColElement extends HTMLElement {
      */
     /** @deprecated */
     width: string;
-
 }
 
 declare var HTMLTableColElement: {
@@ -6746,7 +6633,7 @@ interface HTMLTableElement extends HTMLElement {
     /**
      * Sets or retrieves the number of horizontal rows contained in the object.
      */
-    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;
+    readonly rows: HTMLCollection<HTMLTableRowElement>;
     /**
      * Sets or retrieves which dividing lines (inner borders) are displayed.
      */
@@ -6760,7 +6647,7 @@ interface HTMLTableElement extends HTMLElement {
     /**
      * Retrieves a collection of all tBody objects in the table. Objects in this collection are in source order.
      */
-    readonly tBodies: HTMLCollectionOf<HTMLTableSectionElement>;
+    readonly tBodies: HTMLCollection<HTMLTableSectionElement>;
     /**
      * Retrieves the tFoot object of the table.
      */
@@ -6812,7 +6699,6 @@ interface HTMLTableElement extends HTMLElement {
      * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.
      */
     insertRow(index?: number): HTMLTableRowElement;
-
 }
 
 declare var HTMLTableElement: {
@@ -6822,7 +6708,6 @@ declare var HTMLTableElement: {
 
 interface HTMLTableHeaderCellElement extends HTMLTableCellElement {
     scope: string;
-
 }
 
 declare var HTMLTableHeaderCellElement: {
@@ -6841,7 +6726,7 @@ interface HTMLTableRowElement extends HTMLElement {
     /**
      * Retrieves a collection of all cells in the table row.
      */
-    readonly cells: HTMLCollectionOf<HTMLTableDataCellElement | HTMLTableHeaderCellElement>;
+    readonly cells: HTMLCollection<HTMLTableCellElement>;
     /** @deprecated */
     ch: string;
     /** @deprecated */
@@ -6866,7 +6751,6 @@ interface HTMLTableRowElement extends HTMLElement {
      * @param index Number that specifies where to insert the cell in the tr. The default value is -1, which appends the new cell to the end of the cells collection.
      */
     insertCell(index?: number): HTMLTableDataCellElement;
-
 }
 
 declare var HTMLTableRowElement: {
@@ -6887,7 +6771,7 @@ interface HTMLTableSectionElement extends HTMLElement {
     /**
      * Sets or retrieves the number of horizontal rows contained in the object.
      */
-    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;
+    readonly rows: HTMLCollection<HTMLTableRowElement>;
     /** @deprecated */
     vAlign: string;
     /**
@@ -6900,7 +6784,6 @@ interface HTMLTableSectionElement extends HTMLElement {
      * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.
      */
     insertRow(index?: number): HTMLTableRowElement;
-
 }
 
 declare var HTMLTableSectionElement: {
@@ -6910,7 +6793,6 @@ declare var HTMLTableSectionElement: {
 
 interface HTMLTemplateElement extends HTMLElement {
     readonly content: DocumentFragment;
-
 }
 
 declare var HTMLTemplateElement: {
@@ -7013,7 +6895,6 @@ interface HTMLTextAreaElement extends HTMLElement {
      * @param direction The direction in which the selection is performed.
      */
     setSelectionRange(start: number, end: number, direction?: "forward" | "backward" | "none"): void;
-
 }
 
 declare var HTMLTextAreaElement: {
@@ -7023,7 +6904,6 @@ declare var HTMLTextAreaElement: {
 
 interface HTMLTimeElement extends HTMLElement {
     dateTime: string;
-
 }
 
 declare var HTMLTimeElement: {
@@ -7036,7 +6916,6 @@ interface HTMLTitleElement extends HTMLElement {
      * Retrieves or sets the text of the object as a string.
      */
     text: string;
-
 }
 
 declare var HTMLTitleElement: {
@@ -7052,7 +6931,6 @@ interface HTMLTrackElement extends HTMLElement {
     src: string;
     srclang: string;
     readonly track: TextTrack;
-
 }
 
 declare var HTMLTrackElement: {
@@ -7069,7 +6947,6 @@ interface HTMLUListElement extends HTMLElement {
     compact: boolean;
     /** @deprecated */
     type: string;
-
 }
 
 declare var HTMLUListElement: {
@@ -7086,13 +6963,15 @@ declare var HTMLUnknownElement: {
     new(): HTMLUnknownElement;
 };
 
-interface HTMLVideoElementEventMap extends HTMLMediaElementEventMap {
+interface HTMLVideoElementEventType extends HTMLMediaElementEventType {
     "MSVideoFormatChanged": Event;
     "MSVideoFrameStepCompleted": Event;
     "MSVideoOptimalLayoutChanged": Event;
 }
 
-interface HTMLVideoElement extends EventTarget<HTMLVideoElement, HTMLVideoElementEventType>, HTMLMediaElement {
+interface HTMLVideoElement extends HTMLMediaElement {
+    /*! @ooml-mapto(addEventListener) */ addHTMLVideoElementEventListener<T extends HTMLVideoElementEventType>(type: __Class<T>, listener: EventListener<HTMLVideoElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeHTMLVideoElementEventListener<T extends HTMLVideoElementEventType>(type: __Class<T>, listener: EventListener<HTMLVideoElement, T>, options?: boolean | EventListenerOptions): void;
     /**
      * Gets or sets the height of the video element.
      */
@@ -7129,7 +7008,6 @@ interface HTMLVideoElement extends EventTarget<HTMLVideoElement, HTMLVideoElemen
     webkitEnterFullscreen(): void;
     webkitExitFullScreen(): void;
     webkitExitFullscreen(): void;
-
 }
 
 declare var HTMLVideoElement: {
@@ -7159,7 +7037,7 @@ declare var HashChangeEvent: {
 interface Headers {
     append(name: string, value: string): void;
     delete(name: string): void;
-    forEach(callback: Function, thisArg?: any): void;
+    forEach(callback: IterationConsumer<string, string, Headers>): void;
     get(name: string): string | null;
     has(name: string): boolean;
     set(name: string, value: string): void;
@@ -7224,12 +7102,14 @@ declare var IDBCursorWithValue: {
     new(): IDBCursorWithValue;
 };
 
-interface IDBDatabaseEventMap {
+interface IDBDatabaseEventType {
     "abort": Event;
     "error": Event;
 }
 
-interface IDBDatabase extends EventTarget<IDBDatabase, IDBDatabaseEventType> {
+interface IDBDatabase extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addIDBDatabaseEventListener<T extends IDBDatabaseEventType>(type: __Class<T>, listener: EventListener<IDBDatabase, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeIDBDatabaseEventListener<T extends IDBDatabaseEventType>(type: __Class<T>, listener: EventListener<IDBDatabase, T>, options?: boolean | EventListenerOptions): void;
     readonly name: string;
     readonly objectStoreNames: DOMStringList;
     readonly version: number;
@@ -7237,7 +7117,6 @@ interface IDBDatabase extends EventTarget<IDBDatabase, IDBDatabaseEventType> {
     createObjectStore(name: string, optionalParameters?: IDBObjectStoreParameters): IDBObjectStore;
     deleteObjectStore(name: string): void;
     transaction(storeNames: string | string[], mode?: IDBTransactionMode): IDBTransaction;
-
 }
 
 declare var IDBDatabase: {
@@ -7313,13 +7192,14 @@ declare var IDBObjectStore: {
     new(): IDBObjectStore;
 };
 
-interface IDBOpenDBRequestEventMap extends IDBRequestEventMap {
+interface IDBOpenDBRequestEventType extends IDBRequestEventType {
     "blocked": Event;
     "upgradeneeded": IDBVersionChangeEvent;
 }
 
-interface IDBOpenDBRequest extends EventTarget<IDBOpenDBRequest, IDBOpenDBRequestEventType>, IDBRequest {
-
+interface IDBOpenDBRequest extends IDBRequest {
+    /*! @ooml-mapto(addEventListener) */ addIDBOpenDBRequestEventListener<T extends IDBOpenDBRequestEventType>(type: __Class<T>, listener: EventListener<IDBOpenDBRequest, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeIDBOpenDBRequestEventListener<T extends IDBOpenDBRequestEventType>(type: __Class<T>, listener: EventListener<IDBOpenDBRequest, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var IDBOpenDBRequest: {
@@ -7327,18 +7207,19 @@ declare var IDBOpenDBRequest: {
     new(): IDBOpenDBRequest;
 };
 
-interface IDBRequestEventMap {
+interface IDBRequestEventType {
     "error": Event;
     "success": Event;
 }
 
-interface IDBRequest extends EventTarget<IDBRequest, IDBRequestEventType> {
+interface IDBRequest extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addIDBRequestEventListener<T extends IDBRequestEventType>(type: __Class<T>, listener: EventListener<IDBRequest, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeIDBRequestEventListener<T extends IDBRequestEventType>(type: __Class<T>, listener: EventListener<IDBRequest, T>, options?: boolean | EventListenerOptions): void;
     readonly error: DOMException;
     readonly readyState: IDBRequestReadyState;
     readonly result: any;
     readonly source: IDBObjectStore | IDBIndex | IDBCursor;
     readonly transaction: IDBTransaction;
-
 }
 
 declare var IDBRequest: {
@@ -7346,19 +7227,20 @@ declare var IDBRequest: {
     new(): IDBRequest;
 };
 
-interface IDBTransactionEventMap {
+interface IDBTransactionEventType {
     "abort": Event;
     "complete": Event;
     "error": Event;
 }
 
-interface IDBTransaction extends EventTarget<IDBTransaction, IDBTransactionEventType> {
+interface IDBTransaction extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addIDBTransactionEventListener<T extends IDBTransactionEventType>(type: __Class<T>, listener: EventListener<IDBTransaction, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeIDBTransactionEventListener<T extends IDBTransactionEventType>(type: __Class<T>, listener: EventListener<IDBTransaction, T>, options?: boolean | EventListenerOptions): void;
     readonly db: IDBDatabase;
     readonly error: DOMException;
     readonly mode: IDBTransactionMode;
     abort(): void;
     objectStore(name: string): IDBObjectStore;
-
 }
 
 declare var IDBTransaction: {
@@ -7505,7 +7387,6 @@ interface Location {
     assign(url: string): void;
     reload(forcedReload?: boolean): void;
     replace(url: string): void;
-    toString(): string;
 }
 
 declare var Location: {
@@ -7595,11 +7476,6 @@ declare var MSFIDOSignatureAssertion: {
     new(): MSFIDOSignatureAssertion;
 };
 
-interface MSFileSaver {
-    msSaveBlob(blob: any, defaultName?: string): boolean;
-    msSaveOrOpenBlob(blob: any, defaultName?: string): boolean;
-}
-
 interface MSGesture {
     target: Element;
     addPointer(pointerId: number): void;
@@ -7652,13 +7528,15 @@ declare var MSGraphicsTrust: {
     new(): MSGraphicsTrust;
 };
 
-interface MSInputMethodContextEventMap {
+interface MSInputMethodContextEventType {
     "MSCandidateWindowHide": Event;
     "MSCandidateWindowShow": Event;
     "MSCandidateWindowUpdate": Event;
 }
 
-interface MSInputMethodContext extends EventTarget<MSInputMethodContext, MSInputMethodContextEventType> {
+interface MSInputMethodContext extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addMSInputMethodContextEventListener<T extends MSInputMethodContextEventType>(type: __Class<T>, listener: EventListener<MSInputMethodContext, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeMSInputMethodContextEventListener<T extends MSInputMethodContextEventType>(type: __Class<T>, listener: EventListener<MSInputMethodContext, T>, options?: boolean | EventListenerOptions): void;
     readonly compositionEndOffset: number;
     readonly compositionStartOffset: number;
     readonly target: HTMLElement;
@@ -7666,7 +7544,6 @@ interface MSInputMethodContext extends EventTarget<MSInputMethodContext, MSInput
     getCompositionAlternatives(): string[];
     hasComposition(): boolean;
     isCandidateWindowVisible(): boolean;
-
 }
 
 declare var MSInputMethodContext: {
@@ -7734,15 +7611,6 @@ declare var MSMediaKeys: {
     isTypeSupportedWithFeatures(keySystem: string, type?: string | null): string;
 };
 
-interface MSNavigatorDoNotTrack {
-    confirmSiteSpecificTrackingException(args: ConfirmSiteSpecificExceptionsInformation): boolean;
-    confirmWebWideTrackingException(args: ExceptionInformation): boolean;
-    removeSiteSpecificTrackingException(args: ExceptionInformation): void;
-    removeWebWideTrackingException(args: ExceptionInformation): void;
-    storeSiteSpecificTrackingException(args: StoreSiteSpecificExceptionsInformation): void;
-    storeWebWideTrackingException(args: StoreExceptionsInformation): void;
-}
-
 interface MSPointerEvent extends MouseEvent {
     readonly currentPoint: any;
     readonly height: number;
@@ -7777,7 +7645,7 @@ declare var MSStream: {
     new(): MSStream;
 };
 
-interface MSStreamReaderEventMap {
+interface MSStreamReaderEventType {
     "abort": UIEvent;
     "error": ErrorEvent;
     "load": Event;
@@ -7786,7 +7654,9 @@ interface MSStreamReaderEventMap {
     "progress": ProgressEvent;
 }
 
-interface MSStreamReader extends EventTarget<MSStreamReader, MSStreamReaderEventType> {
+interface MSStreamReader extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addMSStreamReaderEventListener<T extends MSStreamReaderEventType>(type: __Class<T>, listener: EventListener<MSStreamReader, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeMSStreamReaderEventListener<T extends MSStreamReaderEventType>(type: __Class<T>, listener: EventListener<MSStreamReader, T>, options?: boolean | EventListenerOptions): void;
     readonly error: DOMError;
     readonly readyState: number;
     readonly result: any;
@@ -7796,7 +7666,6 @@ interface MSStreamReader extends EventTarget<MSStreamReader, MSStreamReaderEvent
     readAsBlob(stream: MSStream, size?: number): void;
     readAsDataURL(stream: MSStream, size?: number): void;
     readAsText(stream: MSStream, encoding?: string, size?: number): void;
-
 }
 
 declare var MSStreamReader: {
@@ -7819,15 +7688,16 @@ declare var MediaDeviceInfo: {
     new(): MediaDeviceInfo;
 };
 
-interface MediaDevicesEventMap {
+interface MediaDevicesEventType {
     "devicechange": Event;
 }
 
-interface MediaDevices extends EventTarget<MediaDevices, MediaDevicesEventType> {
+interface MediaDevices extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addMediaDevicesEventListener<T extends MediaDevicesEventType>(type: __Class<T>, listener: EventListener<MediaDevices, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeMediaDevicesEventListener<T extends MediaDevicesEventType>(type: __Class<T>, listener: EventListener<MediaDevices, T>, options?: boolean | EventListenerOptions): void;
     enumerateDevices(): Promise<MediaDeviceInfo[]>;
     getSupportedConstraints(): MediaTrackSupportedConstraints;
     getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream>;
-
 }
 
 declare var MediaDevices: {
@@ -7898,7 +7768,7 @@ declare var MediaKeySession: {
 
 interface MediaKeyStatusMap {
     readonly size: number;
-    forEach(callback: Function, thisArg?: any): void;
+    forEach(callback: IterationConsumer<BufferSource, MediaKeyStatus, MediaKeyStatusMap>): void;
     get(keyId: BufferSource | null): MediaKeyStatus;
     has(keyId: BufferSource | null): boolean;
 }
@@ -7935,7 +7805,6 @@ interface MediaList {
     appendMedium(medium: string): void;
     deleteMedium(medium: string): void;
     item(index: number): string | null;
-    toString(): number;
     [index: number]: string;
 }
 
@@ -7972,14 +7841,16 @@ declare var MediaSource: {
     isTypeSupported(type: string): boolean;
 };
 
-interface MediaStreamEventMap {
+interface MediaStreamEventType {
     "active": Event;
     "addtrack": MediaStreamTrackEvent;
     "inactive": Event;
     "removetrack": MediaStreamTrackEvent;
 }
 
-interface MediaStream extends EventTarget<MediaStream, MediaStreamEventType> {
+interface MediaStream extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addMediaStreamEventListener<T extends MediaStreamEventType>(type: __Class<T>, listener: EventListener<MediaStream, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeMediaStreamEventListener<T extends MediaStreamEventType>(type: __Class<T>, listener: EventListener<MediaStream, T>, options?: boolean | EventListenerOptions): void;
     readonly active: boolean;
     readonly id: string;
     addTrack(track: MediaStreamTrack): void;
@@ -7990,7 +7861,6 @@ interface MediaStream extends EventTarget<MediaStream, MediaStreamEventType> {
     getVideoTracks(): MediaStreamTrack[];
     removeTrack(track: MediaStreamTrack): void;
     stop(): void;
-
 }
 
 declare var MediaStream: {
@@ -8037,14 +7907,16 @@ declare var MediaStreamEvent: {
     new(type: string, eventInitDict: MediaStreamEventInit): MediaStreamEvent;
 };
 
-interface MediaStreamTrackEventMap {
+interface MediaStreamTrackEventType {
     "ended": MediaStreamErrorEvent;
     "mute": Event;
     "overconstrained": MediaStreamErrorEvent;
     "unmute": Event;
 }
 
-interface MediaStreamTrack extends EventTarget<MediaStreamTrack, MediaStreamTrackEventType> {
+interface MediaStreamTrack extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addMediaStreamTrackEventListener<T extends MediaStreamTrackEventType>(type: __Class<T>, listener: EventListener<MediaStreamTrack, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeMediaStreamTrackEventListener<T extends MediaStreamTrackEventType>(type: __Class<T>, listener: EventListener<MediaStreamTrack, T>, options?: boolean | EventListenerOptions): void;
     enabled: boolean;
     readonly id: string;
     readonly kind: string;
@@ -8059,7 +7931,6 @@ interface MediaStreamTrack extends EventTarget<MediaStreamTrack, MediaStreamTrac
     getConstraints(): MediaTrackConstraints;
     getSettings(): MediaTrackSettings;
     stop(): void;
-
 }
 
 declare var MediaStreamTrack: {
@@ -8099,15 +7970,16 @@ declare var MessageEvent: {
     new(type: string, eventInitDict?: MessageEventInit): MessageEvent;
 };
 
-interface MessagePortEventMap {
+interface MessagePortEventType {
     "message": MessageEvent;
 }
 
-interface MessagePort extends EventTarget<MessagePort, MessagePortEventType> {
+interface MessagePort extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addMessagePortEventListener<T extends MessagePortEventType>(type: __Class<T>, listener: EventListener<MessagePort, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeMessagePortEventListener<T extends MessagePortEventType>(type: __Class<T>, listener: EventListener<MessagePort, T>, options?: boolean | EventListenerOptions): void;
     close(): void;
     postMessage(message?: any, transfer?: any[]): void;
     start(): void;
-
 }
 
 declare var MessagePort: {
@@ -8205,13 +8077,13 @@ declare var MutationObserver: {
 };
 
 interface MutationRecord {
-    readonly addedNodes: NodeList;
+    readonly addedNodes: NodeList<Node>;
     readonly attributeName: string | null;
     readonly attributeNamespace: string | null;
     readonly nextSibling: Node | null;
     readonly oldValue: string | null;
     readonly previousSibling: Node | null;
-    readonly removedNodes: NodeList;
+    readonly removedNodes: NodeList<Node>;
     readonly target: Node;
     readonly type: MutationRecordType;
 }
@@ -8238,7 +8110,7 @@ declare var NamedNodeMap: {
     new(): NamedNodeMap;
 };
 
-interface Navigator extends NavigatorID, NavigatorOnLine, NavigatorContentUtils, NavigatorStorageUtils, MSNavigatorDoNotTrack, MSFileSaver, NavigatorBeacon, NavigatorConcurrentHardware, NavigatorUserMedia, NavigatorLanguage {
+interface Navigator {
     readonly activeVRDisplays: ReadonlyArray<VRDisplay>;
     readonly authentication: WebAuthentication;
     readonly cookieEnabled: boolean;
@@ -8260,25 +8132,7 @@ interface Navigator extends NavigatorID, NavigatorOnLine, NavigatorContentUtils,
     msLaunchUri(uri: string, successCallback?: MSLaunchUriCallback, noHandlerCallback?: MSLaunchUriCallback): void;
     requestMediaKeySystemAccess(keySystem: string, supportedConfigurations: MediaKeySystemConfiguration[]): Promise<MediaKeySystemAccess>;
     vibrate(pattern: number | number[]): boolean;
-}
 
-declare var Navigator: {
-    prototype: Navigator;
-    new(): Navigator;
-};
-
-interface NavigatorBeacon {
-    sendBeacon(url: string, data?: Blob | BufferSource | FormData | string | null): boolean;
-}
-
-interface NavigatorConcurrentHardware {
-    readonly hardwareConcurrency: number;
-}
-
-interface NavigatorContentUtils {
-}
-
-interface NavigatorID {
     readonly appCodeName: string;
     readonly appName: string;
     readonly appVersion: string;
@@ -8288,29 +8142,33 @@ interface NavigatorID {
     readonly userAgent: string;
     readonly vendor: string;
     readonly vendorSub: string;
-}
-
-interface NavigatorLanguage {
     readonly language: string;
     readonly languages: ReadonlyArray<string>;
-}
-
-interface NavigatorOnLine {
     readonly onLine: boolean;
-}
-
-interface NavigatorStorageUtils {
-}
-
-interface NavigatorUserMedia {
     readonly mediaDevices: MediaDevices;
     getDisplayMedia(constraints: MediaStreamConstraints): Promise<MediaStream>;
     getUserMedia(constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback): void;
+    readonly hardwareConcurrency: number;
+    sendBeacon(url: string, data?: Blob | BufferSource | FormData | string | null): boolean;
+
+    confirmSiteSpecificTrackingException(args: ConfirmSiteSpecificExceptionsInformation): boolean;
+    confirmWebWideTrackingException(args: ExceptionInformation): boolean;
+    removeSiteSpecificTrackingException(args: ExceptionInformation): void;
+    removeWebWideTrackingException(args: ExceptionInformation): void;
+    storeSiteSpecificTrackingException(args: StoreSiteSpecificExceptionsInformation): void;
+    storeWebWideTrackingException(args: StoreExceptionsInformation): void;
+    msSaveBlob(blob: any, defaultName?: string): boolean;
+    msSaveOrOpenBlob(blob: any, defaultName?: string): boolean;
 }
 
+declare var Navigator: {
+    prototype: Navigator;
+    new(): Navigator;
+};
+
 interface Node extends EventTarget /*! @ooml-abstract */ {
     readonly baseURI: string | null;
-    readonly childNodes: NodeListOf<Node>;
+    readonly childNodes: NodeList<Node>;
     readonly firstChild: Node | null;
     readonly isConnected: boolean;
     readonly lastChild: Node | null;
@@ -8400,36 +8258,32 @@ declare var NodeIterator: {
     new(): NodeIterator;
 };
 
-interface NodeList {
+interface NodeList<T extends Node> {
     readonly length: number;
     item(index: number): Node;
     [index: number]: Node;
 }
 
 declare var NodeList: {
-    prototype: NodeList;
-    new(): NodeList;
+    prototype: NodeList<Node>;
+    new(): NodeList<Node>;
 };
 
-interface NodeListOf<TNode extends Node> extends NodeList {
-    length: number;
-    item(index: number): TNode;
-    [index: number]: TNode;
-}
-
 interface NodeSelector {
     querySelector<E extends Element = Element>(selectors: string): E | null;
-    querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;
+    querySelectorAll<E extends Element = Element>(selectors: string): NodeList<E>;
 }
 
-interface NotificationEventMap {
+interface NotificationEventType {
     "click": Event;
     "close": Event;
     "error": Event;
     "show": Event;
 }
 
-interface Notification extends EventTarget<Notification, NotificationEventType> {
+interface Notification extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addNotificationEventListener<T extends NotificationEventType>(type: __Class<T>, listener: EventListener<Notification, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeNotificationEventListener<T extends NotificationEventType>(type: __Class<T>, listener: EventListener<Notification, T>, options?: boolean | EventListenerOptions): void;
     readonly body: string | null;
     readonly data: any;
     readonly dir: NotificationDirection;
@@ -8439,7 +8293,6 @@ interface Notification extends EventTarget<Notification, NotificationEventType>
     readonly tag: string | null;
     readonly title: string;
     close(): void;
-
 }
 
 declare var Notification: {
@@ -8515,15 +8368,16 @@ declare var OfflineAudioCompletionEvent: {
     new(): OfflineAudioCompletionEvent;
 };
 
-interface OfflineAudioContextEventMap extends AudioContextEventMap {
+interface OfflineAudioContextEventType extends AudioContextEventType {
     "complete": OfflineAudioCompletionEvent;
 }
 
-interface OfflineAudioContext extends EventTarget<OfflineAudioContext, OfflineAudioContextEventType>, AudioContextBase {
+interface OfflineAudioContext extends AudioContextBase {
+    /*! @ooml-mapto(addEventListener) */ addOfflineAudioContextEventListener<T extends OfflineAudioContextEventType>(type: __Class<T>, listener: EventListener<OfflineAudioContext, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeOfflineAudioContextEventListener<T extends OfflineAudioContextEventType>(type: __Class<T>, listener: EventListener<OfflineAudioContext, T>, options?: boolean | EventListenerOptions): void;
     readonly length: number;
     startRendering(): Promise<AudioBuffer>;
     suspend(suspendTime: number): Promise<void>;
-
 }
 
 declare var OfflineAudioContext: {
@@ -8531,18 +8385,19 @@ declare var OfflineAudioContext: {
     new(numberOfChannels: number, length: number, sampleRate: number): OfflineAudioContext;
 };
 
-interface OscillatorNodeEventMap {
+interface OscillatorNodeEventType {
     "ended": Event;
 }
 
-interface OscillatorNode extends EventTarget<OscillatorNode, OscillatorNodeEventType>, AudioNode {
+interface OscillatorNode extends AudioNode {
+    /*! @ooml-mapto(addEventListener) */ addOscillatorNodeEventListener<T extends OscillatorNodeEventType>(type: __Class<T>, listener: EventListener<OscillatorNode, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeOscillatorNodeEventListener<T extends OscillatorNodeEventType>(type: __Class<T>, listener: EventListener<OscillatorNode, T>, options?: boolean | EventListenerOptions): void;
     readonly detune: AudioParam;
     readonly frequency: AudioParam;
     type: OscillatorType;
     setPeriodicWave(periodicWave: PeriodicWave): void;
     start(when?: number): void;
     stop(when?: number): void;
-
 }
 
 declare var OscillatorNode: {
@@ -8595,13 +8450,13 @@ declare var PannerNode: {
     new(): PannerNode;
 };
 
-interface ParentNode {
+interface ParentNode /*! @ooml-interface */ {
     readonly childElementCount: number;
     readonly firstElementChild: Element | null;
     readonly lastElementChild: Element | null;
     readonly children: HTMLCollection;
     querySelector<E extends Element = Element>(selectors: string): E | null;
-    querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;
+    querySelectorAll<E extends Element = Element>(selectors: string): NodeList<E>;
 }
 
 interface Path2D extends CanvasPathMethods {
@@ -8632,12 +8487,14 @@ declare var PaymentAddress: {
     new(): PaymentAddress;
 };
 
-interface PaymentRequestEventMap {
+interface PaymentRequestEventType {
     "shippingaddresschange": Event;
     "shippingoptionchange": Event;
 }
 
-interface PaymentRequest extends EventTarget<PaymentRequest, PaymentRequestEventType> {
+interface PaymentRequest extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addPaymentRequestEventListener<T extends PaymentRequestEventType>(type: __Class<T>, listener: EventListener<PaymentRequest, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removePaymentRequestEventListener<T extends PaymentRequestEventType>(type: __Class<T>, listener: EventListener<PaymentRequest, T>, options?: boolean | EventListenerOptions): void;
     readonly id: string;
     readonly shippingAddress: PaymentAddress | null;
     readonly shippingOption: string | null;
@@ -8645,7 +8502,6 @@ interface PaymentRequest extends EventTarget<PaymentRequest, PaymentRequestEvent
     abort(): Promise<void>;
     canMakePayment(): Promise<boolean>;
     show(): Promise<PaymentResponse>;
-
 }
 
 declare var PaymentRequest: {
@@ -8680,35 +8536,6 @@ declare var PaymentResponse: {
     new(): PaymentResponse;
 };
 
-interface PerfWidgetExternal {
-    readonly activeNetworkRequestCount: number;
-    readonly averageFrameTime: number;
-    readonly averagePaintTime: number;
-    readonly extraInformationEnabled: boolean;
-    readonly independentRenderingEnabled: boolean;
-    readonly irDisablingContentString: string;
-    readonly irStatusAvailable: boolean;
-    readonly maxCpuSpeed: number;
-    readonly paintRequestsPerSecond: number;
-    readonly performanceCounter: number;
-    readonly performanceCounterFrequency: number;
-    addEventListener(eventType: string, callback: Function): void;
-    getMemoryUsage(): number;
-    getProcessCpuUsage(): number;
-    getRecentCpuUsage(last: number | null): any;
-    getRecentFrames(last: number | null): any;
-    getRecentMemoryUsage(last: number | null): any;
-    getRecentPaintRequests(last: number | null): any;
-    removeEventListener(eventType: string, callback: Function): void;
-    repositionWindow(x: number, y: number): void;
-    resizeWindow(width: number, height: number): void;
-}
-
-declare var PerfWidgetExternal: {
-    prototype: PerfWidgetExternal;
-    new(): PerfWidgetExternal;
-};
-
 interface Performance {
     /** @deprecated */
     readonly navigation: PerformanceNavigation;
@@ -8976,7 +8803,6 @@ declare var Position: {
 interface PositionError {
     readonly code: number;
     readonly message: string;
-    toString(): string;
 }
 
 declare var PositionError: {
@@ -9063,12 +8889,14 @@ declare var RTCDTMFToneChangeEvent: {
     new(typeArg: string, eventInitDict: RTCDTMFToneChangeEventInit): RTCDTMFToneChangeEvent;
 };
 
-interface RTCDtlsTransportEventMap {
+interface RTCDtlsTransportEventType {
     "dtlsstatechange": RTCDtlsTransportStateChangedEvent;
     "error": Event;
 }
 
-interface RTCDtlsTransport extends EventTarget<RTCDtlsTransport, RTCDtlsTransportEventType>, RTCStatsProvider {
+interface RTCDtlsTransport extends RTCStatsProvider {
+    /*! @ooml-mapto(addEventListener) */ addRTCDtlsTransportEventListener<T extends RTCDtlsTransportEventType>(type: __Class<T>, listener: EventListener<RTCDtlsTransport, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeRTCDtlsTransportEventListener<T extends RTCDtlsTransportEventType>(type: __Class<T>, listener: EventListener<RTCDtlsTransport, T>, options?: boolean | EventListenerOptions): void;
     readonly state: RTCDtlsTransportState;
     readonly transport: RTCIceTransport;
     getLocalParameters(): RTCDtlsParameters;
@@ -9076,7 +8904,6 @@ interface RTCDtlsTransport extends EventTarget<RTCDtlsTransport, RTCDtlsTranspor
     getRemoteParameters(): RTCDtlsParameters | null;
     start(remoteParameters: RTCDtlsParameters): void;
     stop(): void;
-
 }
 
 declare var RTCDtlsTransport: {
@@ -9093,18 +8920,19 @@ declare var RTCDtlsTransportStateChangedEvent: {
     new(): RTCDtlsTransportStateChangedEvent;
 };
 
-interface RTCDtmfSenderEventMap {
+interface RTCDtmfSenderEventType {
     "tonechange": RTCDTMFToneChangeEvent;
 }
 
-interface RTCDtmfSender extends EventTarget<RTCDtmfSender, RTCDtmfSenderEventType> {
+interface RTCDtmfSender extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addRTCDtmfSenderEventListener<T extends RTCDtmfSenderEventType>(type: __Class<T>, listener: EventListener<RTCDtmfSender, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeRTCDtmfSenderEventListener<T extends RTCDtmfSenderEventType>(type: __Class<T>, listener: EventListener<RTCDtmfSender, T>, options?: boolean | EventListenerOptions): void;
     readonly canInsertDTMF: boolean;
     readonly duration: number;
     readonly interToneGap: number;
     readonly sender: RTCRtpSender;
     readonly toneBuffer: string;
     insertDTMF(tones: string, duration?: number, interToneGap?: number): void;
-
 }
 
 declare var RTCDtmfSender: {
@@ -9133,17 +8961,18 @@ declare var RTCIceCandidatePairChangedEvent: {
     new(): RTCIceCandidatePairChangedEvent;
 };
 
-interface RTCIceGathererEventMap {
+interface RTCIceGathererEventType {
     "error": Event;
     "localcandidate": RTCIceGathererEvent;
 }
 
-interface RTCIceGatherer extends EventTarget<RTCIceGatherer, RTCIceGathererEventType>, RTCStatsProvider {
+interface RTCIceGatherer extends RTCStatsProvider {
+    /*! @ooml-mapto(addEventListener) */ addRTCIceGathererEventListener<T extends RTCIceGathererEventType>(type: __Class<T>, listener: EventListener<RTCIceGatherer, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeRTCIceGathererEventListener<T extends RTCIceGathererEventType>(type: __Class<T>, listener: EventListener<RTCIceGatherer, T>, options?: boolean | EventListenerOptions): void;
     readonly component: RTCIceComponent;
     createAssociatedGatherer(): RTCIceGatherer;
     getLocalCandidates(): RTCIceCandidateDictionary[];
     getLocalParameters(): RTCIceParameters;
-
 }
 
 declare var RTCIceGatherer: {
@@ -9160,12 +8989,14 @@ declare var RTCIceGathererEvent: {
     new(): RTCIceGathererEvent;
 };
 
-interface RTCIceTransportEventMap {
+interface RTCIceTransportEventType {
     "candidatepairchange": RTCIceCandidatePairChangedEvent;
     "icestatechange": RTCIceTransportStateChangedEvent;
 }
 
-interface RTCIceTransport extends EventTarget<RTCIceTransport, RTCIceTransportEventType>, RTCStatsProvider {
+interface RTCIceTransport extends RTCStatsProvider {
+    /*! @ooml-mapto(addEventListener) */ addRTCIceTransportEventListener<T extends RTCIceTransportEventType>(type: __Class<T>, listener: EventListener<RTCIceTransport, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeRTCIceTransportEventListener<T extends RTCIceTransportEventType>(type: __Class<T>, listener: EventListener<RTCIceTransport, T>, options?: boolean | EventListenerOptions): void;
     readonly component: RTCIceComponent;
     readonly iceGatherer: RTCIceGatherer | null;
     readonly role: RTCIceRole;
@@ -9178,7 +9009,6 @@ interface RTCIceTransport extends EventTarget<RTCIceTransport, RTCIceTransportEv
     setRemoteCandidates(remoteCandidates: RTCIceCandidateDictionary[]): void;
     start(gatherer: RTCIceGatherer, remoteParameters: RTCIceParameters, role?: RTCIceRole): void;
     stop(): void;
-
 }
 
 declare var RTCIceTransport: {
@@ -9195,7 +9025,7 @@ declare var RTCIceTransportStateChangedEvent: {
     new(): RTCIceTransportStateChangedEvent;
 };
 
-interface RTCPeerConnectionEventMap {
+interface RTCPeerConnectionEventType {
     "addstream": MediaStreamEvent;
     "icecandidate": RTCPeerConnectionIceEvent;
     "iceconnectionstatechange": Event;
@@ -9205,7 +9035,9 @@ interface RTCPeerConnectionEventMap {
     "signalingstatechange": Event;
 }
 
-interface RTCPeerConnection extends EventTarget<RTCPeerConnection, RTCPeerConnectionEventType> {
+interface RTCPeerConnection extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addRTCPeerConnectionEventListener<T extends RTCPeerConnectionEventType>(type: __Class<T>, listener: EventListener<RTCPeerConnection, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeRTCPeerConnectionEventListener<T extends RTCPeerConnectionEventType>(type: __Class<T>, listener: EventListener<RTCPeerConnection, T>, options?: boolean | EventListenerOptions): void;
     readonly canTrickleIceCandidates: boolean | null;
     readonly iceConnectionState: RTCIceConnectionState;
     readonly iceGatheringState: RTCIceGatheringState;
@@ -9225,7 +9057,6 @@ interface RTCPeerConnection extends EventTarget<RTCPeerConnection, RTCPeerConnec
     removeStream(stream: MediaStream): void;
     setLocalDescription(description: RTCSessionDescriptionInit): Promise<void>;
     setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void>;
-
 }
 
 declare var RTCPeerConnection: {
@@ -9242,13 +9073,15 @@ declare var RTCPeerConnectionIceEvent: {
     new(type: string, eventInitDict: RTCPeerConnectionIceEventInit): RTCPeerConnectionIceEvent;
 };
 
-interface RTCRtpReceiverEventMap {
+interface RTCRtpReceiverEventType {
     "error": Event;
     "msdecodercapacitychange": Event;
     "msdsh": Event;
 }
 
-interface RTCRtpReceiver extends EventTarget<RTCRtpReceiver, RTCRtpReceiverEventType>, RTCStatsProvider {
+interface RTCRtpReceiver extends RTCStatsProvider {
+    /*! @ooml-mapto(addEventListener) */ addRTCRtpReceiverEventListener<T extends RTCRtpReceiverEventType>(type: __Class<T>, listener: EventListener<RTCRtpReceiver, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeRTCRtpReceiverEventListener<T extends RTCRtpReceiverEventType>(type: __Class<T>, listener: EventListener<RTCRtpReceiver, T>, options?: boolean | EventListenerOptions): void;
     readonly rtcpTransport: RTCDtlsTransport;
     readonly track: MediaStreamTrack | null;
     readonly transport: RTCDtlsTransport | RTCSrtpSdesTransport;
@@ -9257,7 +9090,6 @@ interface RTCRtpReceiver extends EventTarget<RTCRtpReceiver, RTCRtpReceiverEvent
     requestSendCSRC(csrc: number): void;
     setTransport(transport: RTCDtlsTransport | RTCSrtpSdesTransport, rtcpTransport?: RTCDtlsTransport): void;
     stop(): void;
-
 }
 
 declare var RTCRtpReceiver: {
@@ -9266,12 +9098,14 @@ declare var RTCRtpReceiver: {
     getCapabilities(kind?: string): RTCRtpCapabilities;
 };
 
-interface RTCRtpSenderEventMap {
+interface RTCRtpSenderEventType {
     "error": Event;
     "ssrcconflict": RTCSsrcConflictEvent;
 }
 
-interface RTCRtpSender extends EventTarget<RTCRtpSender, RTCRtpSenderEventType>, RTCStatsProvider {
+interface RTCRtpSender extends RTCStatsProvider {
+    /*! @ooml-mapto(addEventListener) */ addRTCRtpSenderEventListener<T extends RTCRtpSenderEventType>(type: __Class<T>, listener: EventListener<RTCRtpSender, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeRTCRtpSenderEventListener<T extends RTCRtpSenderEventType>(type: __Class<T>, listener: EventListener<RTCRtpSender, T>, options?: boolean | EventListenerOptions): void;
     readonly rtcpTransport: RTCDtlsTransport;
     readonly track: MediaStreamTrack;
     readonly transport: RTCDtlsTransport | RTCSrtpSdesTransport;
@@ -9279,7 +9113,6 @@ interface RTCRtpSender extends EventTarget<RTCRtpSender, RTCRtpSenderEventType>,
     setTrack(track: MediaStreamTrack): void;
     setTransport(transport: RTCDtlsTransport | RTCSrtpSdesTransport, rtcpTransport?: RTCDtlsTransport): void;
     stop(): void;
-
 }
 
 declare var RTCRtpSender: {
@@ -9299,13 +9132,14 @@ declare var RTCSessionDescription: {
     new(descriptionInitDict?: RTCSessionDescriptionInit): RTCSessionDescription;
 };
 
-interface RTCSrtpSdesTransportEventMap {
+interface RTCSrtpSdesTransportEventType {
     "error": Event;
 }
 
-interface RTCSrtpSdesTransport extends EventTarget<RTCSrtpSdesTransport, RTCSrtpSdesTransportEventType> {
+interface RTCSrtpSdesTransport extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addRTCSrtpSdesTransportEventListener<T extends RTCSrtpSdesTransportEventType>(type: __Class<T>, listener: EventListener<RTCSrtpSdesTransport, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeRTCSrtpSdesTransportEventListener<T extends RTCSrtpSdesTransportEventType>(type: __Class<T>, listener: EventListener<RTCSrtpSdesTransport, T>, options?: boolean | EventListenerOptions): void;
     readonly transport: RTCIceTransport;
-
 }
 
 declare var RTCSrtpSdesTransport: {
@@ -9371,7 +9205,6 @@ interface Range {
     setStartAfter(node: Node): void;
     setStartBefore(node: Node): void;
     surroundContents(newParent: Node): void;
-    toString(): string;
 }
 
 declare var Range: {
@@ -9447,9 +9280,10 @@ declare var Response: {
     redirect(url: string, status?: number): Response;
 };
 
-interface SVGAElement extends EventTarget<SVGAElement, SVGElementEventType>, SVGGraphicsElement, SVGURIReference {
+interface SVGAElement extends SVGGraphicsElement, SVGURIReference {
+    /*! @ooml-mapto(addEventListener) */ addSVGAElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGAElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGAElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGAElement, T>, options?: boolean | EventListenerOptions): void;
     readonly target: SVGAnimatedString;
-
 }
 
 declare var SVGAElement: {
@@ -9556,7 +9390,7 @@ declare var SVGAnimatedNumberList: {
     new(): SVGAnimatedNumberList;
 };
 
-interface SVGAnimatedPoints {
+interface SVGAnimatedPoints /*! @ooml-interface */ {
     readonly animatedPoints: SVGPointList;
     readonly points: SVGPointList;
 }
@@ -9601,11 +9435,12 @@ declare var SVGAnimatedTransformList: {
     new(): SVGAnimatedTransformList;
 };
 
-interface SVGCircleElement extends EventTarget<SVGCircleElement, SVGElementEventType>, SVGGraphicsElement {
+interface SVGCircleElement extends SVGGraphicsElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGCircleElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGCircleElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGCircleElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGCircleElement, T>, options?: boolean | EventListenerOptions): void;
     readonly cx: SVGAnimatedLength;
     readonly cy: SVGAnimatedLength;
     readonly r: SVGAnimatedLength;
-
 }
 
 declare var SVGCircleElement: {
@@ -9613,9 +9448,10 @@ declare var SVGCircleElement: {
     new(): SVGCircleElement;
 };
 
-interface SVGClipPathElement extends EventTarget<SVGClipPathElement, SVGElementEventType>, SVGGraphicsElement {
+interface SVGClipPathElement extends SVGGraphicsElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGClipPathElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGClipPathElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGClipPathElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGClipPathElement, T>, options?: boolean | EventListenerOptions): void;
     readonly clipPathUnits: SVGAnimatedEnumeration;
-
 }
 
 declare var SVGClipPathElement: {
@@ -9623,7 +9459,9 @@ declare var SVGClipPathElement: {
     new(): SVGClipPathElement;
 };
 
-interface SVGComponentTransferFunctionElement extends EventTarget<SVGComponentTransferFunctionElement, SVGElementEventType>, SVGElement {
+interface SVGComponentTransferFunctionElement extends SVGElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGComponentTransferFunctionElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGComponentTransferFunctionElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGComponentTransferFunctionElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGComponentTransferFunctionElement, T>, options?: boolean | EventListenerOptions): void;
     readonly amplitude: SVGAnimatedNumber;
     readonly exponent: SVGAnimatedNumber;
     readonly intercept: SVGAnimatedNumber;
@@ -9631,7 +9469,6 @@ interface SVGComponentTransferFunctionElement extends EventTarget<SVGComponentTr
     readonly slope: SVGAnimatedNumber;
     readonly tableValues: SVGAnimatedNumberList;
     readonly type: SVGAnimatedEnumeration;
-
 }
 
 declare var SVGComponentTransferFunctionElement: {
@@ -9645,8 +9482,9 @@ declare var SVGComponentTransferFunctionElement: {
     readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;
 };
 
-interface SVGDefsElement extends EventTarget<SVGDefsElement, SVGElementEventType>, SVGGraphicsElement {
-
+interface SVGDefsElement extends SVGGraphicsElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGDefsElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGDefsElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGDefsElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGDefsElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGDefsElement: {
@@ -9654,8 +9492,9 @@ declare var SVGDefsElement: {
     new(): SVGDefsElement;
 };
 
-interface SVGDescElement extends EventTarget<SVGDescElement, SVGElementEventType>, SVGElement {
-
+interface SVGDescElement extends SVGElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGDescElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGDescElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGDescElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGDescElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGDescElement: {
@@ -9663,7 +9502,7 @@ declare var SVGDescElement: {
     new(): SVGDescElement;
 };
 
-interface SVGElementEventMap extends ElementEventMap {
+interface SVGElementEventType extends ElementEventType {
     "click": MouseEvent;
     "dblclick": MouseEvent;
     "focusin": FocusEvent;
@@ -9676,13 +9515,16 @@ interface SVGElementEventMap extends ElementEventMap {
     "mouseup": MouseEvent;
 }
 
-interface SVGElement extends EventTarget<SVGElement, SVGElementEventType>, Element, ElementCSSInlineStyle {
+interface SVGElement extends Element, ElementCSSInlineStyle {
+    /*! @ooml-mapto(addEventListener) */ addSVGElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGElement, T>, options?: boolean | EventListenerOptions): void;
     readonly className: any;
     readonly ownerSVGElement: SVGSVGElement | null;
     readonly viewportElement: SVGElement | null;
     /** @deprecated */
     xmlbase: string;
-
+    closest<K extends SVGElement>(selector: __Class<K>): K | null;
+    getElementsByTagName<K extends SVGElement>(name: __Class<K>): NodeList<K>;
 }
 
 declare var SVGElement: {
@@ -9718,12 +9560,13 @@ declare var SVGElementInstanceList: {
     new(): SVGElementInstanceList;
 };
 
-interface SVGEllipseElement extends EventTarget<SVGEllipseElement, SVGElementEventType>, SVGGraphicsElement {
+interface SVGEllipseElement extends SVGGraphicsElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGEllipseElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGEllipseElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGEllipseElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGEllipseElement, T>, options?: boolean | EventListenerOptions): void;
     readonly cx: SVGAnimatedLength;
     readonly cy: SVGAnimatedLength;
     readonly rx: SVGAnimatedLength;
     readonly ry: SVGAnimatedLength;
-
 }
 
 declare var SVGEllipseElement: {
@@ -9731,7 +9574,9 @@ declare var SVGEllipseElement: {
     new(): SVGEllipseElement;
 };
 
-interface SVGFEBlendElement extends EventTarget<SVGFEBlendElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEBlendElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEBlendElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEBlendElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEBlendElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEBlendElement, T>, options?: boolean | EventListenerOptions): void;
     readonly in1: SVGAnimatedString;
     readonly in2: SVGAnimatedString;
     readonly mode: SVGAnimatedEnumeration;
@@ -9759,11 +9604,12 @@ declare var SVGFEBlendElement: {
     readonly SVG_FEBLEND_MODE_UNKNOWN: number;
 };
 
-interface SVGFEColorMatrixElement extends EventTarget<SVGFEColorMatrixElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEColorMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEColorMatrixElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEColorMatrixElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEColorMatrixElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEColorMatrixElement, T>, options?: boolean | EventListenerOptions): void;
     readonly in1: SVGAnimatedString;
     readonly type: SVGAnimatedEnumeration;
     readonly values: SVGAnimatedNumberList;
-
 }
 
 declare var SVGFEColorMatrixElement: {
@@ -9776,9 +9622,10 @@ declare var SVGFEColorMatrixElement: {
     readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;
 };
 
-interface SVGFEComponentTransferElement extends EventTarget<SVGFEComponentTransferElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEComponentTransferElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEComponentTransferElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEComponentTransferElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEComponentTransferElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEComponentTransferElement, T>, options?: boolean | EventListenerOptions): void;
     readonly in1: SVGAnimatedString;
-
 }
 
 declare var SVGFEComponentTransferElement: {
@@ -9786,7 +9633,9 @@ declare var SVGFEComponentTransferElement: {
     new(): SVGFEComponentTransferElement;
 };
 
-interface SVGFECompositeElement extends EventTarget<SVGFECompositeElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFECompositeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFECompositeElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFECompositeElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFECompositeElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFECompositeElement, T>, options?: boolean | EventListenerOptions): void;
     readonly in1: SVGAnimatedString;
     readonly in2: SVGAnimatedString;
     readonly k1: SVGAnimatedNumber;
@@ -9794,7 +9643,6 @@ interface SVGFECompositeElement extends EventTarget<SVGFECompositeElement, SVGEl
     readonly k3: SVGAnimatedNumber;
     readonly k4: SVGAnimatedNumber;
     readonly operator: SVGAnimatedEnumeration;
-
 }
 
 declare var SVGFECompositeElement: {
@@ -9809,7 +9657,9 @@ declare var SVGFECompositeElement: {
     readonly SVG_FECOMPOSITE_OPERATOR_XOR: number;
 };
 
-interface SVGFEConvolveMatrixElement extends EventTarget<SVGFEConvolveMatrixElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEConvolveMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEConvolveMatrixElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEConvolveMatrixElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEConvolveMatrixElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEConvolveMatrixElement, T>, options?: boolean | EventListenerOptions): void;
     readonly bias: SVGAnimatedNumber;
     readonly divisor: SVGAnimatedNumber;
     readonly edgeMode: SVGAnimatedEnumeration;
@@ -9822,7 +9672,6 @@ interface SVGFEConvolveMatrixElement extends EventTarget<SVGFEConvolveMatrixElem
     readonly preserveAlpha: SVGAnimatedBoolean;
     readonly targetX: SVGAnimatedInteger;
     readonly targetY: SVGAnimatedInteger;
-
 }
 
 declare var SVGFEConvolveMatrixElement: {
@@ -9834,13 +9683,14 @@ declare var SVGFEConvolveMatrixElement: {
     readonly SVG_EDGEMODE_WRAP: number;
 };
 
-interface SVGFEDiffuseLightingElement extends EventTarget<SVGFEDiffuseLightingElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEDiffuseLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEDiffuseLightingElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEDiffuseLightingElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEDiffuseLightingElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEDiffuseLightingElement, T>, options?: boolean | EventListenerOptions): void;
     readonly diffuseConstant: SVGAnimatedNumber;
     readonly in1: SVGAnimatedString;
     readonly kernelUnitLengthX: SVGAnimatedNumber;
     readonly kernelUnitLengthY: SVGAnimatedNumber;
     readonly surfaceScale: SVGAnimatedNumber;
-
 }
 
 declare var SVGFEDiffuseLightingElement: {
@@ -9848,13 +9698,14 @@ declare var SVGFEDiffuseLightingElement: {
     new(): SVGFEDiffuseLightingElement;
 };
 
-interface SVGFEDisplacementMapElement extends EventTarget<SVGFEDisplacementMapElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEDisplacementMapElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEDisplacementMapElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEDisplacementMapElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEDisplacementMapElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEDisplacementMapElement, T>, options?: boolean | EventListenerOptions): void;
     readonly in1: SVGAnimatedString;
     readonly in2: SVGAnimatedString;
     readonly scale: SVGAnimatedNumber;
     readonly xChannelSelector: SVGAnimatedEnumeration;
     readonly yChannelSelector: SVGAnimatedEnumeration;
-
 }
 
 declare var SVGFEDisplacementMapElement: {
@@ -9867,10 +9718,11 @@ declare var SVGFEDisplacementMapElement: {
     readonly SVG_CHANNEL_UNKNOWN: number;
 };
 
-interface SVGFEDistantLightElement extends EventTarget<SVGFEDistantLightElement, SVGElementEventType>, SVGElement {
+interface SVGFEDistantLightElement extends SVGElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEDistantLightElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEDistantLightElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEDistantLightElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEDistantLightElement, T>, options?: boolean | EventListenerOptions): void;
     readonly azimuth: SVGAnimatedNumber;
     readonly elevation: SVGAnimatedNumber;
-
 }
 
 declare var SVGFEDistantLightElement: {
@@ -9878,8 +9730,9 @@ declare var SVGFEDistantLightElement: {
     new(): SVGFEDistantLightElement;
 };
 
-interface SVGFEFloodElement extends EventTarget<SVGFEFloodElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
-
+interface SVGFEFloodElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEFloodElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEFloodElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEFloodElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEFloodElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGFEFloodElement: {
@@ -9887,8 +9740,9 @@ declare var SVGFEFloodElement: {
     new(): SVGFEFloodElement;
 };
 
-interface SVGFEFuncAElement extends EventTarget<SVGFEFuncAElement, SVGElementEventType>, SVGComponentTransferFunctionElement {
-
+interface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEFuncAElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEFuncAElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEFuncAElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEFuncAElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGFEFuncAElement: {
@@ -9896,8 +9750,9 @@ declare var SVGFEFuncAElement: {
     new(): SVGFEFuncAElement;
 };
 
-interface SVGFEFuncBElement extends EventTarget<SVGFEFuncBElement, SVGElementEventType>, SVGComponentTransferFunctionElement {
-
+interface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEFuncBElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEFuncBElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEFuncBElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEFuncBElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGFEFuncBElement: {
@@ -9905,8 +9760,9 @@ declare var SVGFEFuncBElement: {
     new(): SVGFEFuncBElement;
 };
 
-interface SVGFEFuncGElement extends EventTarget<SVGFEFuncGElement, SVGElementEventType>, SVGComponentTransferFunctionElement {
-
+interface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEFuncGElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEFuncGElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEFuncGElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEFuncGElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGFEFuncGElement: {
@@ -9914,8 +9770,9 @@ declare var SVGFEFuncGElement: {
     new(): SVGFEFuncGElement;
 };
 
-interface SVGFEFuncRElement extends EventTarget<SVGFEFuncRElement, SVGElementEventType>, SVGComponentTransferFunctionElement {
-
+interface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEFuncRElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEFuncRElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEFuncRElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEFuncRElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGFEFuncRElement: {
@@ -9923,12 +9780,13 @@ declare var SVGFEFuncRElement: {
     new(): SVGFEFuncRElement;
 };
 
-interface SVGFEGaussianBlurElement extends EventTarget<SVGFEGaussianBlurElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEGaussianBlurElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEGaussianBlurElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEGaussianBlurElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEGaussianBlurElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEGaussianBlurElement, T>, options?: boolean | EventListenerOptions): void;
     readonly in1: SVGAnimatedString;
     readonly stdDeviationX: SVGAnimatedNumber;
     readonly stdDeviationY: SVGAnimatedNumber;
     setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;
-
 }
 
 declare var SVGFEGaussianBlurElement: {
@@ -9936,9 +9794,10 @@ declare var SVGFEGaussianBlurElement: {
     new(): SVGFEGaussianBlurElement;
 };
 
-interface SVGFEImageElement extends EventTarget<SVGFEImageElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes, SVGURIReference {
+interface SVGFEImageElement extends SVGElement, SVGFilterPrimitiveStandardAttributes, SVGURIReference {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEImageElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEImageElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEImageElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEImageElement, T>, options?: boolean | EventListenerOptions): void;
     readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;
-
 }
 
 declare var SVGFEImageElement: {
@@ -9946,8 +9805,9 @@ declare var SVGFEImageElement: {
     new(): SVGFEImageElement;
 };
 
-interface SVGFEMergeElement extends EventTarget<SVGFEMergeElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
-
+interface SVGFEMergeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEMergeElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEMergeElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEMergeElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEMergeElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGFEMergeElement: {
@@ -9955,9 +9815,10 @@ declare var SVGFEMergeElement: {
     new(): SVGFEMergeElement;
 };
 
-interface SVGFEMergeNodeElement extends EventTarget<SVGFEMergeNodeElement, SVGElementEventType>, SVGElement {
+interface SVGFEMergeNodeElement extends SVGElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEMergeNodeElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEMergeNodeElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEMergeNodeElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEMergeNodeElement, T>, options?: boolean | EventListenerOptions): void;
     readonly in1: SVGAnimatedString;
-
 }
 
 declare var SVGFEMergeNodeElement: {
@@ -9965,12 +9826,13 @@ declare var SVGFEMergeNodeElement: {
     new(): SVGFEMergeNodeElement;
 };
 
-interface SVGFEMorphologyElement extends EventTarget<SVGFEMorphologyElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEMorphologyElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEMorphologyElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEMorphologyElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEMorphologyElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEMorphologyElement, T>, options?: boolean | EventListenerOptions): void;
     readonly in1: SVGAnimatedString;
     readonly operator: SVGAnimatedEnumeration;
     readonly radiusX: SVGAnimatedNumber;
     readonly radiusY: SVGAnimatedNumber;
-
 }
 
 declare var SVGFEMorphologyElement: {
@@ -9981,11 +9843,12 @@ declare var SVGFEMorphologyElement: {
     readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;
 };
 
-interface SVGFEOffsetElement extends EventTarget<SVGFEOffsetElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEOffsetElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEOffsetElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEOffsetElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEOffsetElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEOffsetElement, T>, options?: boolean | EventListenerOptions): void;
     readonly dx: SVGAnimatedNumber;
     readonly dy: SVGAnimatedNumber;
     readonly in1: SVGAnimatedString;
-
 }
 
 declare var SVGFEOffsetElement: {
@@ -9993,11 +9856,12 @@ declare var SVGFEOffsetElement: {
     new(): SVGFEOffsetElement;
 };
 
-interface SVGFEPointLightElement extends EventTarget<SVGFEPointLightElement, SVGElementEventType>, SVGElement {
+interface SVGFEPointLightElement extends SVGElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGFEPointLightElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEPointLightElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFEPointLightElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFEPointLightElement, T>, options?: boolean | EventListenerOptions): void;
     readonly x: SVGAnimatedNumber;
     readonly y: SVGAnimatedNumber;
     readonly z: SVGAnimatedNumber;
-
 }
 
 declare var SVGFEPointLightElement: {
@@ -10005,14 +9869,15 @@ declare var SVGFEPointLightElement: {
     new(): SVGFEPointLightElement;
 };
 
-interface SVGFESpecularLightingElement extends EventTarget<SVGFESpecularLightingElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFESpecularLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFESpecularLightingElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFESpecularLightingElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFESpecularLightingElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFESpecularLightingElement, T>, options?: boolean | EventListenerOptions): void;
     readonly in1: SVGAnimatedString;
     readonly kernelUnitLengthX: SVGAnimatedNumber;
     readonly kernelUnitLengthY: SVGAnimatedNumber;
     readonly specularConstant: SVGAnimatedNumber;
     readonly specularExponent: SVGAnimatedNumber;
     readonly surfaceScale: SVGAnimatedNumber;
-
 }
 
 declare var SVGFESpecularLightingElement: {
@@ -10020,7 +9885,9 @@ declare var SVGFESpecularLightingElement: {
     new(): SVGFESpecularLightingElement;
 };
 
-interface SVGFESpotLightElement extends EventTarget<SVGFESpotLightElement, SVGElementEventType>, SVGElement {
+interface SVGFESpotLightElement extends SVGElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGFESpotLightElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFESpotLightElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFESpotLightElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFESpotLightElement, T>, options?: boolean | EventListenerOptions): void;
     readonly limitingConeAngle: SVGAnimatedNumber;
     readonly pointsAtX: SVGAnimatedNumber;
     readonly pointsAtY: SVGAnimatedNumber;
@@ -10029,7 +9896,6 @@ interface SVGFESpotLightElement extends EventTarget<SVGFESpotLightElement, SVGEl
     readonly x: SVGAnimatedNumber;
     readonly y: SVGAnimatedNumber;
     readonly z: SVGAnimatedNumber;
-
 }
 
 declare var SVGFESpotLightElement: {
@@ -10037,9 +9903,10 @@ declare var SVGFESpotLightElement: {
     new(): SVGFESpotLightElement;
 };
 
-interface SVGFETileElement extends EventTarget<SVGFETileElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFETileElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFETileElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFETileElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFETileElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFETileElement, T>, options?: boolean | EventListenerOptions): void;
     readonly in1: SVGAnimatedString;
-
 }
 
 declare var SVGFETileElement: {
@@ -10047,14 +9914,15 @@ declare var SVGFETileElement: {
     new(): SVGFETileElement;
 };
 
-interface SVGFETurbulenceElement extends EventTarget<SVGFETurbulenceElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFETurbulenceElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+    /*! @ooml-mapto(addEventListener) */ addSVGFETurbulenceElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFETurbulenceElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFETurbulenceElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFETurbulenceElement, T>, options?: boolean | EventListenerOptions): void;
     readonly baseFrequencyX: SVGAnimatedNumber;
     readonly baseFrequencyY: SVGAnimatedNumber;
     readonly numOctaves: SVGAnimatedInteger;
     readonly seed: SVGAnimatedNumber;
     readonly stitchTiles: SVGAnimatedEnumeration;
     readonly type: SVGAnimatedEnumeration;
-
 }
 
 declare var SVGFETurbulenceElement: {
@@ -10068,7 +9936,9 @@ declare var SVGFETurbulenceElement: {
     readonly SVG_TURBULENCE_TYPE_UNKNOWN: number;
 };
 
-interface SVGFilterElement extends EventTarget<SVGFilterElement, SVGElementEventType>, SVGElement, SVGURIReference {
+interface SVGFilterElement extends SVGElement, SVGURIReference {
+    /*! @ooml-mapto(addEventListener) */ addSVGFilterElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFilterElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGFilterElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGFilterElement, T>, options?: boolean | EventListenerOptions): void;
     /** @deprecated */
     readonly filterResX: SVGAnimatedInteger;
     /** @deprecated */
@@ -10081,7 +9951,6 @@ interface SVGFilterElement extends EventTarget<SVGFilterElement, SVGElementEvent
     readonly y: SVGAnimatedLength;
     /** @deprecated */
     setFilterRes(filterResX: number, filterResY: number): void;
-
 }
 
 declare var SVGFilterElement: {
@@ -10097,17 +9966,18 @@ interface SVGFilterPrimitiveStandardAttributes /*! @ooml-interface */ {
     readonly y: SVGAnimatedLength;
 }
 
-interface SVGFitToViewBox {
+interface SVGFitToViewBox /*! @ooml-interface */ {
     readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;
     readonly viewBox: SVGAnimatedRect;
 }
 
-interface SVGForeignObjectElement extends EventTarget<SVGForeignObjectElement, SVGElementEventType>, SVGGraphicsElement {
+interface SVGForeignObjectElement extends SVGGraphicsElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGForeignObjectElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGForeignObjectElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGForeignObjectElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGForeignObjectElement, T>, options?: boolean | EventListenerOptions): void;
     readonly height: SVGAnimatedLength;
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-
 }
 
 declare var SVGForeignObjectElement: {
@@ -10115,8 +9985,9 @@ declare var SVGForeignObjectElement: {
     new(): SVGForeignObjectElement;
 };
 
-interface SVGGElement extends EventTarget<SVGGElement, SVGElementEventType>, SVGGraphicsElement {
-
+interface SVGGElement extends SVGGraphicsElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGGElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGGElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGGElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGGElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGGElement: {
@@ -10124,11 +9995,12 @@ declare var SVGGElement: {
     new(): SVGGElement;
 };
 
-interface SVGGradientElement extends EventTarget<SVGGradientElement, SVGElementEventType>, SVGElement, SVGURIReference {
+interface SVGGradientElement extends SVGElement, SVGURIReference {
+    /*! @ooml-mapto(addEventListener) */ addSVGGradientElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGGradientElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGGradientElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGGradientElement, T>, options?: boolean | EventListenerOptions): void;
     readonly gradientTransform: SVGAnimatedTransformList;
     readonly gradientUnits: SVGAnimatedEnumeration;
     readonly spreadMethod: SVGAnimatedEnumeration;
-
 }
 
 declare var SVGGradientElement: {
@@ -10140,7 +10012,9 @@ declare var SVGGradientElement: {
     readonly SVG_SPREADMETHOD_UNKNOWN: number;
 };
 
-interface SVGGraphicsElement extends EventTarget<SVGGraphicsElement, SVGElementEventType>, SVGElement, SVGTests {
+interface SVGGraphicsElement extends SVGElement, SVGTests {
+    /*! @ooml-mapto(addEventListener) */ addSVGGraphicsElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGGraphicsElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGGraphicsElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGGraphicsElement, T>, options?: boolean | EventListenerOptions): void;
     /** @deprecated */
     readonly farthestViewportElement: SVGElement | null;
     /** @deprecated */
@@ -10151,7 +10025,6 @@ interface SVGGraphicsElement extends EventTarget<SVGGraphicsElement, SVGElementE
     getScreenCTM(): SVGMatrix | null;
     /** @deprecated */
     getTransformToElement(element: SVGElement): SVGMatrix;
-
 }
 
 declare var SVGGraphicsElement: {
@@ -10159,13 +10032,14 @@ declare var SVGGraphicsElement: {
     new(): SVGGraphicsElement;
 };
 
-interface SVGImageElement extends EventTarget<SVGImageElement, SVGElementEventType>, SVGGraphicsElement, SVGURIReference {
+interface SVGImageElement extends SVGGraphicsElement, SVGURIReference {
+    /*! @ooml-mapto(addEventListener) */ addSVGImageElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGImageElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGImageElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGImageElement, T>, options?: boolean | EventListenerOptions): void;
     readonly height: SVGAnimatedLength;
     readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-
 }
 
 declare var SVGImageElement: {
@@ -10214,12 +10088,13 @@ declare var SVGLengthList: {
     new(): SVGLengthList;
 };
 
-interface SVGLineElement extends EventTarget<SVGLineElement, SVGElementEventType>, SVGGraphicsElement {
+interface SVGLineElement extends SVGGraphicsElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGLineElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGLineElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGLineElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGLineElement, T>, options?: boolean | EventListenerOptions): void;
     readonly x1: SVGAnimatedLength;
     readonly x2: SVGAnimatedLength;
     readonly y1: SVGAnimatedLength;
     readonly y2: SVGAnimatedLength;
-
 }
 
 declare var SVGLineElement: {
@@ -10227,12 +10102,13 @@ declare var SVGLineElement: {
     new(): SVGLineElement;
 };
 
-interface SVGLinearGradientElement extends EventTarget<SVGLinearGradientElement, SVGElementEventType>, SVGGradientElement {
+interface SVGLinearGradientElement extends SVGGradientElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGLinearGradientElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGLinearGradientElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGLinearGradientElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGLinearGradientElement, T>, options?: boolean | EventListenerOptions): void;
     readonly x1: SVGAnimatedLength;
     readonly x2: SVGAnimatedLength;
     readonly y1: SVGAnimatedLength;
     readonly y2: SVGAnimatedLength;
-
 }
 
 declare var SVGLinearGradientElement: {
@@ -10240,7 +10116,9 @@ declare var SVGLinearGradientElement: {
     new(): SVGLinearGradientElement;
 };
 
-interface SVGMarkerElement extends EventTarget<SVGMarkerElement, SVGElementEventType>, SVGElement, SVGFitToViewBox {
+interface SVGMarkerElement extends SVGElement, SVGFitToViewBox {
+    /*! @ooml-mapto(addEventListener) */ addSVGMarkerElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGMarkerElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGMarkerElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGMarkerElement, T>, options?: boolean | EventListenerOptions): void;
     readonly markerHeight: SVGAnimatedLength;
     readonly markerUnits: SVGAnimatedEnumeration;
     readonly markerWidth: SVGAnimatedLength;
@@ -10250,7 +10128,6 @@ interface SVGMarkerElement extends EventTarget<SVGMarkerElement, SVGElementEvent
     readonly refY: SVGAnimatedLength;
     setOrientToAngle(angle: SVGAngle): void;
     setOrientToAuto(): void;
-
 }
 
 declare var SVGMarkerElement: {
@@ -10264,14 +10141,15 @@ declare var SVGMarkerElement: {
     readonly SVG_MARKER_ORIENT_UNKNOWN: number;
 };
 
-interface SVGMaskElement extends EventTarget<SVGMaskElement, SVGElementEventType>, SVGElement, SVGTests {
+interface SVGMaskElement extends SVGElement, SVGTests {
+    /*! @ooml-mapto(addEventListener) */ addSVGMaskElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGMaskElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGMaskElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGMaskElement, T>, options?: boolean | EventListenerOptions): void;
     readonly height: SVGAnimatedLength;
     readonly maskContentUnits: SVGAnimatedEnumeration;
     readonly maskUnits: SVGAnimatedEnumeration;
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-
 }
 
 declare var SVGMaskElement: {
@@ -10304,8 +10182,9 @@ declare var SVGMatrix: {
     new(): SVGMatrix;
 };
 
-interface SVGMetadataElement extends EventTarget<SVGMetadataElement, SVGElementEventType>, SVGElement {
-
+interface SVGMetadataElement extends SVGElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGMetadataElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGMetadataElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGMetadataElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGMetadataElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGMetadataElement: {
@@ -10338,7 +10217,9 @@ declare var SVGNumberList: {
     new(): SVGNumberList;
 };
 
-interface SVGPathElement extends EventTarget<SVGPathElement, SVGElementEventType>, SVGGraphicsElement {
+interface SVGPathElement extends SVGGraphicsElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGPathElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGPathElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGPathElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGPathElement, T>, options?: boolean | EventListenerOptions): void;
     /** @deprecated */
     readonly pathSegList: SVGPathSegList;
     /** @deprecated */
@@ -10383,7 +10264,6 @@ interface SVGPathElement extends EventTarget<SVGPathElement, SVGElementEventType
     getPathSegAtLength(distance: number): number;
     getPointAtLength(distance: number): SVGPoint;
     getTotalLength(): number;
-
 }
 
 declare var SVGPathElement: {
@@ -10647,7 +10527,9 @@ declare var SVGPathSegMovetoRel: {
     new(): SVGPathSegMovetoRel;
 };
 
-interface SVGPatternElement extends EventTarget<SVGPatternElement, SVGElementEventType>, SVGElement, SVGTests, SVGFitToViewBox, SVGURIReference {
+interface SVGPatternElement extends SVGElement, SVGTests, SVGFitToViewBox, SVGURIReference {
+    /*! @ooml-mapto(addEventListener) */ addSVGPatternElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGPatternElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGPatternElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGPatternElement, T>, options?: boolean | EventListenerOptions): void;
     readonly height: SVGAnimatedLength;
     readonly patternContentUnits: SVGAnimatedEnumeration;
     readonly patternTransform: SVGAnimatedTransformList;
@@ -10655,7 +10537,6 @@ interface SVGPatternElement extends EventTarget<SVGPatternElement, SVGElementEve
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-
 }
 
 declare var SVGPatternElement: {
@@ -10690,8 +10571,9 @@ declare var SVGPointList: {
     new(): SVGPointList;
 };
 
-interface SVGPolygonElement extends EventTarget<SVGPolygonElement, SVGElementEventType>, SVGGraphicsElement, SVGAnimatedPoints {
-
+interface SVGPolygonElement extends SVGGraphicsElement, SVGAnimatedPoints {
+    /*! @ooml-mapto(addEventListener) */ addSVGPolygonElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGPolygonElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGPolygonElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGPolygonElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGPolygonElement: {
@@ -10699,8 +10581,9 @@ declare var SVGPolygonElement: {
     new(): SVGPolygonElement;
 };
 
-interface SVGPolylineElement extends EventTarget<SVGPolylineElement, SVGElementEventType>, SVGGraphicsElement, SVGAnimatedPoints {
-
+interface SVGPolylineElement extends SVGGraphicsElement, SVGAnimatedPoints {
+    /*! @ooml-mapto(addEventListener) */ addSVGPolylineElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGPolylineElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGPolylineElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGPolylineElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGPolylineElement: {
@@ -10732,13 +10615,14 @@ declare var SVGPreserveAspectRatio: {
     readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: number;
 };
 
-interface SVGRadialGradientElement extends EventTarget<SVGRadialGradientElement, SVGElementEventType>, SVGGradientElement {
+interface SVGRadialGradientElement extends SVGGradientElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGRadialGradientElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGRadialGradientElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGRadialGradientElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGRadialGradientElement, T>, options?: boolean | EventListenerOptions): void;
     readonly cx: SVGAnimatedLength;
     readonly cy: SVGAnimatedLength;
     readonly fx: SVGAnimatedLength;
     readonly fy: SVGAnimatedLength;
     readonly r: SVGAnimatedLength;
-
 }
 
 declare var SVGRadialGradientElement: {
@@ -10758,14 +10642,15 @@ declare var SVGRect: {
     new(): SVGRect;
 };
 
-interface SVGRectElement extends EventTarget<SVGRectElement, SVGElementEventType>, SVGGraphicsElement {
+interface SVGRectElement extends SVGGraphicsElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGRectElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGRectElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGRectElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGRectElement, T>, options?: boolean | EventListenerOptions): void;
     readonly height: SVGAnimatedLength;
     readonly rx: SVGAnimatedLength;
     readonly ry: SVGAnimatedLength;
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-
 }
 
 declare var SVGRectElement: {
@@ -10773,7 +10658,7 @@ declare var SVGRectElement: {
     new(): SVGRectElement;
 };
 
-interface SVGSVGElementEventMap extends SVGElementEventMap {
+interface SVGSVGElementEventType extends SVGElementEventType {
     "SVGAbort": Event;
     "SVGError": Event;
     "resize": UIEvent;
@@ -10782,7 +10667,9 @@ interface SVGSVGElementEventMap extends SVGElementEventMap {
     "SVGZoom": SVGZoomEvent;
 }
 
-interface SVGSVGElement extends EventTarget<SVGSVGElement, SVGSVGElementEventType>, SVGGraphicsElement, SVGFitToViewBox, SVGZoomAndPan {
+interface SVGSVGElement extends SVGGraphicsElement, SVGFitToViewBox, SVGZoomAndPan {
+    /*! @ooml-mapto(addEventListener) */ addSVGSVGElementEventListener<T extends SVGSVGElementEventType>(type: __Class<T>, listener: EventListener<SVGSVGElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGSVGElementEventListener<T extends SVGSVGElementEventType>(type: __Class<T>, listener: EventListener<SVGSVGElement, T>, options?: boolean | EventListenerOptions): void;
     /** @deprecated */
     contentScriptType: string;
     /** @deprecated */
@@ -10820,8 +10707,8 @@ interface SVGSVGElement extends EventTarget<SVGSVGElement, SVGSVGElementEventTyp
     /** @deprecated */
     getCurrentTime(): number;
     getElementById(elementId: string): Element;
-    getEnclosureList(rect: SVGRect, referenceElement: SVGElement): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>;
-    getIntersectionList(rect: SVGRect, referenceElement: SVGElement): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>;
+    getEnclosureList(rect: SVGRect, referenceElement: SVGElement): NodeList<SVGElement>;
+    getIntersectionList(rect: SVGRect, referenceElement: SVGElement): NodeList<SVGElement>;
     /** @deprecated */
     pauseAnimations(): void;
     /** @deprecated */
@@ -10834,7 +10721,6 @@ interface SVGSVGElement extends EventTarget<SVGSVGElement, SVGSVGElementEventTyp
     unsuspendRedraw(suspendHandleID: number): void;
     /** @deprecated */
     unsuspendRedrawAll(): void;
-
 }
 
 declare var SVGSVGElement: {
@@ -10842,9 +10728,10 @@ declare var SVGSVGElement: {
     new(): SVGSVGElement;
 };
 
-interface SVGScriptElement extends EventTarget<SVGScriptElement, SVGElementEventType>, SVGElement, SVGURIReference {
+interface SVGScriptElement extends SVGElement, SVGURIReference {
+    /*! @ooml-mapto(addEventListener) */ addSVGScriptElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGScriptElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGScriptElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGScriptElement, T>, options?: boolean | EventListenerOptions): void;
     type: string;
-
 }
 
 declare var SVGScriptElement: {
@@ -10852,9 +10739,10 @@ declare var SVGScriptElement: {
     new(): SVGScriptElement;
 };
 
-interface SVGStopElement extends EventTarget<SVGStopElement, SVGElementEventType>, SVGElement {
+interface SVGStopElement extends SVGElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGStopElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGStopElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGStopElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGStopElement, T>, options?: boolean | EventListenerOptions): void;
     readonly offset: SVGAnimatedNumber;
-
 }
 
 declare var SVGStopElement: {
@@ -10887,12 +10775,13 @@ declare var SVGStylable: {
     new(): SVGStylable;
 };
 
-interface SVGStyleElement extends EventTarget<SVGStyleElement, SVGElementEventType>, SVGElement {
+interface SVGStyleElement extends SVGElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGStyleElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGStyleElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGStyleElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGStyleElement, T>, options?: boolean | EventListenerOptions): void;
     disabled: boolean;
     media: string;
     title: string;
     type: string;
-
 }
 
 declare var SVGStyleElement: {
@@ -10900,8 +10789,9 @@ declare var SVGStyleElement: {
     new(): SVGStyleElement;
 };
 
-interface SVGSwitchElement extends EventTarget<SVGSwitchElement, SVGElementEventType>, SVGGraphicsElement {
-
+interface SVGSwitchElement extends SVGGraphicsElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGSwitchElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGSwitchElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGSwitchElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGSwitchElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGSwitchElement: {
@@ -10909,8 +10799,9 @@ declare var SVGSwitchElement: {
     new(): SVGSwitchElement;
 };
 
-interface SVGSymbolElement extends EventTarget<SVGSymbolElement, SVGElementEventType>, SVGElement, SVGFitToViewBox {
-
+interface SVGSymbolElement extends SVGElement, SVGFitToViewBox {
+    /*! @ooml-mapto(addEventListener) */ addSVGSymbolElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGSymbolElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGSymbolElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGSymbolElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGSymbolElement: {
@@ -10918,8 +10809,9 @@ declare var SVGSymbolElement: {
     new(): SVGSymbolElement;
 };
 
-interface SVGTSpanElement extends EventTarget<SVGTSpanElement, SVGElementEventType>, SVGTextPositioningElement {
-
+interface SVGTSpanElement extends SVGTextPositioningElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGTSpanElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTSpanElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGTSpanElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTSpanElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGTSpanElement: {
@@ -10927,7 +10819,7 @@ declare var SVGTSpanElement: {
     new(): SVGTSpanElement;
 };
 
-interface SVGTests {
+interface SVGTests /*! @ooml-interface */ {
     readonly requiredExtensions: SVGStringList;
     /** @deprecated */
     readonly requiredFeatures: SVGStringList;
@@ -10936,7 +10828,9 @@ interface SVGTests {
     hasExtension(extension: string): boolean;
 }
 
-interface SVGTextContentElement extends EventTarget<SVGTextContentElement, SVGElementEventType>, SVGGraphicsElement {
+interface SVGTextContentElement extends SVGGraphicsElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGTextContentElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTextContentElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGTextContentElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTextContentElement, T>, options?: boolean | EventListenerOptions): void;
     readonly lengthAdjust: SVGAnimatedEnumeration;
     readonly textLength: SVGAnimatedLength;
     getCharNumAtPosition(point: SVGPoint): number;
@@ -10948,7 +10842,6 @@ interface SVGTextContentElement extends EventTarget<SVGTextContentElement, SVGEl
     getStartPositionOfChar(charnum: number): SVGPoint;
     getSubStringLength(charnum: number, nchars: number): number;
     selectSubString(charnum: number, nchars: number): void;
-
 }
 
 declare var SVGTextContentElement: {
@@ -10959,8 +10852,9 @@ declare var SVGTextContentElement: {
     readonly LENGTHADJUST_UNKNOWN: number;
 };
 
-interface SVGTextElement extends EventTarget<SVGTextElement, SVGElementEventType>, SVGTextPositioningElement {
-
+interface SVGTextElement extends SVGTextPositioningElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGTextElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTextElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGTextElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTextElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGTextElement: {
@@ -10968,11 +10862,12 @@ declare var SVGTextElement: {
     new(): SVGTextElement;
 };
 
-interface SVGTextPathElement extends EventTarget<SVGTextPathElement, SVGElementEventType>, SVGTextContentElement, SVGURIReference {
+interface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {
+    /*! @ooml-mapto(addEventListener) */ addSVGTextPathElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTextPathElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGTextPathElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTextPathElement, T>, options?: boolean | EventListenerOptions): void;
     readonly method: SVGAnimatedEnumeration;
     readonly spacing: SVGAnimatedEnumeration;
     readonly startOffset: SVGAnimatedLength;
-
 }
 
 declare var SVGTextPathElement: {
@@ -10986,13 +10881,14 @@ declare var SVGTextPathElement: {
     readonly TEXTPATH_SPACINGTYPE_UNKNOWN: number;
 };
 
-interface SVGTextPositioningElement extends EventTarget<SVGTextPositioningElement, SVGElementEventType>, SVGTextContentElement {
+interface SVGTextPositioningElement extends SVGTextContentElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGTextPositioningElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTextPositioningElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGTextPositioningElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTextPositioningElement, T>, options?: boolean | EventListenerOptions): void;
     readonly dx: SVGAnimatedLengthList;
     readonly dy: SVGAnimatedLengthList;
     readonly rotate: SVGAnimatedNumberList;
     readonly x: SVGAnimatedLengthList;
     readonly y: SVGAnimatedLengthList;
-
 }
 
 declare var SVGTextPositioningElement: {
@@ -11000,8 +10896,9 @@ declare var SVGTextPositioningElement: {
     new(): SVGTextPositioningElement;
 };
 
-interface SVGTitleElement extends EventTarget<SVGTitleElement, SVGElementEventType>, SVGElement {
-
+interface SVGTitleElement extends SVGElement {
+    /*! @ooml-mapto(addEventListener) */ addSVGTitleElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTitleElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGTitleElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGTitleElement, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGTitleElement: {
@@ -11051,7 +10948,7 @@ declare var SVGTransformList: {
     new(): SVGTransformList;
 };
 
-interface SVGURIReference {
+interface SVGURIReference /*! @ooml-interface */ {
     readonly href: SVGAnimatedString;
 }
 
@@ -11061,14 +10958,15 @@ interface SVGUnitTypes /*! @ooml-static */ {
   readonly SVG_UNIT_TYPE_USERSPACEONUSE: number;
 }
 
-interface SVGUseElement extends EventTarget<SVGUseElement, SVGElementEventType>, SVGGraphicsElement, SVGURIReference {
+interface SVGUseElement extends SVGGraphicsElement, SVGURIReference {
+    /*! @ooml-mapto(addEventListener) */ addSVGUseElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGUseElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGUseElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGUseElement, T>, options?: boolean | EventListenerOptions): void;
     readonly animatedInstanceRoot: SVGElementInstance | null;
     readonly height: SVGAnimatedLength;
     readonly instanceRoot: SVGElementInstance | null;
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-
 }
 
 declare var SVGUseElement: {
@@ -11076,10 +10974,11 @@ declare var SVGUseElement: {
     new(): SVGUseElement;
 };
 
-interface SVGViewElement extends EventTarget<SVGViewElement, SVGElementEventType>, SVGElement, SVGFitToViewBox, SVGZoomAndPan {
+interface SVGViewElement extends SVGElement, SVGFitToViewBox, SVGZoomAndPan {
+    /*! @ooml-mapto(addEventListener) */ addSVGViewElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGViewElement, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSVGViewElementEventListener<T extends SVGElementEventType>(type: __Class<T>, listener: EventListener<SVGViewElement, T>, options?: boolean | EventListenerOptions): void;
     /** @deprecated */
     readonly viewTarget: SVGStringList;
-
 }
 
 declare var SVGViewElement: {
@@ -11127,11 +11026,13 @@ declare var ScopedCredentialInfo: {
     new(): ScopedCredentialInfo;
 };
 
-interface ScreenEventMap {
+interface ScreenEventType {
     "MSOrientationChange": Event;
 }
 
-interface Screen extends EventTarget<Screen, ScreenEventType> {
+interface Screen extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addScreenEventListener<T extends ScreenEventType>(type: __Class<T>, listener: EventListener<Screen, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeScreenEventListener<T extends ScreenEventType>(type: __Class<T>, listener: EventListener<Screen, T>, options?: boolean | EventListenerOptions): void;
     readonly availHeight: number;
     readonly availWidth: number;
     /** @deprecated */
@@ -11152,7 +11053,6 @@ interface Screen extends EventTarget<Screen, ScreenEventType> {
     msLockOrientation(orientations: string | string[]): boolean;
     msUnlockOrientation(): void;
     unlockOrientation(): void;
-
 }
 
 declare var Screen: {
@@ -11160,14 +11060,15 @@ declare var Screen: {
     new(): Screen;
 };
 
-interface ScriptProcessorNodeEventMap {
+interface ScriptProcessorNodeEventType {
     "audioprocess": AudioProcessingEvent;
 }
 
-interface ScriptProcessorNode extends EventTarget<ScriptProcessorNode, ScriptProcessorNodeEventType>, AudioNode {
+interface ScriptProcessorNode extends AudioNode {
+    /*! @ooml-mapto(addEventListener) */ addScriptProcessorNodeEventListener<T extends ScriptProcessorNodeEventType>(type: __Class<T>, listener: EventListener<ScriptProcessorNode, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeScriptProcessorNodeEventListener<T extends ScriptProcessorNodeEventType>(type: __Class<T>, listener: EventListener<ScriptProcessorNode, T>, options?: boolean | EventListenerOptions): void;
     /** @deprecated */
     readonly bufferSize: number;
-
 }
 
 declare var ScriptProcessorNode: {
@@ -11233,7 +11134,6 @@ interface Selection {
     selectAllChildren(parentNode: Node): void;
     setBaseAndExtent(baseNode: Node, baseOffset: number, extentNode: Node, extentOffset: number): void;
     setPosition(parentNode: Node, offset: number): void;
-    toString(): string;
 }
 
 declare var Selection: {
@@ -11247,15 +11147,16 @@ interface ServiceUIFrameContext {
 }
 declare var ServiceUIFrameContext: ServiceUIFrameContext;
 
-interface ServiceWorkerEventMap extends AbstractWorkerEventMap {
+interface ServiceWorkerEventType extends AbstractWorkerEventType {
     "statechange": Event;
 }
 
-interface ServiceWorker extends EventTarget<ServiceWorker, ServiceWorkerEventType>, AbstractWorker {
+interface ServiceWorker extends AbstractWorker {
+    /*! @ooml-mapto(addEventListener) */ addServiceWorkerEventListener<T extends ServiceWorkerEventType>(type: __Class<T>, listener: EventListener<ServiceWorker, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeServiceWorkerEventListener<T extends ServiceWorkerEventType>(type: __Class<T>, listener: EventListener<ServiceWorker, T>, options?: boolean | EventListenerOptions): void;
     readonly scriptURL: string;
     readonly state: ServiceWorkerState;
     postMessage(message: any, transfer?: any[]): void;
-
 }
 
 declare var ServiceWorker: {
@@ -11263,20 +11164,21 @@ declare var ServiceWorker: {
     new(): ServiceWorker;
 };
 
-interface ServiceWorkerContainerEventMap {
+interface ServiceWorkerContainerEventType {
     "controllerchange": Event;
     "message": ServiceWorkerMessageEvent;
     "messageerror": MessageEvent;
 }
 
-interface ServiceWorkerContainer extends EventTarget<ServiceWorkerContainer, ServiceWorkerContainerEventType> {
+interface ServiceWorkerContainer extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addServiceWorkerContainerEventListener<T extends ServiceWorkerContainerEventType>(type: __Class<T>, listener: EventListener<ServiceWorkerContainer, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeServiceWorkerContainerEventListener<T extends ServiceWorkerContainerEventType>(type: __Class<T>, listener: EventListener<ServiceWorkerContainer, T>, options?: boolean | EventListenerOptions): void;
     readonly controller: ServiceWorker | null;
     readonly ready: Promise<ServiceWorkerRegistration>;
     getRegistration(clientURL?: string): Promise<ServiceWorkerRegistration | null>;
     getRegistrations(): Promise<ServiceWorkerRegistration[]>;
     register(scriptURL: string, options?: RegistrationOptions): Promise<ServiceWorkerRegistration>;
     startMessages(): void;
-
 }
 
 declare var ServiceWorkerContainer: {
@@ -11297,11 +11199,13 @@ declare var ServiceWorkerMessageEvent: {
     new(type: string, eventInitDict?: ServiceWorkerMessageEventInit): ServiceWorkerMessageEvent;
 };
 
-interface ServiceWorkerRegistrationEventMap {
+interface ServiceWorkerRegistrationEventType {
     "updatefound": Event;
 }
 
-interface ServiceWorkerRegistration extends EventTarget<ServiceWorkerRegistration, ServiceWorkerRegistrationEventType> {
+interface ServiceWorkerRegistration extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addServiceWorkerRegistrationEventListener<T extends ServiceWorkerRegistrationEventType>(type: __Class<T>, listener: EventListener<ServiceWorkerRegistration, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeServiceWorkerRegistrationEventListener<T extends ServiceWorkerRegistrationEventType>(type: __Class<T>, listener: EventListener<ServiceWorkerRegistration, T>, options?: boolean | EventListenerOptions): void;
     readonly active: ServiceWorker | null;
     readonly installing: ServiceWorker | null;
     readonly pushManager: PushManager;
@@ -11312,7 +11216,6 @@ interface ServiceWorkerRegistration extends EventTarget<ServiceWorkerRegistratio
     showNotification(title: string, options?: NotificationOptions): Promise<void>;
     unregister(): Promise<boolean>;
     update(): Promise<void>;
-
 }
 
 declare var ServiceWorkerRegistration: {
@@ -11362,11 +11265,13 @@ declare var SourceBufferList: {
     new(): SourceBufferList;
 };
 
-interface SpeechSynthesisEventMap {
+interface SpeechSynthesisEventType {
     "voiceschanged": Event;
 }
 
-interface SpeechSynthesis extends EventTarget<SpeechSynthesis, SpeechSynthesisEventType> {
+interface SpeechSynthesis extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addSpeechSynthesisEventListener<T extends SpeechSynthesisEventType>(type: __Class<T>, listener: EventListener<SpeechSynthesis, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSpeechSynthesisEventListener<T extends SpeechSynthesisEventType>(type: __Class<T>, listener: EventListener<SpeechSynthesis, T>, options?: boolean | EventListenerOptions): void;
     readonly paused: boolean;
     readonly pending: boolean;
     readonly speaking: boolean;
@@ -11375,7 +11280,6 @@ interface SpeechSynthesis extends EventTarget<SpeechSynthesis, SpeechSynthesisEv
     pause(): void;
     resume(): void;
     speak(utterance: SpeechSynthesisUtterance): void;
-
 }
 
 declare var SpeechSynthesis: {
@@ -11396,7 +11300,7 @@ declare var SpeechSynthesisEvent: {
     new(type: string, eventInitDict?: SpeechSynthesisEventInit): SpeechSynthesisEvent;
 };
 
-interface SpeechSynthesisUtteranceEventMap {
+interface SpeechSynthesisUtteranceEventType {
     "boundary": Event;
     "end": Event;
     "error": Event;
@@ -11406,14 +11310,15 @@ interface SpeechSynthesisUtteranceEventMap {
     "start": Event;
 }
 
-interface SpeechSynthesisUtterance extends EventTarget<SpeechSynthesisUtterance, SpeechSynthesisUtteranceEventType> {
+interface SpeechSynthesisUtterance extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addSpeechSynthesisUtteranceEventListener<T extends SpeechSynthesisUtteranceEventType>(type: __Class<T>, listener: EventListener<SpeechSynthesisUtterance, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeSpeechSynthesisUtteranceEventListener<T extends SpeechSynthesisUtteranceEventType>(type: __Class<T>, listener: EventListener<SpeechSynthesisUtterance, T>, options?: boolean | EventListenerOptions): void;
     lang: string;
     pitch: number;
     rate: number;
     text: string;
     voice: SpeechSynthesisVoice;
     volume: number;
-
 }
 
 declare var SpeechSynthesisUtterance: {
@@ -11610,13 +11515,15 @@ declare var TextMetrics: {
     new(): TextMetrics;
 };
 
-interface TextTrackEventMap {
+interface TextTrackEventType {
     "cuechange": Event;
     "error": Event;
     "load": Event;
 }
 
-interface TextTrack extends EventTarget<TextTrack, TextTrackEventType> {
+interface TextTrack extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addTextTrackEventListener<T extends TextTrackEventType>(type: __Class<T>, listener: EventListener<TextTrack, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeTextTrackEventListener<T extends TextTrackEventType>(type: __Class<T>, listener: EventListener<TextTrack, T>, options?: boolean | EventListenerOptions): void;
     readonly activeCues: TextTrackCueList;
     readonly cues: TextTrackCueList;
     readonly inBandMetadataTrackDispatchType: string;
@@ -11627,7 +11534,6 @@ interface TextTrack extends EventTarget<TextTrack, TextTrackEventType> {
     readonly readyState: number;
     addCue(cue: TextTrackCue): void;
     removeCue(cue: TextTrackCue): void;
-
 }
 
 declare var TextTrack: {
@@ -11642,12 +11548,14 @@ declare var TextTrack: {
     readonly SHOWING: number;
 };
 
-interface TextTrackCueEventMap {
+interface TextTrackCueEventType {
     "enter": Event;
     "exit": Event;
 }
 
-interface TextTrackCue extends EventTarget<TextTrackCue, TextTrackCueEventType> {
+interface TextTrackCue extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addTextTrackCueEventListener<T extends TextTrackCueEventType>(type: __Class<T>, listener: EventListener<TextTrackCue, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeTextTrackCueEventListener<T extends TextTrackCueEventType>(type: __Class<T>, listener: EventListener<TextTrackCue, T>, options?: boolean | EventListenerOptions): void;
     endTime: number;
     id: string;
     pauseOnExit: boolean;
@@ -11655,7 +11563,6 @@ interface TextTrackCue extends EventTarget<TextTrackCue, TextTrackCueEventType>
     text: string;
     readonly track: TextTrack;
     getCueAsHTML(): DocumentFragment;
-
 }
 
 declare var TextTrackCue: {
@@ -11675,11 +11582,13 @@ declare var TextTrackCueList: {
     new(): TextTrackCueList;
 };
 
-interface TextTrackListEventMap {
+interface TextTrackListEventType {
     "addtrack": TrackEvent;
 }
 
-interface TextTrackList extends EventTarget<TextTrackList, TextTrackListEventType> {
+interface TextTrackList extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addTextTrackListEventListener<T extends TextTrackListEventType>(type: __Class<T>, listener: EventListener<TextTrackList, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeTextTrackListEventListener<T extends TextTrackListEventType>(type: __Class<T>, listener: EventListener<TextTrackList, T>, options?: boolean | EventListenerOptions): void;
     readonly length: number;
     item(index: number): TextTrack;
 
@@ -11820,7 +11729,6 @@ interface URL {
     search: string;
     readonly searchParams: URLSearchParams;
     username: string;
-    toString(): string;
 }
 
 declare var URL: {
@@ -12012,13 +11920,15 @@ declare var VideoTrack: {
     new(): VideoTrack;
 };
 
-interface VideoTrackListEventMap {
+interface VideoTrackListEventType {
     "addtrack": TrackEvent;
     "change": Event;
     "removetrack": TrackEvent;
 }
 
-interface VideoTrackList extends EventTarget<VideoTrackList, VideoTrackListEventType> {
+interface VideoTrackList extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addVideoTrackListEventListener<T extends VideoTrackListEventType>(type: __Class<T>, listener: EventListener<VideoTrackList, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeVideoTrackListEventListener<T extends VideoTrackListEventType>(type: __Class<T>, listener: EventListener<VideoTrackList, T>, options?: boolean | EventListenerOptions): void;
     readonly length: number;
     readonly selectedIndex: number;
     getTrackById(id: string): VideoTrack | null;
@@ -12764,7 +12674,6 @@ interface WebKitCSSMatrix {
     setMatrixValue(value: string): void;
     skewX(angle: number): WebKitCSSMatrix;
     skewY(angle: number): WebKitCSSMatrix;
-    toString(): string;
     translate(x: number, y: number, z?: number): WebKitCSSMatrix;
 }
 
@@ -12833,14 +12742,16 @@ declare var WebKitPoint: {
     new(x?: number, y?: number): WebKitPoint;
 };
 
-interface WebSocketEventMap {
+interface WebSocketEventType {
     "close": CloseEvent;
     "error": Event;
     "message": MessageEvent;
     "open": Event;
 }
 
-interface WebSocket extends EventTarget<WebSocket, WebSocketEventType> {
+interface WebSocket extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addWebSocketEventListener<T extends WebSocketEventType>(type: __Class<T>, listener: EventListener<WebSocket, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeWebSocketEventListener<T extends WebSocketEventType>(type: __Class<T>, listener: EventListener<WebSocket, T>, options?: boolean | EventListenerOptions): void;
     binaryType: BinaryType;
     readonly bufferedAmount: number;
     readonly extensions: string;
@@ -12849,7 +12760,6 @@ interface WebSocket extends EventTarget<WebSocket, WebSocketEventType> {
     readonly url: string;
     close(code?: number, reason?: string): void;
     send(data: string | BufferSource | Blob): void;
-
 }
 
 declare var WebSocket: {
@@ -12881,7 +12791,7 @@ declare var WheelEvent: {
     readonly DOM_DELTA_PIXEL: number;
 };
 
-interface WindowEventMap extends GlobalEventHandlersEventMap {
+interface WindowEventType extends GlobalEventHandlersEventType {
     "abort": UIEvent;
     "afterprint": Event;
     "beforeprint": Event;
@@ -12984,7 +12894,9 @@ interface WindowEventMap extends GlobalEventHandlersEventMap {
     "waiting": Event;
 }
 
-interface Window extends EventTarget<Window, WindowEventType>, GlobalEventHandlers {
+interface Window extends EventTarget, GlobalEventHandlers {
+    /*! @ooml-mapto(addEventListener) */ addWindowEventListener<T extends WindowEventType>(type: __Class<T>, listener: EventListener<Window, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeWindowEventListener<T extends WindowEventType>(type: __Class<T>, listener: EventListener<Window, T>, options?: boolean | EventListenerOptions): void;
   clearInterval(handle: number): void;
   clearTimeout(handle: number): void;
   setInterval(handler: (...args: any[]) => void, timeout: number): number;
@@ -13004,7 +12916,6 @@ interface Window extends EventTarget<Window, WindowEventType>, GlobalEventHandle
     readonly clientInformation: Navigator;
     readonly closed: boolean;
     readonly crypto: Crypto;
-    customElements: CustomElementRegistry;
     defaultStatus: string;
     readonly devicePixelRatio: number;
     readonly doNotTrack: string;
@@ -13021,7 +12932,6 @@ interface Window extends EventTarget<Window, WindowEventType>, GlobalEventHandle
     location: Location;
     readonly locationbar: BarProp;
     readonly menubar: BarProp;
-    readonly msContentScript: ExtensionScriptApis;
     readonly msCredentials: MSCredentials;
     name: string;
     readonly navigator: Navigator;
@@ -13076,18 +12986,17 @@ interface Window extends EventTarget<Window, WindowEventType>, GlobalEventHandle
     requestAnimationFrame(callback: FrameRequestCallback): number;
     resizeBy(x?: number, y?: number): void;
     resizeTo(x?: number, y?: number): void;
-    scroll(options?: ScrollToOptions): void;
+    scroll(options: ScrollToOptions): void;
     scroll(x?: number, y?: number): void;
-    scrollBy(options?: ScrollToOptions): void;
+    scrollBy(options: ScrollToOptions): void;
     scrollBy(x?: number, y?: number): void;
-    scrollTo(options?: ScrollToOptions): void;
+    scrollTo(options: ScrollToOptions): void;
     scrollTo(x?: number, y?: number): void;
     stop(): void;
     webkitCancelAnimationFrame(handle: number): void;
     webkitConvertPointFromNodeToPage(node: Node, pt: WebKitPoint): WebKitPoint;
     webkitConvertPointFromPageToNode(node: Node, pt: WebKitPoint): WebKitPoint;
     webkitRequestAnimationFrame(callback: FrameRequestCallback): number;
-
 }
 
 declare var Window: {
@@ -13095,7 +13004,7 @@ declare var Window: {
     new(): Window;
 };
 
-interface WindowEventHandlersEventMap {
+interface WindowEventHandlersEventType {
     "afterprint": Event;
     "beforeprint": Event;
     "beforeunload": BeforeUnloadEvent;
@@ -13110,19 +13019,21 @@ interface WindowEventHandlersEventMap {
     "unload": Event;
 }
 
-interface WindowEventHandlers extends EventTarget<WindowEventHandlers, WindowEventHandlersEventType> {
-
+interface WindowEventHandlers /*! @ooml-interface */ {
+    /*! @ooml-mapto(addEventListener) */ addWindowEventHandlersEventListener<T extends WindowEventHandlersEventType>(type: __Class<T>, listener: EventListener<WindowEventHandlers, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeWindowEventHandlersEventListener<T extends WindowEventHandlersEventType>(type: __Class<T>, listener: EventListener<WindowEventHandlers, T>, options?: boolean | EventListenerOptions): void;
 }
 
-interface WorkerEventMap extends AbstractWorkerEventMap {
+interface WorkerEventType extends AbstractWorkerEventType {
     "message": MessageEvent;
 }
 
-interface Worker extends EventTarget<Worker, WorkerEventType>, AbstractWorker {
+interface Worker extends AbstractWorker {
+    /*! @ooml-mapto(addEventListener) */ addWorkerEventListener<T extends WorkerEventType>(type: __Class<T>, listener: EventListener<Worker, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeWorkerEventListener<T extends WorkerEventType>(type: __Class<T>, listener: EventListener<Worker, T>, options?: boolean | EventListenerOptions): void;
     /** @deprecated */
     postMessage(message: any, transfer?: any[]): void;
     terminate(): void;
-
 }
 
 declare var Worker: {
@@ -13165,8 +13076,9 @@ declare var WritableStreamDefaultWriter: {
     new(): WritableStreamDefaultWriter;
 };
 
-interface XMLDocument extends EventTarget<XMLDocument, DocumentEventType>, Document {
-
+interface XMLDocument extends Document {
+    /*! @ooml-mapto(addEventListener) */ addXMLDocumentEventListener<T extends DocumentEventType>(type: __Class<T>, listener: EventListener<XMLDocument, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeXMLDocumentEventListener<T extends DocumentEventType>(type: __Class<T>, listener: EventListener<XMLDocument, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var XMLDocument: {
@@ -13174,11 +13086,13 @@ declare var XMLDocument: {
     new(): XMLDocument;
 };
 
-interface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {
+interface XMLHttpRequestEventType extends XMLHttpRequestEventTargetEventType {
     "readystatechange": Event;
 }
 
-interface XMLHttpRequest extends EventTarget<XMLHttpRequest, XMLHttpRequestEventType>, XMLHttpRequestEventTarget {
+interface XMLHttpRequest extends XMLHttpRequestEventTarget {
+    /*! @ooml-mapto(addEventListener) */ addXMLHttpRequestEventListener<T extends XMLHttpRequestEventType>(type: __Class<T>, listener: EventListener<XMLHttpRequest, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeXMLHttpRequestEventListener<T extends XMLHttpRequestEventType>(type: __Class<T>, listener: EventListener<XMLHttpRequest, T>, options?: boolean | EventListenerOptions): void;
     msCaching: string;
     readonly readyState: number;
     readonly response: any;
@@ -13199,7 +13113,6 @@ interface XMLHttpRequest extends EventTarget<XMLHttpRequest, XMLHttpRequestEvent
     overrideMimeType(mime: string): void;
     send(data?: any): void;
     setRequestHeader(header: string, value: string): void;
-
 }
 
 declare var XMLHttpRequest: {
@@ -13212,7 +13125,7 @@ declare var XMLHttpRequest: {
     readonly UNSENT: number;
 };
 
-interface XMLHttpRequestEventTargetEventMap {
+interface XMLHttpRequestEventTargetEventType {
     "abort": Event;
     "error": ErrorEvent;
     "load": Event;
@@ -13222,12 +13135,14 @@ interface XMLHttpRequestEventTargetEventMap {
     "timeout": ProgressEvent;
 }
 
-interface XMLHttpRequestEventTarget extends EventTarget<XMLHttpRequestEventTarget, XMLHttpRequestEventTargetEventType> {
-
+interface XMLHttpRequestEventTarget extends EventTarget {
+    /*! @ooml-mapto(addEventListener) */ addXMLHttpRequestEventTargetEventListener<T extends XMLHttpRequestEventTargetEventType>(type: __Class<T>, listener: EventListener<XMLHttpRequestEventTarget, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeXMLHttpRequestEventTargetEventListener<T extends XMLHttpRequestEventTargetEventType>(type: __Class<T>, listener: EventListener<XMLHttpRequestEventTarget, T>, options?: boolean | EventListenerOptions): void;
 }
 
-interface XMLHttpRequestUpload extends EventTarget<XMLHttpRequestUpload, XMLHttpRequestEventTargetEventType>, XMLHttpRequestEventTarget {
-
+interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
+    /*! @ooml-mapto(addEventListener) */ addXMLHttpRequestUploadEventListener<T extends XMLHttpRequestEventTargetEventType>(type: __Class<T>, listener: EventListener<XMLHttpRequestUpload, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removeXMLHttpRequestUploadEventListener<T extends XMLHttpRequestEventTargetEventType>(type: __Class<T>, listener: EventListener<XMLHttpRequestUpload, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var XMLHttpRequestUpload: {
@@ -13316,8 +13231,9 @@ declare var XSLTProcessor: {
     new(): XSLTProcessor;
 };
 
-interface webkitRTCPeerConnection extends EventTarget<webkitRTCPeerConnection, RTCPeerConnectionEventType>, RTCPeerConnection {
-
+interface webkitRTCPeerConnection extends RTCPeerConnection {
+    /*! @ooml-mapto(addEventListener) */ addwebkitRTCPeerConnectionEventListener<T extends RTCPeerConnectionEventType>(type: __Class<T>, listener: EventListener<webkitRTCPeerConnection, T>, options?: boolean | AddEventListenerOptions): void;
+    /*! @ooml-mapto(removeEventListener) */ removewebkitRTCPeerConnectionEventListener<T extends RTCPeerConnectionEventType>(type: __Class<T>, listener: EventListener<webkitRTCPeerConnection, T>, options?: boolean | EventListenerOptions): void;
 }
 
 declare var webkitRTCPeerConnection: {
@@ -13333,18 +13249,6 @@ interface DecodeSuccessCallback {
     (decodedData: AudioBuffer): void;
 }
 
-interface ErrorEventHandler {
-    (event: Event | string, source?: string, fileno?: number, columnNumber?: number, error?: Error): void;
-}
-
-interface EventHandlerNonNull {
-    (event: Event): any;
-}
-
-interface ForEachCallback {
-    (keyId: BufferSource | null, status: MediaKeyStatus): void;
-}
-
 interface FrameRequestCallback {
     (time: number): void;
 }
@@ -13401,10 +13305,6 @@ interface RTCStatsCallback {
     (report: RTCStatsReport): void;
 }
 
-interface VoidFunction {
-    (): void;
-}
-
 interface WritableStreamChunkCallback {
     (chunk: any, controller: WritableStreamDefaultController): void;
 }
@@ -13422,7 +13322,6 @@ declare var caches: CacheStorage;
 declare var clientInformation: Navigator;
 declare var closed: boolean;
 declare var crypto: Crypto;
-declare var customElements: CustomElementRegistry;
 declare var defaultStatus: string;
 declare var devicePixelRatio: number;
 declare var doNotTrack: string;
@@ -13438,7 +13337,6 @@ declare var length: number;
 declare var location: Location;
 declare var locationbar: BarProp;
 declare var menubar: BarProp;
-declare var msContentScript: ExtensionScriptApis;
 declare var msCredentials: MSCredentials;
 declare var navigator: Navigator;
 declare var offscreenBuffering: string | boolean;
@@ -13503,7 +13401,6 @@ declare function webkitCancelAnimationFrame(handle: number): void;
 declare function webkitConvertPointFromNodeToPage(node: Node, pt: WebKitPoint): WebKitPoint;
 declare function webkitConvertPointFromPageToNode(node: Node, pt: WebKitPoint): WebKitPoint;
 declare function webkitRequestAnimationFrame(callback: FrameRequestCallback): number;
-declare function toString(): string;
 declare function dispatchEvent(evt: Event): boolean;
 declare function clearInterval(handle: number | null): void;
 declare function clearTimeout(handle: number | null): void;
diff --git a/dec/dom.iterable.d.ts b/dec/dom.iterable.d.ts
index e470b5408d..38ee4741c8 100644
--- a/dec/dom.iterable.d.ts
+++ b/dec/dom.iterable.d.ts
@@ -20,17 +20,17 @@ interface Headers {
     values(): IterableIterator<string>;
 }
 
-interface NodeList {
+interface NodeList<T extends Node> {
     /**
      * Returns an array of key, value pairs for every entry in the list
      */
-    entries(): IterableIterator<[number, Node]>;
+    entries(): IterableIterator<[number, T]>;
     /**
      * Performs the specified action for each node in an list.
      * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the list.
      * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
      */
-    forEach(callbackfn: (value: Node, index: number, listObj: NodeList) => void, thisArg?: any): void;
+    forEach(callback: IterationConsumer<number, T, NodeList<T>>): void;
     /**
      * Returns an list of keys in the list
      */
@@ -39,42 +39,13 @@ interface NodeList {
     /**
      * Returns an list of values in the list
      */
-    values(): IterableIterator<Node>;
+    values(): IterableIterator<T>;
 
 
-    [Symbol.iterator](): IterableIterator<Node>;
-}
-
-interface NodeListOf<TNode extends Node> {
-
-    /**
-     * Returns an array of key, value pairs for every entry in the list
-     */
-    entries(): IterableIterator<[number, TNode]>;
-
-    /**
-     * Performs the specified action for each node in an list.
-     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the list.
-     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-     */
-    forEach(callbackfn: (value: TNode, index: number, listObj: NodeListOf<TNode>) => void, thisArg?: any): void;
-    /**
-     * Returns an list of keys in the list
-     */
-    keys(): IterableIterator<number>;
-    /**
-     * Returns an list of values in the list
-     */
-    values(): IterableIterator<TNode>;
-
-    [Symbol.iterator](): IterableIterator<TNode>;
-}
-
-interface HTMLCollectionBase {
-    [Symbol.iterator](): IterableIterator<Element>;
+    [Symbol.iterator](): IterableIterator<T>;
 }
 
-interface HTMLCollectionOf<T extends Element> {
+interface HTMLCollection<T extends Element> {
     [Symbol.iterator](): IterableIterator<T>;
 }
 
diff --git a/dec/es2015.collection.d.ts b/dec/es2015.collection.d.ts
index d41ec94380..4c08eb609e 100644
--- a/dec/es2015.collection.d.ts
+++ b/dec/es2015.collection.d.ts
@@ -1,6 +1,6 @@
 interface WeakMap<K extends object, V> {
     delete(key: K): boolean;
-    get(key: K): V | undefined;
+    get(key: K): V | null;
     has(key: K): boolean;
     set(key: K, value: V): this;
 }
diff --git a/dec/es2018.promise.d.ts b/dec/es2018.promise.d.ts
index 343874a99a..714b9d1b5b 100644
--- a/dec/es2018.promise.d.ts
+++ b/dec/es2018.promise.d.ts
@@ -8,5 +8,5 @@ interface Promise<T> {
      * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
      * @returns A Promise for the completion of the callback.
      */
-    finally(onfinally?: (() => void) | undefined | null): Promise<T>
+    finally(onfinally?: (() => void) | null): Promise<T>
 }
diff --git a/dec/es5.d.ts b/dec/es5.d.ts
index 0430db3f1a..f685f254a9 100644
--- a/dec/es5.d.ts
+++ b/dec/es5.d.ts
@@ -80,9 +80,6 @@ interface RegExp {
     readonly multiline: boolean;
 
     lastIndex: number;
-
-    // Non-standard extensions
-    compile(): this;
 }
 
 interface RegExpConstructor {
@@ -223,6 +220,10 @@ interface Promise<T> {
     catch<R>(onrejected?: PromiseHandler<any, R>): Promise<R>;
 }
 
+interface IterationConsumer<K, V, T> {
+  (value: V, index: K, array: T): void;
+}
+
 /**
   * Represents a raw buffer of binary data, which is used to store data for the
   * different typed arrays. ArrayBuffers cannot be read from or written to directly,
@@ -398,8 +399,7 @@ interface TypedArrayIterationCallback<T, R> {
   (value: number, index: number, array: T): R;
 }
 
-interface TypedArrayIterationConsumer<T> {
-  (value: number, index: number, array: T): void;
+interface TypedArrayIterationConsumer<T> extends IterationConsumer<number, number, T> /*! @ooml-interface */ {
 }
 
 interface TypedArrayIterationReducer<T, U> {
@@ -456,7 +456,7 @@ interface TypedArray<T extends TypedArray<T>> extends ArrayBufferView<T> {
        * @param thisArg If provided, it will be used as the this value for each invocation of
        * predicate. If it is not provided, undefined is used instead.
        */
-     find(predicate: TypedArrayIterationCallback<T, boolean>): number | undefined;
+     find(predicate: TypedArrayIterationCallback<T, boolean>): number | null;
 
      /**
        * Returns the index of the first element in the array where predicate is true, and -1
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaBuiltin.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaBuiltin.java
index 704ba44836..455910a15b 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaBuiltin.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaBuiltin.java
@@ -1,31 +1,6 @@
 package org.ooml.oomlc.core.env.gen.Compiling.Java;
 
-import static org.ooml.oomlc.core.env.gen.Compiling.Java.JavaCompiler.TYPE_VOID;
-
 public class JavaBuiltin {
   public static final JavaClass[] CLASSES = new JavaClass[]{
-    new JavaClass(JavaClass.ClassType.INTERFACE, "EventType"),
-
-    new JavaClass(JavaClass.ClassType.INTERFACE, "Indexable", new JavaGenericParameter[]{
-      new JavaGenericParameter("Q"),
-      new JavaGenericParameter("R")
-    }, null),
-
-    new JavaClass(JavaClass.ClassType.INTERFACE, "GetIndexable", new JavaGenericParameter[]{
-      new JavaGenericParameter("Q"), new JavaGenericParameter("R")
-    }, new String[]{"Indexable<Q, R>"}, new JavaClassMethod[]{
-      new JavaClassMethod(false, null, new JavaType("R"), "__getIndex", new JavaClassMethodParameter[]{
-        new JavaClassMethodParameter("index", new JavaType("Q"))
-      })
-    }),
-
-    new JavaClass(JavaClass.ClassType.INTERFACE, "SetIndexable", new JavaGenericParameter[]{
-      new JavaGenericParameter("Q"), new JavaGenericParameter("R")
-    }, new String[]{"Indexable<Q, R>"}, new JavaClassMethod[]{
-      new JavaClassMethod(false, null, TYPE_VOID, "__setIndex", new JavaClassMethodParameter[]{
-        new JavaClassMethodParameter("index", new JavaType("Q")),
-        new JavaClassMethodParameter("value", new JavaType("R"))
-      })
-    }),
   };
 }
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethod.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethod.java
index 6d40875abc..b3911ab64a 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethod.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethod.java
@@ -67,7 +67,7 @@ class JavaClassMethod {
     syntax
       .append(returnType)
       .append(' ')
-      .append(name);
+      .append(UtilJava.safeIdentifier(name));
 
     syntax
       .append(' ')
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethodParameter.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethodParameter.java
index 0ed404722c..8e30e281f6 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethodParameter.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethodParameter.java
@@ -20,14 +20,9 @@ class JavaClassMethodParameter {
 
   @Override
   public String toString () {
-    StringBuilder syntax = new StringBuilder();
-
-    syntax
-      .append(type)
-      .append(' ')
-      .append(isVariableLength ? "..." : "")
-      .append(name);
-
-    return syntax.toString();
+    return String.valueOf(type) +
+           ' ' +
+           (isVariableLength ? "..." : "") +
+           UtilJava.safeIdentifier(name);
   }
 }
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassVariable.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassVariable.java
index c1d0f39cda..a3baeacf9d 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassVariable.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassVariable.java
@@ -43,7 +43,7 @@ class JavaClassVariable {
            (isFinal ? "final " : "") +
            type +
            ' ' +
-           name +
+           UtilJava.safeIdentifier(name) +
            " = " + DEFAULT_VALUES.get(type.reference) + ";";
   }
 }
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaCompiler.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaCompiler.java
index cd956d0525..aaab1399ee 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaCompiler.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaCompiler.java
@@ -71,19 +71,22 @@ public class JavaCompiler {
     return map;
   }
 
-  public static String compileTopLevel (STNamespace namespace) {
+  public static String compileAll (List<STNamespace> stNamespaces) {
     JavaClass window = new JavaClass(REGULAR, "window");
     window.isFinal = true;
 
     window.nestedClasses.addAll(Arrays.asList(JavaBuiltin.CLASSES));
 
-    new JavaCompiler(null, window, namespace)
-      .compile();
+    for (STNamespace stNamespace : stNamespaces) {
+      new JavaCompiler(null, window, stNamespace)
+        .compile();
+    }
     String code = window.toString(false, false);
 
     return "package org.ooml.oomlc.env;" +
            "\n\n" +
            "import java.util.ArrayList;\n" +
+           "import java.util.Date;\n" +
            "import java.util.Optional;\n" +
            '\n' +
            code;
@@ -178,7 +181,7 @@ public class JavaCompiler {
     STInterfaceStatement stIntfStmt = stNamespace.getInterfaces().get(name);
     STInterfaceBody stIntfBody = stIntfStmt.getInterfaceBody();
 
-    if (name.endsWith("EventMap")) {
+    if (name.endsWith("EventType")) {
       processEventMap(stIntfStmt);
 
     } else if (stIntfBody.getConstructors().isEmpty() &&
@@ -293,19 +296,10 @@ public class JavaCompiler {
   }
 
   private void processEventMap (STInterfaceStatement stIntfStmt) {
-    String eventTypeName = stIntfStmt.getName().replace("Map", "Type");
+    String eventTypeName = stIntfStmt.getName();
     JavaClass eventTypeClass = new JavaClass(INTERFACE, eventTypeName);
-    if (stIntfStmt.getParents().isEmpty()) {
-      eventTypeClass.extendsClasses.add("EventType");
-    } else {
-      for (STType stParent : stIntfStmt.getParents()) {
-        if (stParent.getTypeType() != STType.TypeType.REFERENCE) {
-          throw new MalformedSyntaxException("Invalid event map parent", stParent.getPosition());
-        }
-        String parentName = ((STReferenceType) stParent).getReference().replace("Map", "Type");
-        eventTypeClass.extendsClasses.add(parentName);
-      }
-    }
+
+    // Don't add parents (see EventTarget.md)
 
     for (Map.Entry<String, STInterfaceProperty> map : stIntfStmt.getInterfaceBody().getProperties().entrySet()) {
       String specificEventName = map.getKey();
@@ -333,9 +327,9 @@ public class JavaCompiler {
   private JavaClass compileInterfaceBody (STInterfaceBody stIntf, String forName) {
     JavaClass i = new JavaClass(forName);
 
-    boolean isJavaAbstract = stIntf.hasAnnotation(STAnnotation.ABSTRACT);
-    boolean isJavaInterface = stIntf.hasAnnotation(STAnnotation.INTERFACE);
-    boolean isJavaStatic = stIntf.hasAnnotation(STAnnotation.STATIC);
+    boolean isJavaAbstract = stIntf.hasAnnotation(STAnnotation.Type.ABSTRACT);
+    boolean isJavaInterface = stIntf.hasAnnotation(STAnnotation.Type.INTERFACE);
+    boolean isJavaStatic = stIntf.hasAnnotation(STAnnotation.Type.STATIC);
 
     i.classType = isJavaAbstract ? ABSTRACT : isJavaInterface ? INTERFACE : REGULAR;
 
@@ -348,9 +342,14 @@ public class JavaCompiler {
     if (stIndexSig != null) {
       JavaType paramType = compileType(stIndexSig.getType(), forName + "IndexQuery");
       JavaType returnType = compileType(stIndexSig.getReturnType(), forName + "IndexReturn");
-      i.implementsClasses.add("GetIndexable<" + paramType + ", " + returnType + ">");
-      if (stIndexSig.isReadOnly()) {
-        i.implementsClasses.add("SetIndexable<" + paramType + ", " + returnType + ">");
+      i.methods.add(new JavaClassMethod(false, null, returnType, "__getIndex", new JavaClassMethodParameter[]{
+        new JavaClassMethodParameter("index", paramType),
+      }));
+      if (!stIndexSig.isReadOnly()) {
+        i.methods.add(new JavaClassMethod(false, null, TYPE_VOID, "__setIndex", new JavaClassMethodParameter[]{
+          new JavaClassMethodParameter("index", paramType),
+          new JavaClassMethodParameter("value", returnType),
+        }));
       }
     }
 
@@ -384,7 +383,7 @@ public class JavaCompiler {
       JavaClassVariable variable = new JavaClassVariable(
         isReadOnly,
         type,
-        UtilJava.safeIdentifier(name)
+        name
       );
 
       // Don't just set isStatic = isJavaStatic as property may have own annotation
@@ -441,7 +440,7 @@ public class JavaCompiler {
     if (stParameters.isEmpty()) {
       JavaClassMethod overload = new JavaClassMethod(
         returnType,
-        UtilJava.safeIdentifier(name)
+        name
       );
       overload.genericParameters = genericParameters;
       overloads.add(overload);
@@ -450,7 +449,7 @@ public class JavaCompiler {
       for (List<JavaClassMethodParameter> overloadSignature : compileSignature(stCall.getParameters(), forName)) {
         JavaClassMethod overload = new JavaClassMethod(
           returnType,
-          UtilJava.safeIdentifier(name)
+          name
         );
         overload.genericParameters = genericParameters;
         overload.parameters = overloadSignature;
@@ -648,6 +647,7 @@ public class JavaCompiler {
     case ANY:
     case ARRAY:
     case CALLABLE:
+    case GENERIC:
     case PRIMITIVE:
     case REFERENCE:
     case UNION:
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/UtilJava.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/UtilJava.java
index 8ef65bd1c9..a044464023 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/UtilJava.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/UtilJava.java
@@ -19,11 +19,13 @@ public class UtilJava {
 
     set.add("assert");
     set.add("catch");
+    set.add("char");
     set.add("continue");
     set.add("default");
     set.add("extends");
     set.add("import");
     set.add("public");
+    set.add("this");
 
     return set;
   }
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Code.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Code.java
index ec1afcdaa5..b8eb4443d9 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Code.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Code.java
@@ -205,6 +205,12 @@ public class Code implements Matchable<Character> {
     readChar();
   }
 
+  public void skip (int count) {
+    for (int i = 0; i < count; i++) {
+      skip();
+    }
+  }
+
   public boolean skipIfNext (char c) {
     char nextChar = readChar();
     if (nextChar == c) {
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Lexer.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Lexer.java
index ffec9776b1..b019aeb0ba 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Lexer.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Lexer.java
@@ -29,6 +29,7 @@ public class Lexer {
 
     map.put("abstract", T_OOML_ANNOTATION_ABSTRACT);
     map.put("interface", T_OOML_ANNOTATION_INTERFACE);
+    map.put("mapto", T_OOML_ANNOTATION_MAPTO);
     map.put("static", T_OOML_ANNOTATION_STATIC);
 
     return map;
@@ -184,22 +185,33 @@ public class Lexer {
 
   // Called when next char is '/*!'
   private Token lexOomlAnnotation () {
-    code.skip();
-    code.skip();
-    code.skip();
+    code.skip(3);
 
-    String raw = code.acceptUntil('*').trim();
-    if (!raw.startsWith("@ooml-")) {
+    String prefix = code.acceptUntil('-').trim();
+    if (!prefix.startsWith("@ooml")) {
       throw code.constructMalformedSyntaxException("Invalid ooml annotation");
     }
-    TokenType t = OOML_ANNOTATION.get(raw.substring(6));
+    code.skip();
+
+    StringBuilder type = new StringBuilder();
+    while (Character.isAlphabetic(code.peek())) {
+      type.append(code.accept());
+    }
+
+    TokenType t = OOML_ANNOTATION.get(type.toString());
     if (t == null) {
       throw code.constructMalformedSyntaxException("Invalid ooml annotation");
     }
 
-    code.skip();
-    code.skip();
+    String value = null;
+    if (code.skipIfNext('(')) {
+      value = code.acceptUntil(')');
+      code.skip();
+    }
+
+    code.skipUntil('*');
+    code.skip(2);
 
-    return constructToken(t);
+    return constructToken(t, value);
   }
 }
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java
index 7b535fc544..cd61f92b12 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java
@@ -15,6 +15,7 @@ import java.nio.charset.Charset;
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.nio.file.Paths;
+import java.util.ArrayList;
 import java.util.Collections;
 
 public class Main {
@@ -35,10 +36,14 @@ public class Main {
       throw new IllegalArgumentException("Malformed arguments");
     }
 
-    STNamespace namespace = parseFile(args[0]);
-    Path outputPath = Paths.get(args[1]);
+    ArrayList<STNamespace> stNamespaces = new ArrayList<>();
+    for (int i = 0; i < args.length - 1; i++) {
+      stNamespaces.add(parseFile(args[i]));
+    }
+
+    Path outputPath = Paths.get(args[args.length - 1]);
 
-    String java = JavaCompiler.compileTopLevel(namespace);
+    String java = JavaCompiler.compileAll(stNamespaces);
     Files.write(outputPath, Collections.singleton(java), Charset.forName("UTF-8"));
   }
 }
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/TokenType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/TokenType.java
index 4f921b45d2..ff2cf600be 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/TokenType.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/TokenType.java
@@ -41,6 +41,7 @@ public enum TokenType {
 
   T_OOML_ANNOTATION_ABSTRACT,
   T_OOML_ANNOTATION_INTERFACE,
+  T_OOML_ANNOTATION_MAPTO,
   T_OOML_ANNOTATION_STATIC,
 
   T_LITERAL_STRING,
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STAnnotation.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STAnnotation.java
index ed099bb9ab..966ed217bd 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STAnnotation.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STAnnotation.java
@@ -1,5 +1,6 @@
 package org.ooml.oomlc.core.env.gen.Syntax;
 
+import org.ooml.oomlc.core.env.gen.Parsing.Token;
 import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
 import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
 
@@ -9,26 +10,48 @@ import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
-public enum STAnnotation {
-  ABSTRACT, INTERFACE, STATIC;
+public class STAnnotation {
+  public static final Map<TokenType, STAnnotation.Type> ANNOTATION_TYPE_TOKEN_MAP = _createAnnotationTypeTokenMap();
 
-  public static final Map<TokenType, STAnnotation> ANNOTATION_TOKEN_MAP = _createAnnotationTokenMap();
+  private final Type type;
+  private final String value; // Can be null
 
-  private static Map<TokenType, STAnnotation> _createAnnotationTokenMap () {
-    Map<TokenType, STAnnotation> map = new HashMap<>();
+  private STAnnotation (Type type, String value) {
+    this.type = type;
+    this.value = value;
+  }
+
+  private static Map<TokenType, STAnnotation.Type> _createAnnotationTypeTokenMap () {
+    Map<TokenType, STAnnotation.Type> map = new HashMap<>();
 
-    map.put(TokenType.T_OOML_ANNOTATION_ABSTRACT, ABSTRACT);
-    map.put(TokenType.T_OOML_ANNOTATION_INTERFACE, INTERFACE);
-    map.put(TokenType.T_OOML_ANNOTATION_STATIC, STATIC);
+    map.put(TokenType.T_OOML_ANNOTATION_ABSTRACT, Type.ABSTRACT);
+    map.put(TokenType.T_OOML_ANNOTATION_INTERFACE, Type.INTERFACE);
+    map.put(TokenType.T_OOML_ANNOTATION_MAPTO, Type.MAPTO);
+    map.put(TokenType.T_OOML_ANNOTATION_STATIC, Type.STATIC);
 
     return map;
   }
 
   public static Collection<STAnnotation> acceptAnnotations (Tokens tokens) {
     List<STAnnotation> annotations = new ArrayList<>();
-    while (ANNOTATION_TOKEN_MAP.containsKey(tokens.peekType())) {
-      annotations.add(ANNOTATION_TOKEN_MAP.get(tokens.accept().getType()));
+    while (ANNOTATION_TYPE_TOKEN_MAP.containsKey(tokens.peekType())) {
+      Token t = tokens.accept();
+      annotations.add(new STAnnotation(
+        ANNOTATION_TYPE_TOKEN_MAP.get(t.getType()),
+        t.getValue()));
     }
     return annotations;
   }
+
+  public Type getType () {
+    return type;
+  }
+
+  public String getValue () {
+    return value;
+  }
+
+  public enum Type {
+    ABSTRACT, INTERFACE, MAPTO, STATIC
+  }
 }
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STSyntax.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STSyntax.java
index 5410634382..5aaaa76a89 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STSyntax.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STSyntax.java
@@ -3,29 +3,29 @@ package org.ooml.oomlc.core.env.gen.Syntax;
 import org.ooml.oomlc.core.env.gen.Serialising.JSONExc;
 import org.ooml.oomlc.core.env.gen.Utils.Position;
 
+import java.util.ArrayList;
 import java.util.Collection;
-import java.util.HashSet;
-import java.util.Set;
+import java.util.List;
 
 public abstract class STSyntax {
   @JSONExc
   private final Position position;
-  private final Set<STAnnotation> annotations = new HashSet<>(0);
+  private final List<STAnnotation> annotations = new ArrayList<>(0);
 
   public STSyntax (Position position) {
     this.position = position;
   }
 
-  public final Position getPosition () {
-    return position;
-  }
-
   protected static <K extends STSyntax> K addAllAnnotations (K syntax, Collection<STAnnotation> annotation) {
     ((STSyntax) syntax).annotations.addAll(annotation);
     return syntax;
   }
 
-  public final boolean hasAnnotation (STAnnotation annotation) {
-    return annotations.contains(annotation);
+  public final Position getPosition () {
+    return position;
+  }
+
+  public final boolean hasAnnotation (STAnnotation.Type annotationType) {
+    return annotations.stream().anyMatch(a -> a.getType() == annotationType);
   }
 }
diff --git a/notes/Compiling/EventTarget.md b/notes/Compiling/EventTarget.md
new file mode 100644
index 0000000000..e4977f8886
--- /dev/null
+++ b/notes/Compiling/EventTarget.md
@@ -0,0 +1,65 @@
+# EventTarget
+
+## Requirements
+
+- Must compile.
+- Must take into account type erasure.
+- Must only accept compatible event types for class (which includes all super types, and excludes all descendant types). For example, `HTMLElement` cannot take `canplay` but `HTMLMediaElement` can take `click`.
+
+## Ideas
+
+### Implement on every class with <Target, Type>
+
+- Won't work in Java if inheriting from a class implementing EventTarget to due type erasure.
+
+### Only implement on top-level classes
+
+- Won't work for lower-level classes (e.g. `HTMLElement`, `HTMLMediaElement`).
+
+### Only implement on lowest-level classes
+
+- Higher-level classes won't have methods, so a cast to a specific type is needed to use them (and the type needs to be known beforehand).
+- Won't accept ancestor event types (e.g. `HTMLMediaElement` can't take `HTMLElement` events).
+
+### Directly implement on classes
+
+- Won't work due to inheritance and type erasure combination.
+
+### Make methods generic (rather than class)
+
+- Won't ensure specific type is compatible with class.
+
+### Propagate generic parameters across all descendant classes
+
+```java
+class EventTarget<Target extends EventTarget<Target, Type>, Type extends EventType> {
+  <SpecificType extends Type> void addEventListener(Class<SpecificType> type, Listener<Target, SpecificType> listener) {}
+}
+class HTMLElement<Target extends HTMLElement<Target, Type>, Type extends HTMLElementEventType> extends EventTarget<Target, Type> {
+}
+class HTMLMediaElement<Target extends HTMLMediaElement<Target, Type>, Type extends HTMLMediaElementEventType> extends HTMLElement<Target, Type> {
+}
+class HTMLVideoElement extends HTMLMediaElement<HTMLVideoElement, HTMLVideoElementEventMap> {
+}
+```
+
+- Messy.
+- Need to provide generic arguments to non-lowest classes.
+  - Not sure how to, seems to infinitely recurse?
+- Event map interfaces need to subclass, so descendant event types are also accepted, which are unlikely to be valid.
+- Ancestor event types are not accepted.
+
+### Directly implement on classes with unique method names
+
+```java
+class HTMLElement {
+  <T extends HTMLElementEventType> void addHTMLElementEventListener(Class<T> type, Listener<Node, T> listener) {};
+}
+class HTMLMediaElement extends HTMLElement {
+  <T extends HTMLMediaElementEventType> void addHTMLMediaElementEventListener(Class<T> type, Listener<Node, T> listener) {};
+}
+```
+
+- Works, but verbose.
+- If event map interfaces don't subclass, each method only accepts own types.
+  - Ancestor event types are accepted, descendant ones are not. (Perfect.)
-- 
2.19.1


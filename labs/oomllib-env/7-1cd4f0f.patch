From 1cd4f0f9e487a62a02d3d67175e690529f79fdfc Mon Sep 17 00:00:00 2001
From: Wilson Lin <contact@wilsonl.in>
Date: Sat, 26 May 2018 20:51:16 +1200
Subject: [PATCH] Maintenance

---
 CONTRIBUTING.md                               | 26 +++++++++++++++++++
 dec/dom.generated.d.ts                        |  4 +--
 .../org/ooml/oomlc/core/env/gen/Main.java     |  2 +-
 ... here vs. in specific language compiler.md | 12 +++++++++
 4 files changed, 41 insertions(+), 3 deletions(-)
 create mode 100644 CONTRIBUTING.md
 create mode 100644 notes/Compiling/Versioning here vs. in specific language compiler.md

diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
new file mode 100644
index 0000000000..d2f7015c58
--- /dev/null
+++ b/CONTRIBUTING.md
@@ -0,0 +1,26 @@
+# Contributing
+
+## Where to help out
+
+Check out below for currently prioritised goals.
+
+### Compiled APIs
+
+#### All platforms
+
+- Ensuring APIs match closely with native JavaScript APIs.
+- Improving ease of use relative to native JavaScript APIs.
+
+#### Java
+
+NOTE: When referring to classes, this includes all types of classes (e.g. interfaces, enums, annotations).
+
+- Normalising and reducing the number of functional interfaces.
+- Removing unused classes.
+- Creating constructors for classes with no specific ones (such as option bags).
+- Improving coverage and accuracy of `@NotNull`/`@Nullable` annotations and `Optional` types.
+- Finding better ways to express union types.
+- Implementing or improving APIs that were cancelled or restricted due to difficulty.
+- Reduce the use of `Object`.
+- Making sure classes are not accidently instantiated or extended when appropriate by using `abstract`, `final`, and/or private constructors.
+  - This should apply to most classes.
diff --git a/dec/dom.generated.d.ts b/dec/dom.generated.d.ts
index a86903a2f4..be7003e043 100644
--- a/dec/dom.generated.d.ts
+++ b/dec/dom.generated.d.ts
@@ -13402,8 +13402,8 @@ declare function webkitConvertPointFromNodeToPage(node: Node, pt: WebKitPoint):
 declare function webkitConvertPointFromPageToNode(node: Node, pt: WebKitPoint): WebKitPoint;
 declare function webkitRequestAnimationFrame(callback: FrameRequestCallback): number;
 declare function dispatchEvent(evt: Event): boolean;
-declare function clearInterval(handle: number | null): void;
-declare function clearTimeout(handle: number | null): void;
+declare function clearInterval(handle: number): void;
+declare function clearTimeout(handle: number): void;
 declare function setInterval(handler: (...args: any[]) => void, timeout: number): number;
 declare function setTimeout(handler: (...args: any[]) => void, timeout: number): number;
 declare var sessionStorage: Storage;
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java
index 94fe724544..ed796fbdca 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java
@@ -53,7 +53,7 @@ public class Main {
     Path outputPath = Paths.get(args[args.length - 1]);
     File output = outputPath.toFile();
 
-    File javaOutputDir = new File(output, "java/org/ooml/oomlc/env");
+    File javaOutputDir = new File(output, "java/org/ooml/oomllib/java/env");
     javaOutputDir.mkdirs();
 
     JavaPackage javaPackage = JavaCompiler.compileAll(stNamespaces);
diff --git a/notes/Compiling/Versioning here vs. in specific language compiler.md b/notes/Compiling/Versioning here vs. in specific language compiler.md
new file mode 100644
index 0000000000..8bd40065fb
--- /dev/null
+++ b/notes/Compiling/Versioning here vs. in specific language compiler.md	
@@ -0,0 +1,12 @@
+# Versioning here vs. in specific language compiler
+
+## Pros
+
+- Take advantage of full language features per language.
+  - If per language, then this would have to generate the safest format for all languages.
+- Ensure API is synchronised across all platforms.
+  - Important for sharing modules with different source languages.
+  
+## Cons
+
+- Changes in specific language(s) creates entire new version.
-- 
2.19.1


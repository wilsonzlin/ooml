From 602fc788cf222b868e45037c41fee7102d712fa2 Mon Sep 17 00:00:00 2001
From: Wilson Lin <contact@wilsonl.in>
Date: Mon, 30 Apr 2018 11:22:44 +1200
Subject: [PATCH] Significant deviations to dec for optimal cross-language
 usage; update parser to handle most syntax; create to-Java compiler that
 handles most syntax

---
 Deviations.md                                 |    9 +
 archive/Python/PythonClass.java               |   91 +
 archive/Python/PythonClassConstructor.java    |   38 +
 archive/Python/PythonClassMethod.java         |   45 +
 archive/Python/PythonClassVariable.java       |   24 +
 archive/Python/PythonCompiler.java            |   75 +
 archive/Python/PythonFunction.java            |   25 +
 archive/Python/PythonFunctionParameter.java   |   29 +
 archive/Python/PythonLiteral.java             |    7 +
 archive/Python/PythonModule.java              |   26 +
 archive/Python/PythonVariable.java            |   16 +
 dec/dom.generated.d.ts                        | 3481 ++-----------
 dec/es2015.collection.d.ts                    |   46 -
 dec/es2015.core.d.ts                          |  467 --
 dec/es2015.generator.d.ts                     |   51 -
 dec/es2015.iterable.d.ts                      |  472 +-
 dec/es2015.promise.d.ts                       |  154 +-
 dec/es2015.proxy.d.ts                         |   22 -
 dec/es2015.reflect.d.ts                       |   15 -
 dec/es2015.symbol.d.ts                        |   36 -
 dec/es2015.symbol.wellknown.d.ts              |  298 --
 dec/es2016.array.include.d.ts                 |   92 +-
 dec/es2017.intl.d.ts                          |   10 -
 dec/es2017.object.d.ts                        |   31 -
 dec/es2017.sharedmemory.d.ts                  |  118 -
 dec/es2017.string.d.ts                        |   27 -
 dec/es2017.typedarrays.d.ts                   |   36 +-
 dec/es5.d.ts                                  | 4430 +++--------------
 dec/esnext.array.d.ts                         |  203 -
 dec/esnext.asynciterable.d.ts                 |   24 -
 .../env/gen/Compiling/JSON/JSONCompiler.java  |   10 +
 .../env/gen/Compiling/Java/JavaBuiltin.java   |   31 +
 .../env/gen/Compiling/Java/JavaClass.java     |  167 +
 .../Compiling/Java/JavaClassConstructor.java  |   31 +
 .../gen/Compiling/Java/JavaClassMethod.java   |   91 +
 .../Java/JavaClassMethodParameter.java        |   33 +
 .../gen/Compiling/Java/JavaClassVariable.java |   49 +
 .../env/gen/Compiling/Java/JavaCompiler.java  |  749 +++
 .../Java/JavaFunctionalInterface.java         |   48 +
 .../Compiling/Java/JavaGenericParameter.java  |   45 +
 .../core/env/gen/Compiling/Java/JavaType.java |   42 +
 .../Compiling/Java/STNormalisedUnionType.java |   64 +
 .../core/env/gen/Compiling/Java/UtilJava.java |   78 +
 .../ooml/oomlc/core/env/gen/Lexing/Lexer.java |   49 +-
 .../org/ooml/oomlc/core/env/gen/Main.java     |   27 +-
 .../oomlc/core/env/gen/Parsing/Parser.java    |    9 +
 .../oomlc/core/env/gen/Parsing/TokenType.java |    9 +-
 .../gen/Serialising/IdentifierSerialiser.java |   16 -
 .../env/gen/Serialising/JSONSerialiser.java   |    2 -
 .../oomlc/core/env/gen/Syntax/Callable.java   |   44 -
 .../core/env/gen/Syntax/GenericParameter.java |   53 -
 .../oomlc/core/env/gen/Syntax/Identifier.java |   53 -
 .../BodyUnit/STInterfaceBodyUnit.java         |   10 +
 .../BodyUnit/STInterfaceCallSignature.java    |   25 +
 .../BodyUnit/STInterfaceConstructor.java      |   29 +
 .../BodyUnit/STInterfaceIndexSignature.java   |   60 +
 .../Interface/BodyUnit/STInterfaceMethod.java |   37 +
 .../BodyUnit/STInterfaceProperty.java         |   55 +
 .../env/gen/Syntax/Interface/Interface.java   |   92 -
 .../Interface/InterfaceCallSignature.java     |   19 -
 .../Interface/InterfaceConstructor.java       |   23 -
 .../Interface/InterfaceIndexSignature.java    |   40 -
 .../gen/Syntax/Interface/InterfaceMethod.java |   25 -
 .../Syntax/Interface/InterfaceProperty.java   |   50 -
 .../gen/Syntax/Interface/STInterfaceBody.java |  139 +
 .../env/gen/Syntax/Namespace/STNamespace.java |  122 +
 .../oomlc/core/env/gen/Syntax/Parameter.java  |   62 -
 .../core/env/gen/Syntax/STAnnotation.java     |   34 +
 .../oomlc/core/env/gen/Syntax/STCallable.java |   51 +
 .../env/gen/Syntax/STCallableOverloads.java   |   16 +
 .../env/gen/Syntax/STCallableParameter.java   |   77 +
 .../env/gen/Syntax/STGenericParameter.java    |   67 +
 .../core/env/gen/Syntax/STIdentifier.java     |   67 +
 .../oomlc/core/env/gen/Syntax/STSyntax.java   |   31 +
 .../Syntax/Statement/DeclarableStatement.java |   15 -
 .../Statement/DeclarationStatement.java       |   21 -
 .../Syntax/Statement/FunctionStatement.java   |   28 -
 .../Syntax/Statement/InterfaceStatement.java  |   54 -
 .../Syntax/Statement/NamespaceStatement.java  |   35 -
 .../gen/Syntax/Statement/STDataStatement.java |    9 +
 .../Syntax/Statement/STFunctionStatement.java |   37 +
 .../Statement/STInterfaceStatement.java       |   74 +
 .../Statement/STNamespaceStatement.java       |   43 +
 .../env/gen/Syntax/Statement/STStatement.java |   58 +
 .../Statement/STTypeAliasStatement.java       |   39 +
 .../Syntax/Statement/STTypingStatement.java   |    9 +
 ...tatement.java => STVariableStatement.java} |   35 +-
 .../env/gen/Syntax/Statement/Statement.java   |   76 -
 .../Syntax/Statement/TypeAliasStatement.java  |   30 -
 .../core/env/gen/Syntax/Type/ArrayType.java   |   12 -
 .../env/gen/Syntax/Type/CallableType.java     |   22 -
 .../env/gen/Syntax/Type/IndexQueryType.java   |   12 -
 .../gen/Syntax/Type/InlineInterfaceType.java  |   17 -
 .../core/env/gen/Syntax/Type/KeyofType.java   |   20 -
 .../env/gen/Syntax/Type/PredicateType.java    |   28 -
 .../env/gen/Syntax/Type/ReferenceType.java    |   46 -
 .../core/env/gen/Syntax/Type/STAnyType.java   |   17 +
 .../core/env/gen/Syntax/Type/STArrayType.java |   16 +
 .../env/gen/Syntax/Type/STCallableType.java   |   26 +
 .../env/gen/Syntax/Type/STGenericType.java    |   24 +
 .../env/gen/Syntax/Type/STIndexedType.java    |   22 +
 .../Syntax/Type/STInlineInterfaceType.java    |   21 +
 .../core/env/gen/Syntax/Type/STKeyofType.java |   24 +
 .../core/env/gen/Syntax/Type/STNeverType.java |   17 +
 .../env/gen/Syntax/Type/STPredicateType.java  |   37 +
 ...rimitiveType.java => STPrimitiveType.java} |   30 +-
 .../env/gen/Syntax/Type/STReferenceType.java  |   26 +
 ...eralType.java => STStringLiteralType.java} |   14 +-
 .../core/env/gen/Syntax/Type/STType.java      |  180 +
 .../env/gen/Syntax/Type/STTypeofType.java     |   24 +
 .../core/env/gen/Syntax/Type/STUnionType.java |   18 +
 .../core/env/gen/Syntax/Type/STVoidType.java  |   17 +
 .../oomlc/core/env/gen/Syntax/Type/Type.java  |  104 -
 .../core/env/gen/Syntax/Type/UnionType.java   |   14 -
 .../ooml/oomlc/core/env/gen/Utils/Util.java   |   20 +
 notes/Compiling/Modules vs. inner classes.md  |    5 +
 notes/Compiling/Normalising types.md          |   69 +
 ... for optional and union-type parameters.md |   25 +
 notes/Compiling/Reference assumptions.md      |    5 +
 notes/Compiling/Union types.md                |    6 +
 notes/TypeScript spec/Events.md               |   27 +
 notes/TypeScript spec/Exporting interfaces.md |   46 +
 notes/TypeScript spec/Index properties.md     |    5 +
 .../References and statements.md              |   14 +
 notes/TypeScript spec/Types.md                |    3 +
 pom.xml                                       |    8 +-
 tsconfig.json                                 |    5 +
 127 files changed, 4911 insertions(+), 9907 deletions(-)
 create mode 100644 Deviations.md
 create mode 100644 archive/Python/PythonClass.java
 create mode 100644 archive/Python/PythonClassConstructor.java
 create mode 100644 archive/Python/PythonClassMethod.java
 create mode 100644 archive/Python/PythonClassVariable.java
 create mode 100644 archive/Python/PythonCompiler.java
 create mode 100644 archive/Python/PythonFunction.java
 create mode 100644 archive/Python/PythonFunctionParameter.java
 create mode 100644 archive/Python/PythonLiteral.java
 create mode 100644 archive/Python/PythonModule.java
 create mode 100644 archive/Python/PythonVariable.java
 delete mode 100644 dec/es2015.generator.d.ts
 delete mode 100644 dec/es2015.proxy.d.ts
 delete mode 100644 dec/es2015.reflect.d.ts
 delete mode 100644 dec/es2015.symbol.d.ts
 delete mode 100644 dec/es2015.symbol.wellknown.d.ts
 delete mode 100644 dec/es2017.intl.d.ts
 delete mode 100644 dec/es2017.object.d.ts
 delete mode 100644 dec/es2017.sharedmemory.d.ts
 delete mode 100644 dec/es2017.string.d.ts
 delete mode 100644 dec/esnext.array.d.ts
 delete mode 100644 dec/esnext.asynciterable.d.ts
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/JSON/JSONCompiler.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaBuiltin.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClass.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassConstructor.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethod.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethodParameter.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassVariable.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaCompiler.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaFunctionalInterface.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaGenericParameter.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/STNormalisedUnionType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/UtilJava.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/Parser.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Serialising/IdentifierSerialiser.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Callable.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/GenericParameter.java
 delete mode 100755 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Identifier.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceBodyUnit.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceCallSignature.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceConstructor.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceIndexSignature.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceMethod.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceProperty.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/Interface.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceCallSignature.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceConstructor.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceIndexSignature.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceMethod.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceProperty.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/STInterfaceBody.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Namespace/STNamespace.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Parameter.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STAnnotation.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallable.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallableOverloads.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallableParameter.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STGenericParameter.java
 create mode 100755 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STIdentifier.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STSyntax.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/DeclarableStatement.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/DeclarationStatement.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/FunctionStatement.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/InterfaceStatement.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/NamespaceStatement.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STDataStatement.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STFunctionStatement.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STInterfaceStatement.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STNamespaceStatement.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STStatement.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STTypeAliasStatement.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STTypingStatement.java
 rename gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/{VariableStatement.java => STVariableStatement.java} (50%)
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/Statement.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/TypeAliasStatement.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/ArrayType.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/CallableType.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/IndexQueryType.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/InlineInterfaceType.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/KeyofType.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/PredicateType.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/ReferenceType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STAnyType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STArrayType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STCallableType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STGenericType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STIndexedType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STInlineInterfaceType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STKeyofType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STNeverType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STPredicateType.java
 rename gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/{PrimitiveType.java => STPrimitiveType.java} (54%)
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STReferenceType.java
 rename gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/{StringLiteralType.java => STStringLiteralType.java} (51%)
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STTypeofType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STUnionType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STVoidType.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/Type.java
 delete mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/UnionType.java
 create mode 100644 gen/main/java/org/ooml/oomlc/core/env/gen/Utils/Util.java
 create mode 100644 notes/Compiling/Modules vs. inner classes.md
 create mode 100644 notes/Compiling/Normalising types.md
 create mode 100644 notes/Compiling/Overloading for optional and union-type parameters.md
 create mode 100644 notes/Compiling/Reference assumptions.md
 create mode 100644 notes/Compiling/Union types.md
 create mode 100644 notes/TypeScript spec/Events.md
 create mode 100644 notes/TypeScript spec/Exporting interfaces.md
 create mode 100644 notes/TypeScript spec/Index properties.md
 create mode 100644 notes/TypeScript spec/References and statements.md
 create mode 100644 notes/TypeScript spec/Types.md
 create mode 100644 tsconfig.json

diff --git a/Deviations.md b/Deviations.md
new file mode 100644
index 0000000000..1bd139920d
--- /dev/null
+++ b/Deviations.md
@@ -0,0 +1,9 @@
+# Deviations
+
+This document lists the modifications to the previous version's TypeScript environment declarations. For the very first version, the modifications are to the original initial TypeScript declarations.
+
+Changes to the upstream official TypeScript declarations are also reflected here when merged.
+
+If a version is not listed, it means that it did not make any modifications.
+
+## 20180431.0
diff --git a/archive/Python/PythonClass.java b/archive/Python/PythonClass.java
new file mode 100644
index 0000000000..8e7d4847f9
--- /dev/null
+++ b/archive/Python/PythonClass.java
@@ -0,0 +1,91 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Python;
+
+import org.ooml.oomlc.core.env.gen.Exception.MalformedSyntaxException;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterface;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterfaceProperty;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STInterfaceStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STReferenceType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
+
+class PythonClass {
+  String name;
+  List<PythonClassVariable> variables;
+  List<PythonClassConstructor> constructors;
+  List<PythonClassMethod> methods;
+  List<PythonClass> nestedClasses;
+
+  static PythonClass from (STInterface st_intf) {
+    STInterfaceProperty prototypeProp = st_intf.getProperties().get("prototype");
+    STType prototypePropType = prototypeProp != null ?
+      prototypeProp.getType() :
+      null;
+    String prototypeReference = null;
+
+    if (prototypePropType != null) {
+      if (!(prototypePropType instanceof STReferenceType) ||
+          !((STReferenceType) prototypePropType).getGenericArguments().isEmpty() ||
+          !((STReferenceType) prototypePropType).getIndexQueries().isEmpty() ||
+          ((STReferenceType) prototypePropType).getReference().size() != 1) {
+        throw new MalformedSyntaxException("\"prototype\" property has invalid type", prototypePropType.getPosition());
+      }
+      prototypeReference = ((STReferenceType) prototypePropType).getReference().get(0).getName();
+    }
+
+    STInterfaceStatement st_proto_intfstmt = prototypeProp != null ?
+      PythonCompiler.declarations.getInterface(prototypeReference) :
+      null;
+    if (prototypeReference != null && st_proto_intfstmt == null) {
+      throw new MalformedSyntaxException("\"prototype\" property references non-existent interface", prototypePropType.getPosition());
+    }
+    STInterface st_proto_intf = prototypeProp != null ?
+      st_proto_intfstmt.getInterface() :
+      null;
+
+    PythonClass c = new PythonClass();
+    c.variables = Util.map(st_intf.getProperties().values(), PythonClassVariable::from);
+    c.constructors = Util.map(st_intf.getConstructors(), PythonClassConstructor::from);
+    c.methods = Util.map(st_intf.getMethods(), PythonClassMethod::fromStatic);
+    c.nestedClasses = new ArrayList<>();
+
+    if (st_proto_intfstmt != null) {
+      c.variables.removeIf(pythonClassVariable -> pythonClassVariable.name.equals("prototype"));
+
+      if (!st_proto_intf.getConstructors().isEmpty()) {
+        throw new MalformedSyntaxException("Prototype interface has constructors", st_proto_intf.getPosition());
+      }
+
+      c.name = st_proto_intfstmt.getName().getName();
+      c.methods.addAll(Util.map(st_proto_intf.getMethods(), PythonClassMethod::from));
+      List<PythonClassVariable> instanceVariables = Util.map(st_proto_intf.getProperties().values(), PythonClassVariable::from);
+      for (PythonClassConstructor constructor : c.constructors) {
+        constructor.instanceVariables.addAll(instanceVariables);
+      }
+    }
+
+    return c;
+  }
+
+  @Override
+  public String toString () {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append("class ")
+      .append(name)
+      .append(":\n")
+      .append(Util.indent(Util.join("\n", variables)))
+      .append("\n\n")
+      .append(Util.indent(Util.join("\n\n", constructors)))
+      .append("\n\n")
+      .append(Util.indent(Util.join("\n\n", methods)))
+      .append("\n\n")
+      .append(Util.indent(Util.join("\n\n", nestedClasses)));
+
+    return syntax.toString();
+  }
+}
diff --git a/archive/Python/PythonClassConstructor.java b/archive/Python/PythonClassConstructor.java
new file mode 100644
index 0000000000..9e8c2a99c6
--- /dev/null
+++ b/archive/Python/PythonClassConstructor.java
@@ -0,0 +1,38 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Python;
+
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterfaceConstructor;
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+import java.util.ArrayList;
+import java.util.List;
+
+class PythonClassConstructor {
+  List<PythonFunctionParameter> parameters;
+  List<PythonClassVariable> instanceVariables;
+
+  static PythonClassConstructor from (STInterfaceConstructor st_constructor) {
+    PythonClassConstructor classConstructor = new PythonClassConstructor();
+    classConstructor.parameters = Util.map(st_constructor.getCallable().getParameters(), PythonFunctionParameter::from);
+    classConstructor.instanceVariables = new ArrayList<>();
+    return classConstructor;
+  }
+
+  @Override
+  public String toString () {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append("def __init__(self")
+      .append(!parameters.isEmpty() ? ", " + Util.join(", ", parameters) : "")
+      .append("):\n");
+    if (instanceVariables.isEmpty()) {
+      syntax.append("\tpass");
+    } else {
+      syntax
+        .append("\tself.")
+        .append(Util.indent(Util.join("\nself.", instanceVariables)).trim());
+    }
+
+    return syntax.toString();
+  }
+}
diff --git a/archive/Python/PythonClassMethod.java b/archive/Python/PythonClassMethod.java
new file mode 100644
index 0000000000..bfee9a36e0
--- /dev/null
+++ b/archive/Python/PythonClassMethod.java
@@ -0,0 +1,45 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Python;
+
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterfaceMethod;
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+import java.util.List;
+
+class PythonClassMethod {
+  String name;
+  boolean isStatic;
+  List<PythonFunctionParameter> parameters;
+
+  private static PythonClassMethod _from (STInterfaceMethod st_method, boolean isStatic) {
+    PythonClassMethod classMethod = new PythonClassMethod();
+    classMethod.name = st_method.getName().getName();
+    classMethod.isStatic = isStatic;
+    classMethod.parameters = Util.map(st_method.getCallable().getParameters(), PythonFunctionParameter::from);
+    return classMethod;
+  }
+
+  static PythonClassMethod from (STInterfaceMethod st_method) {
+    return _from(st_method, false);
+  }
+
+  static PythonClassMethod fromStatic (STInterfaceMethod st_method) {
+    return _from(st_method, true);
+  }
+
+  @Override
+  public String toString () {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append(isStatic ? "@staticmethod\n" : "")
+      .append("def ")
+      .append(name)
+      .append("(")
+      .append(!isStatic ? "self" + (!parameters.isEmpty() ? ", " : "") : "")
+      .append(Util.join(", ", parameters))
+      .append("):\n")
+      .append("\tpass");
+
+    return syntax.toString();
+  }
+}
diff --git a/archive/Python/PythonClassVariable.java b/archive/Python/PythonClassVariable.java
new file mode 100644
index 0000000000..e5f70efec1
--- /dev/null
+++ b/archive/Python/PythonClassVariable.java
@@ -0,0 +1,24 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Python;
+
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterfaceProperty;
+
+class PythonClassVariable {
+  String name;
+
+  static PythonClassVariable from(STInterfaceProperty st_prop) {
+    PythonClassVariable classVariable = new PythonClassVariable();
+    classVariable.name = st_prop.getName().getName();
+    return classVariable;
+  }
+
+  @Override
+  public String toString () {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append(name)
+      .append(" = None");
+
+    return syntax.toString();
+  }
+}
diff --git a/archive/Python/PythonCompiler.java b/archive/Python/PythonCompiler.java
new file mode 100644
index 0000000000..c489541034
--- /dev/null
+++ b/archive/Python/PythonCompiler.java
@@ -0,0 +1,75 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Python;
+
+import org.ooml.oomlc.core.env.gen.Declaration.Declarations;
+import org.ooml.oomlc.core.env.gen.Exception.MalformedSyntaxException;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STDataUnitStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STDeclarationStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STFunctionStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STInterfaceStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STVariableStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STInlineInterfaceType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STPrimitiveType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STReferenceType;
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+public class PythonCompiler {
+  private static final PythonModule window = new PythonModule();
+  public static Declarations declarations;
+
+  public static String compile () {
+    for (STDeclarationStatement st_stmt : declarations.getDeclarations()) {
+      STDataUnitStatement st_dec = st_stmt.getDeclarable();
+      switch (st_dec.getStatementType()) {
+      case FUNCTION:
+        PythonFunction function = new PythonFunction();
+        function.name = st_dec.getName().getName();
+        function.parameters = Util.map(((STFunctionStatement) st_dec)
+          .getCallable()
+          .getParameters(), PythonFunctionParameter::from);
+        window.functions.add(function);
+        break;
+
+      case VARIABLE:
+        // Always assume readonly, even if not
+
+        if (((STVariableStatement) st_dec).getType() instanceof STPrimitiveType) {
+          // Constant global value
+          PythonVariable variable = new PythonVariable();
+          variable.name = st_dec.getName().getName();
+          window.variables.add(variable);
+
+        } else if (((STVariableStatement) st_dec).getType() instanceof STReferenceType &&
+                   ((STReferenceType) ((STVariableStatement) st_dec).getType()).getReference().size() == 1 &&
+                   ((STReferenceType) ((STVariableStatement) st_dec).getType()).getGenericArguments().isEmpty() &&
+                   ((STReferenceType) ((STVariableStatement) st_dec).getType()).getIndexQueries().isEmpty()) {
+          // Export of interface
+          String reference = ((STReferenceType) ((STVariableStatement) st_dec).getType())
+            .getReference()
+            .get(0)
+            .getName();
+          STInterfaceStatement st_intfstmt = declarations.getInterface(reference);
+          PythonClass c = PythonClass.from(st_intfstmt.getInterface());
+          c.name = st_intfstmt.getName().getName();
+          window.classes.add(c);
+
+        } else if (((STVariableStatement) st_dec).getType() instanceof STInlineInterfaceType) {
+          // Export of interface
+          PythonClass c = PythonClass.from(((STInlineInterfaceType) ((STVariableStatement) st_dec).getType()).getInterface());
+          c.name = st_dec.getName().getName();
+          window.classes.add(c);
+
+        } else {
+          // TODO throw new MalformedSyntaxException("Unknown variable declaration type", st_dec.getPosition());
+        }
+        break;
+
+      default:
+        throw new MalformedSyntaxException("Unknown declaration type", st_dec.getPosition());
+      }
+    }
+
+    // TODO
+
+    return window.toString().replaceAll("\\n\\n+", "\n\n");
+  }
+}
diff --git a/archive/Python/PythonFunction.java b/archive/Python/PythonFunction.java
new file mode 100644
index 0000000000..16a3860815
--- /dev/null
+++ b/archive/Python/PythonFunction.java
@@ -0,0 +1,25 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Python;
+
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+import java.util.List;
+
+class PythonFunction {
+  String name;
+  List<PythonFunctionParameter> parameters;
+
+  @Override
+  public String toString () {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append("def ")
+      .append(name)
+      .append("(")
+      .append(Util.join(", ", parameters))
+      .append("):\n")
+      .append("\tpass");
+
+    return syntax.toString();
+  }
+}
diff --git a/archive/Python/PythonFunctionParameter.java b/archive/Python/PythonFunctionParameter.java
new file mode 100644
index 0000000000..c68d149f19
--- /dev/null
+++ b/archive/Python/PythonFunctionParameter.java
@@ -0,0 +1,29 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Python;
+
+import org.ooml.oomlc.core.env.gen.Syntax.STCallableParameter;
+
+class PythonFunctionParameter {
+  boolean isVariableLength;
+  String name;
+  String defaultValue; // Can be null
+
+  static PythonFunctionParameter from (STCallableParameter st_p) {
+    PythonFunctionParameter genericParameter = new PythonFunctionParameter();
+    genericParameter.isVariableLength = st_p.isVariableLength();
+    genericParameter.name = st_p.getName().getName();
+    genericParameter.defaultValue = st_p.getDefaultValue();
+    return genericParameter;
+  }
+
+  @Override
+  public String toString () {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append(isVariableLength ? "..." : "")
+      .append(name)
+      .append(defaultValue != null ? "=" + PythonLiteral.stringFrom(defaultValue) : "");
+
+    return syntax.toString();
+  }
+}
diff --git a/archive/Python/PythonLiteral.java b/archive/Python/PythonLiteral.java
new file mode 100644
index 0000000000..4946f4a2f1
--- /dev/null
+++ b/archive/Python/PythonLiteral.java
@@ -0,0 +1,7 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Python;
+
+class PythonLiteral {
+  static String stringFrom (String value) {
+    return '"' + value.replaceAll("\\\\", "\\\\").replaceAll("\"", "\\\"") + '"';
+  }
+}
diff --git a/archive/Python/PythonModule.java b/archive/Python/PythonModule.java
new file mode 100644
index 0000000000..dfdaa3388e
--- /dev/null
+++ b/archive/Python/PythonModule.java
@@ -0,0 +1,26 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Python;
+
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+import java.util.ArrayList;
+import java.util.List;
+
+class PythonModule {
+  List<PythonVariable> variables = new ArrayList<>();
+  List<PythonFunction> functions = new ArrayList<>();
+  List<PythonClass> classes = new ArrayList<>();
+
+  @Override
+  public String toString () {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append(Util.join("\n", variables))
+      .append("\n\n")
+      .append(Util.join("\n\n", functions))
+      .append("\n\n")
+      .append(Util.join("\n\n", classes));
+
+    return syntax.toString();
+  }
+}
diff --git a/archive/Python/PythonVariable.java b/archive/Python/PythonVariable.java
new file mode 100644
index 0000000000..1ce31facc5
--- /dev/null
+++ b/archive/Python/PythonVariable.java
@@ -0,0 +1,16 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Python;
+
+class PythonVariable {
+  String name;
+
+  @Override
+  public String toString () {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append(name)
+      .append(" = None");
+
+    return syntax.toString();
+  }
+}
diff --git a/dec/dom.generated.d.ts b/dec/dom.generated.d.ts
index ea0a2a3509..83da7c3adc 100644
--- a/dec/dom.generated.d.ts
+++ b/dec/dom.generated.d.ts
@@ -16,11 +16,11 @@ interface AddEventListenerOptions extends EventListenerOptions {
 }
 
 interface AesCbcParams extends Algorithm {
-    iv: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;
+    iv: BufferSource | null;
 }
 
 interface AesCtrParams extends Algorithm {
-    counter: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;
+    counter: BufferSource | null;
     length: number;
 }
 
@@ -29,8 +29,8 @@ interface AesDerivedKeyParams extends Algorithm {
 }
 
 interface AesGcmParams extends Algorithm {
-    additionalData?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;
-    iv: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;
+    additionalData?: BufferSource | null;
+    iv: BufferSource | null;
     tagLength?: number;
 }
 
@@ -144,7 +144,7 @@ interface ChannelSplitterOptions extends AudioNodeOptions {
 interface ClientData {
     challenge: string;
     extensions?: WebAuthnExtensions;
-    hashAlg: string | Algorithm;
+    hashAlg: AlgorithmIdentifier;
     origin: string;
     rpId: string;
     tokenBinding?: string;
@@ -280,7 +280,7 @@ interface EcdhKeyDeriveParams extends Algorithm {
 }
 
 interface EcdsaParams extends Algorithm {
-    hash: string | Algorithm;
+    hash: AlgorithmIdentifier;
 }
 
 interface ErrorEventInit extends EventInit {
@@ -378,13 +378,13 @@ interface HashChangeEventInit extends EventInit {
 }
 
 interface HkdfParams extends Algorithm {
-    hash: string | Algorithm;
-    info: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;
-    salt: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;
+    hash: AlgorithmIdentifier;
+    info: BufferSource | null;
+    salt: BufferSource | null;
 }
 
 interface HmacImportParams extends Algorithm {
-    hash: string | Algorithm;
+    hash: AlgorithmIdentifier;
     length?: number;
 }
 
@@ -394,7 +394,7 @@ interface HmacKeyAlgorithm extends KeyAlgorithm {
 }
 
 interface HmacKeyGenParams extends Algorithm {
-    hash: string | Algorithm;
+    hash: AlgorithmIdentifier;
     length?: number;
 }
 
@@ -581,7 +581,7 @@ interface MSDescription extends RTCStats {
 }
 
 interface MSFIDOCredentialParameters extends MSCredentialParameters {
-    algorithm?: string | Algorithm;
+    algorithm?: AlgorithmIdentifier;
     authenticators?: string[];
 }
 
@@ -826,21 +826,21 @@ interface MediaTrackCapabilities {
 }
 
 interface MediaTrackConstraintSet {
-    aspectRatio?: number | ConstrainDoubleRange;
-    channelCount?: number | ConstrainLongRange;
-    deviceId?: string | string[] | ConstrainDOMStringParameters;
-    displaySurface?: string | string[] | ConstrainDOMStringParameters;
-    echoCancellation?: boolean | ConstrainBooleanParameters;
-    facingMode?: string | string[] | ConstrainDOMStringParameters;
-    frameRate?: number | ConstrainDoubleRange;
-    groupId?: string | string[] | ConstrainDOMStringParameters;
-    height?: number | ConstrainLongRange;
-    latency?: number | ConstrainDoubleRange;
-    logicalSurface?: boolean | ConstrainBooleanParameters;
-    sampleRate?: number | ConstrainLongRange;
-    sampleSize?: number | ConstrainLongRange;
-    volume?: number | ConstrainDoubleRange;
-    width?: number | ConstrainLongRange;
+    aspectRatio?: ConstrainDouble;
+    channelCount?: ConstrainLong;
+    deviceId?: ConstrainDOMString;
+    displaySurface?: ConstrainDOMString;
+    echoCancellation?: ConstrainBoolean;
+    facingMode?: ConstrainDOMString;
+    frameRate?: ConstrainDouble;
+    groupId?: ConstrainDOMString;
+    height?: ConstrainLong;
+    latency?: ConstrainDouble;
+    logicalSurface?: ConstrainBoolean;
+    sampleRate?: ConstrainLong;
+    sampleSize?: ConstrainLong;
+    volume?: ConstrainDouble;
+    width?: ConstrainLong;
 }
 
 interface MediaTrackConstraints extends MediaTrackConstraintSet {
@@ -1018,9 +1018,9 @@ interface PaymentShippingOption {
 }
 
 interface Pbkdf2Params extends Algorithm {
-    hash: string | Algorithm;
+    hash: AlgorithmIdentifier;
     iterations: number;
-    salt: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;
+    salt: BufferSource | null;
 }
 
 interface PeriodicWaveConstraints {
@@ -1060,7 +1060,7 @@ interface ProgressEventInit extends EventInit {
 }
 
 interface PushEventInit extends ExtendableEventInit {
-    data?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | string | null;
+    data?: BufferSource | string | null;
 }
 
 interface PushSubscriptionChangeInit extends ExtendableEventInit {
@@ -1069,7 +1069,7 @@ interface PushSubscriptionChangeInit extends ExtendableEventInit {
 }
 
 interface PushSubscriptionOptionsInit {
-    applicationServerKey?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | string | null;
+    applicationServerKey?: BufferSource | string | null;
     userVisibleOnly?: boolean;
 }
 
@@ -1381,7 +1381,7 @@ interface RegistrationOptions {
 }
 
 interface RequestInit {
-    body?: Blob | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | FormData | string | null;
+    body?: Blob | BufferSource | FormData | string | null;
     cache?: RequestCache;
     credentials?: RequestCredentials;
     headers?: HeadersInit;
@@ -1403,7 +1403,7 @@ interface ResponseInit {
 }
 
 interface RsaHashedImportParams extends Algorithm {
-    hash: string | Algorithm;
+    hash: AlgorithmIdentifier;
 }
 
 interface RsaHashedKeyAlgorithm extends RsaKeyAlgorithm {
@@ -1411,7 +1411,7 @@ interface RsaHashedKeyAlgorithm extends RsaKeyAlgorithm {
 }
 
 interface RsaHashedKeyGenParams extends RsaKeyGenParams {
-    hash: string | Algorithm;
+    hash: AlgorithmIdentifier;
 }
 
 interface RsaKeyAlgorithm extends KeyAlgorithm {
@@ -1425,7 +1425,7 @@ interface RsaKeyGenParams extends Algorithm {
 }
 
 interface RsaOaepParams extends Algorithm {
-    label?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;
+    label?: BufferSource | null;
 }
 
 interface RsaOtherPrimesInfo {
@@ -1439,7 +1439,7 @@ interface RsaPssParams extends Algorithm {
 }
 
 interface ScopedCredentialDescriptor {
-    id: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;
+    id: BufferSource | null;
     transports?: Transport[];
     type: ScopedCredentialType;
 }
@@ -1452,7 +1452,7 @@ interface ScopedCredentialOptions {
 }
 
 interface ScopedCredentialParameters {
-    algorithm: string | Algorithm;
+    algorithm: AlgorithmIdentifier;
     type: ScopedCredentialType;
 }
 
@@ -1580,21 +1580,16 @@ interface WheelEventInit extends MouseEventInit {
     deltaZ?: number;
 }
 
-interface EventListener {
-    (evt: Event): void;
-}
-
-type WebKitEntriesCallback = ((entries: WebKitEntry[]) => void) | { handleEvent(entries: WebKitEntry[]): void; };
+type WebKitEntriesCallback = (entries: WebKitEntry[]) => void;
 
-type WebKitErrorCallback = ((err: DOMError) => void) | { handleEvent(err: DOMError): void; };
+type WebKitErrorCallback = (err: DOMError) => void;
 
-type WebKitFileCallback = ((file: File) => void) | { handleEvent(file: File): void; };
+type WebKitFileCallback = (file: File) => void;
 
 interface ANGLE_instanced_arrays {
     drawArraysInstancedANGLE(mode: number, first: number, count: number, primcount: number): void;
     drawElementsInstancedANGLE(mode: number, count: number, type: number, offset: number, primcount: number): void;
     vertexAttribDivisorANGLE(index: number, divisor: number): void;
-    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: number;
 }
 
 declare var ANGLE_instanced_arrays: {
@@ -1617,13 +1612,9 @@ interface AbortSignalEventMap {
     "abort": ProgressEvent;
 }
 
-interface AbortSignal extends EventTarget {
+interface AbortSignal extends EventTarget<AbortSignal, AbortSignalEventType> {
     readonly aborted: boolean;
-    onabort: ((this: AbortSignal, ev: ProgressEvent) => any) | null;
-    addEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var AbortSignal: {
@@ -1635,16 +1626,12 @@ interface AbstractWorkerEventMap {
     "error": ErrorEvent;
 }
 
-interface AbstractWorker {
-    onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;
-    addEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface AbstractWorker extends EventTarget<AbstractWorker, AbstractWorkerEventType> {
+
 }
 
 interface AesCfbParams extends Algorithm {
-    iv: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer;
+    iv: BufferSource;
 }
 
 interface AesCmacParams extends Algorithm {
@@ -1709,9 +1696,9 @@ declare var AnimationEvent: {
 };
 
 interface AnimationKeyFrame {
-    easing?: string | string[];
-    offset?: number | null | (number | null)[];
-    [index: string]: string | number | number[] | string[] | null | (number | null)[] | undefined;
+    easing?: string;
+    offset?: number;
+    [index: string]: string | number | null;
 }
 
 interface AnimationOptions {
@@ -1756,29 +1743,12 @@ interface ApplicationCacheEventMap {
     "updateready": Event;
 }
 
-interface ApplicationCache extends EventTarget {
-    oncached: ((this: ApplicationCache, ev: Event) => any) | null;
-    onchecking: ((this: ApplicationCache, ev: Event) => any) | null;
-    ondownloading: ((this: ApplicationCache, ev: Event) => any) | null;
-    onerror: ((this: ApplicationCache, ev: Event) => any) | null;
-    onnoupdate: ((this: ApplicationCache, ev: Event) => any) | null;
-    onobsolete: ((this: ApplicationCache, ev: Event) => any) | null;
-    onprogress: ((this: ApplicationCache, ev: ProgressEvent) => any) | null;
-    onupdateready: ((this: ApplicationCache, ev: Event) => any) | null;
+interface ApplicationCache extends EventTarget<ApplicationCache, ApplicationCacheEventType> {
     readonly status: number;
     abort(): void;
     swapCache(): void;
     update(): void;
-    readonly CHECKING: number;
-    readonly DOWNLOADING: number;
-    readonly IDLE: number;
-    readonly OBSOLETE: number;
-    readonly UNCACHED: number;
-    readonly UPDATEREADY: number;
-    addEventListener<K extends keyof ApplicationCacheEventMap>(type: K, listener: (this: ApplicationCache, ev: ApplicationCacheEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof ApplicationCacheEventMap>(type: K, listener: (this: ApplicationCache, ev: ApplicationCacheEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var ApplicationCache: {
@@ -1828,7 +1798,7 @@ interface AudioBufferSourceNodeEventMap {
     "ended": Event;
 }
 
-interface AudioBufferSourceNode extends AudioNode {
+interface AudioBufferSourceNode extends EventTarget<AudioBufferSourceNode, AudioBufferSourceNodeEventType>, AudioNode {
     buffer: AudioBuffer | null;
     readonly detune: AudioParam;
     loop: boolean;
@@ -1838,10 +1808,7 @@ interface AudioBufferSourceNode extends AudioNode {
     readonly playbackRate: AudioParam;
     start(when?: number, offset?: number, duration?: number): void;
     stop(when?: number): void;
-    addEventListener<K extends keyof AudioBufferSourceNodeEventMap>(type: K, listener: (this: AudioBufferSourceNode, ev: AudioBufferSourceNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof AudioBufferSourceNodeEventMap>(type: K, listener: (this: AudioBufferSourceNode, ev: AudioBufferSourceNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var AudioBufferSourceNode: {
@@ -1853,11 +1820,10 @@ interface AudioContextEventMap {
     "statechange": Event;
 }
 
-interface AudioContextBase extends EventTarget {
+interface AudioContextBase extends EventTarget<AudioContextBase, AudioContextEventType> {
     readonly currentTime: number;
     readonly destination: AudioDestinationNode;
     readonly listener: AudioListener;
-    onstatechange: ((this: AudioContext, ev: Event) => any) | null;
     readonly sampleRate: number;
     readonly state: AudioContextState;
     close(): Promise<void>;
@@ -1882,10 +1848,7 @@ interface AudioContextBase extends EventTarget {
     createWaveShaper(): WaveShaperNode;
     decodeAudioData(audioData: ArrayBuffer, successCallback?: DecodeSuccessCallback, errorCallback?: DecodeErrorCallback): Promise<AudioBuffer>;
     resume(): Promise<void>;
-    addEventListener<K extends keyof AudioContextEventMap>(type: K, listener: (this: AudioContext, ev: AudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof AudioContextEventMap>(type: K, listener: (this: AudioContext, ev: AudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 interface AudioContext extends AudioContextBase {
@@ -1994,17 +1957,12 @@ interface AudioTrackListEventMap {
     "removetrack": TrackEvent;
 }
 
-interface AudioTrackList extends EventTarget {
+interface AudioTrackList extends EventTarget<AudioTrackList, AudioTrackListEventType> {
     readonly length: number;
-    onaddtrack: ((this: AudioTrackList, ev: TrackEvent) => any) | null;
-    onchange: ((this: AudioTrackList, ev: Event) => any) | null;
-    onremovetrack: ((this: AudioTrackList, ev: TrackEvent) => any) | null;
     getTrackById(id: string): AudioTrack | null;
     item(index: number): AudioTrack;
-    addEventListener<K extends keyof AudioTrackListEventMap>(type: K, listener: (this: AudioTrackList, ev: AudioTrackListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof AudioTrackListEventMap>(type: K, listener: (this: AudioTrackList, ev: AudioTrackListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
+
     [index: number]: AudioTrack;
 }
 
@@ -2094,16 +2052,10 @@ interface Body {
     text(): Promise<string>;
 }
 
-interface BroadcastChannel extends EventTarget {
+interface BroadcastChannel extends EventTarget<BroadcastChannel, BroadcastChannelEventType> {
     readonly name: string;
-    onmessage: (ev: MessageEvent) => any;
-    onmessageerror: (ev: MessageEvent) => any;
-    addEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
     close(): void;
     postMessage(message: any): void;
-    removeEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
 }
 
 declare var BroadcastChannel: {
@@ -2239,18 +2191,6 @@ interface CSSRule {
     readonly parentRule: CSSRule | null;
     readonly parentStyleSheet: CSSStyleSheet | null;
     readonly type: number;
-    readonly CHARSET_RULE: number;
-    readonly FONT_FACE_RULE: number;
-    readonly IMPORT_RULE: number;
-    readonly KEYFRAMES_RULE: number;
-    readonly KEYFRAME_RULE: number;
-    readonly MEDIA_RULE: number;
-    readonly NAMESPACE_RULE: number;
-    readonly PAGE_RULE: number;
-    readonly STYLE_RULE: number;
-    readonly SUPPORTS_RULE: number;
-    readonly UNKNOWN_RULE: number;
-    readonly VIEWPORT_RULE: number;
 }
 
 declare var CSSRule: {
@@ -2726,7 +2666,8 @@ declare var CSSSupportsRule: {
 
 interface Cache {
     add(request: Request | string): Promise<void>;
-    addAll(requests: (Request | string)[]): Promise<void>;
+    addAll(requests: Request[]): Promise<void>;
+    addAll(requests: string[]): Promise<void>;
     delete(request: Request | string, options?: CacheQueryOptions): Promise<boolean>;
     keys(request?: Request | string, options?: CacheQueryOptions): Promise<Request[]>;
     match(request: Request | string, options?: CacheQueryOptions): Promise<Response>;
@@ -2756,7 +2697,7 @@ interface Canvas2DContextAttributes {
     alpha?: boolean;
     storage?: boolean;
     willReadFrequently?: boolean;
-    [attribute: string]: boolean | string | undefined;
+    [attribute: string]: boolean | string | null;
 }
 
 interface CanvasGradient {
@@ -2969,7 +2910,7 @@ interface ComputedTimingProperties {
 
 interface ConcatParams extends Algorithm {
     algorithmId: Uint8Array;
-    hash?: string | Algorithm;
+    hash?: AlgorithmIdentifier;
     partyUInfo: Uint8Array;
     partyVInfo: Uint8Array;
     privateInfo?: Uint8Array;
@@ -3058,7 +2999,7 @@ declare var CountQueuingStrategy: {
 
 interface Crypto {
     readonly subtle: SubtleCrypto;
-    getRandomValues(array: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null;
+    getRandomValues(array: ArrayBufferView | null): ArrayBufferView | null;
 }
 
 declare var Crypto: {
@@ -3091,7 +3032,7 @@ declare var CryptoKeyPair: {
 interface CustomElementRegistry {
     define(name: string, constructor: Function, options?: ElementDefinitionOptions): void;
     get(name: string): any;
-    whenDefined(name: string): PromiseLike<void>;
+    whenDefined(name: string): Promise<void>;
 }
 
 interface CustomEvent<T = any> extends Event {
@@ -3119,33 +3060,6 @@ interface DOMException {
     readonly message: string;
     readonly name: string;
     toString(): string;
-    readonly ABORT_ERR: number;
-    readonly DATA_CLONE_ERR: number;
-    readonly DOMSTRING_SIZE_ERR: number;
-    readonly HIERARCHY_REQUEST_ERR: number;
-    readonly INDEX_SIZE_ERR: number;
-    readonly INUSE_ATTRIBUTE_ERR: number;
-    readonly INVALID_ACCESS_ERR: number;
-    readonly INVALID_CHARACTER_ERR: number;
-    readonly INVALID_MODIFICATION_ERR: number;
-    readonly INVALID_NODE_TYPE_ERR: number;
-    readonly INVALID_STATE_ERR: number;
-    readonly NAMESPACE_ERR: number;
-    readonly NETWORK_ERR: number;
-    readonly NOT_FOUND_ERR: number;
-    readonly NOT_SUPPORTED_ERR: number;
-    readonly NO_DATA_ALLOWED_ERR: number;
-    readonly NO_MODIFICATION_ALLOWED_ERR: number;
-    readonly PARSE_ERR: number;
-    readonly QUOTA_EXCEEDED_ERR: number;
-    readonly SECURITY_ERR: number;
-    readonly SERIALIZE_ERR: number;
-    readonly SYNTAX_ERR: number;
-    readonly TIMEOUT_ERR: number;
-    readonly TYPE_MISMATCH_ERR: number;
-    readonly URL_MISMATCH_ERR: number;
-    readonly VALIDATION_ERR: number;
-    readonly WRONG_DOCUMENT_ERR: number;
 }
 
 declare var DOMException: {
@@ -3192,14 +3106,6 @@ declare var DOMImplementation: {
     new(): DOMImplementation;
 };
 
-interface DOML2DeprecatedColorProperty {
-    color: string;
-}
-
-interface DOML2DeprecatedSizeProperty {
-    size: number;
-}
-
 interface DOMParser {
     parseFromString(source: string, mimeType: string): Document;
 }
@@ -3267,7 +3173,7 @@ declare var DOMStringList: {
 };
 
 interface DOMStringMap {
-    [name: string]: string | undefined;
+    [name: string]: string | null;
 }
 
 declare var DOMStringMap: {
@@ -3292,12 +3198,9 @@ declare var DOMTokenList: {
     new(): DOMTokenList;
 };
 
-interface DataCue extends TextTrackCue {
+interface DataCue extends EventTarget<DataCue, TextTrackCueEventType>, TextTrackCue {
     data: ArrayBuffer;
-    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: DataCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: DataCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var DataCue: {
@@ -3539,7 +3442,7 @@ interface DocumentEventMap extends GlobalEventHandlersEventMap {
     "webkitfullscreenerror": Event;
 }
 
-interface Document extends Node, GlobalEventHandlers, ParentNode, DocumentEvent {
+interface Document extends EventTarget<Document, DocumentEventType>, Node, GlobalEventHandlers, ParentNode {
     /**
      * Sets or gets the URL for the current document.
      */
@@ -3654,315 +3557,6 @@ interface Document extends Node, GlobalEventHandlers, ParentNode, DocumentEvent
     location: Location;
     msCSSOMElementFloatMetrics: boolean;
     msCapsLockWarningOff: boolean;
-    /**
-     * Fires when the user aborts the download.
-     * @param ev The event.
-     */
-    onabort: ((this: Document, ev: UIEvent) => any) | null;
-    /**
-     * Fires when the object is set as the active element.
-     * @param ev The event.
-     */
-    onactivate: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires immediately before the object is set as the active element.
-     * @param ev The event.
-     */
-    onbeforeactivate: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires immediately before the activeElement is changed from the current object to another object in the parent document.
-     * @param ev The event.
-     */
-    onbeforedeactivate: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires when the object loses the input focus.
-     * @param ev The focus event.
-     */
-    onblur: ((this: Document, ev: FocusEvent) => any) | null;
-    /**
-     * Occurs when playback is possible, but would require further buffering.
-     * @param ev The event.
-     */
-    oncanplay: ((this: Document, ev: Event) => any) | null;
-    oncanplaythrough: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires when the contents of the object or selection have changed.
-     * @param ev The event.
-     */
-    onchange: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires when the user clicks the left mouse button on the object
-     * @param ev The mouse event.
-     */
-    onclick: ((this: Document, ev: MouseEvent) => any) | null;
-    /**
-     * Fires when the user clicks the right mouse button in the client area, opening the context menu.
-     * @param ev The mouse event.
-     */
-    oncontextmenu: ((this: Document, ev: PointerEvent) => any) | null;
-    /**
-     * Fires when the user double-clicks the object.
-     * @param ev The mouse event.
-     */
-    ondblclick: ((this: Document, ev: MouseEvent) => any) | null;
-    /**
-     * Fires when the activeElement is changed from the current object to another object in the parent document.
-     * @param ev The UI Event
-     */
-    ondeactivate: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires on the source object continuously during a drag operation.
-     * @param ev The event.
-     */
-    ondrag: ((this: Document, ev: DragEvent) => any) | null;
-    /**
-     * Fires on the source object when the user releases the mouse at the close of a drag operation.
-     * @param ev The event.
-     */
-    ondragend: ((this: Document, ev: DragEvent) => any) | null;
-    /**
-     * Fires on the target element when the user drags the object to a valid drop target.
-     * @param ev The drag event.
-     */
-    ondragenter: ((this: Document, ev: DragEvent) => any) | null;
-    /**
-     * Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.
-     * @param ev The drag event.
-     */
-    ondragleave: ((this: Document, ev: DragEvent) => any) | null;
-    /**
-     * Fires on the target element continuously while the user drags the object over a valid drop target.
-     * @param ev The event.
-     */
-    ondragover: ((this: Document, ev: DragEvent) => any) | null;
-    /**
-     * Fires on the source object when the user starts to drag a text selection or selected object.
-     * @param ev The event.
-     */
-    ondragstart: ((this: Document, ev: DragEvent) => any) | null;
-    ondrop: ((this: Document, ev: DragEvent) => any) | null;
-    /**
-     * Occurs when the duration attribute is updated.
-     * @param ev The event.
-     */
-    ondurationchange: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when the media element is reset to its initial state.
-     * @param ev The event.
-     */
-    onemptied: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when the end of playback is reached.
-     * @param ev The event
-     */
-    onended: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires when an error occurs during object loading.
-     * @param ev The event.
-     */
-    onerror: ((this: Document, ev: ErrorEvent) => any) | null;
-    /**
-     * Fires when the object receives focus.
-     * @param ev The event.
-     */
-    onfocus: ((this: Document, ev: FocusEvent) => any) | null;
-    onfullscreenchange: ((this: Document, ev: Event) => any) | null;
-    onfullscreenerror: ((this: Document, ev: Event) => any) | null;
-    oninput: ((this: Document, ev: Event) => any) | null;
-    oninvalid: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires when the user presses a key.
-     * @param ev The keyboard event
-     */
-    onkeydown: ((this: Document, ev: KeyboardEvent) => any) | null;
-    /**
-     * Fires when the user presses an alphanumeric key.
-     * @param ev The event.
-     */
-    onkeypress: ((this: Document, ev: KeyboardEvent) => any) | null;
-    /**
-     * Fires when the user releases a key.
-     * @param ev The keyboard event
-     */
-    onkeyup: ((this: Document, ev: KeyboardEvent) => any) | null;
-    /**
-     * Fires immediately after the browser loads the object.
-     * @param ev The event.
-     */
-    onload: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when media data is loaded at the current playback position.
-     * @param ev The event.
-     */
-    onloadeddata: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when the duration and dimensions of the media have been determined.
-     * @param ev The event.
-     */
-    onloadedmetadata: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when Internet Explorer begins looking for media data.
-     * @param ev The event.
-     */
-    onloadstart: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires when the user clicks the object with either mouse button.
-     * @param ev The mouse event.
-     */
-    onmousedown: ((this: Document, ev: MouseEvent) => any) | null;
-    /**
-     * Fires when the user moves the mouse over the object.
-     * @param ev The mouse event.
-     */
-    onmousemove: ((this: Document, ev: MouseEvent) => any) | null;
-    /**
-     * Fires when the user moves the mouse pointer outside the boundaries of the object.
-     * @param ev The mouse event.
-     */
-    onmouseout: ((this: Document, ev: MouseEvent) => any) | null;
-    /**
-     * Fires when the user moves the mouse pointer into the object.
-     * @param ev The mouse event.
-     */
-    onmouseover: ((this: Document, ev: MouseEvent) => any) | null;
-    /**
-     * Fires when the user releases a mouse button while the mouse is over the object.
-     * @param ev The mouse event.
-     */
-    onmouseup: ((this: Document, ev: MouseEvent) => any) | null;
-    /**
-     * Fires when the wheel button is rotated.
-     * @param ev The mouse event
-     */
-    onmousewheel: ((this: Document, ev: WheelEvent) => any) | null;
-    onmscontentzoom: ((this: Document, ev: Event) => any) | null;
-    onmsgesturechange: ((this: Document, ev: Event) => any) | null;
-    onmsgesturedoubletap: ((this: Document, ev: Event) => any) | null;
-    onmsgestureend: ((this: Document, ev: Event) => any) | null;
-    onmsgesturehold: ((this: Document, ev: Event) => any) | null;
-    onmsgesturestart: ((this: Document, ev: Event) => any) | null;
-    onmsgesturetap: ((this: Document, ev: Event) => any) | null;
-    onmsinertiastart: ((this: Document, ev: Event) => any) | null;
-    onmsmanipulationstatechanged: ((this: Document, ev: Event) => any) | null;
-    onmspointercancel: ((this: Document, ev: Event) => any) | null;
-    onmspointerdown: ((this: Document, ev: Event) => any) | null;
-    onmspointerenter: ((this: Document, ev: Event) => any) | null;
-    onmspointerleave: ((this: Document, ev: Event) => any) | null;
-    onmspointermove: ((this: Document, ev: Event) => any) | null;
-    onmspointerout: ((this: Document, ev: Event) => any) | null;
-    onmspointerover: ((this: Document, ev: Event) => any) | null;
-    onmspointerup: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when an item is removed from a Jump List of a webpage running in Site Mode.
-     * @param ev The event.
-     */
-    onmssitemodejumplistitemremoved: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when a user clicks a button in a Thumbnail Toolbar of a webpage running in Site Mode.
-     * @param ev The event.
-     */
-    onmsthumbnailclick: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when playback is paused.
-     * @param ev The event.
-     */
-    onpause: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when the play method is requested.
-     * @param ev The event.
-     */
-    onplay: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when the audio or video has started playing.
-     * @param ev The event.
-     */
-    onplaying: ((this: Document, ev: Event) => any) | null;
-    onpointerlockchange: ((this: Document, ev: Event) => any) | null;
-    onpointerlockerror: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs to indicate progress while downloading media data.
-     * @param ev The event.
-     */
-    onprogress: ((this: Document, ev: ProgressEvent) => any) | null;
-    /**
-     * Occurs when the playback rate is increased or decreased.
-     * @param ev The event.
-     */
-    onratechange: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires when the state of the object has changed.
-     * @param ev The event
-     */
-    onreadystatechange: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires when the user resets a form.
-     * @param ev The event.
-     */
-    onreset: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires when the user repositions the scroll box in the scroll bar on the object.
-     * @param ev The event.
-     */
-    onscroll: ((this: Document, ev: UIEvent) => any) | null;
-    /**
-     * Occurs when the seek operation ends.
-     * @param ev The event.
-     */
-    onseeked: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when the current playback position is moved.
-     * @param ev The event.
-     */
-    onseeking: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires when the current selection changes.
-     * @param ev The event.
-     */
-    onselect: ((this: Document, ev: UIEvent) => any) | null;
-    /**
-     * Fires when the selection state of a document changes.
-     * @param ev The event.
-     */
-    onselectionchange: ((this: Document, ev: Event) => any) | null;
-    onselectstart: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when the download has stopped.
-     * @param ev The event.
-     */
-    onstalled: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Fires when the user clicks the Stop button or leaves the Web page.
-     * @param ev The event.
-     */
-    onstop: ((this: Document, ev: Event) => any) | null;
-    onsubmit: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs if the load operation has been intentionally halted.
-     * @param ev The event.
-     */
-    onsuspend: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs to indicate the current playback position.
-     * @param ev The event.
-     */
-    ontimeupdate: ((this: Document, ev: Event) => any) | null;
-    ontouchcancel: ((this: Document, ev: TouchEvent) => any) | null;
-    ontouchend: ((this: Document, ev: TouchEvent) => any) | null;
-    ontouchmove: ((this: Document, ev: TouchEvent) => any) | null;
-    ontouchstart: ((this: Document, ev: TouchEvent) => any) | null;
-    onvisibilitychange: (this: Document, ev: Event) => any;
-    /**
-     * Occurs when the volume is changed, or playback is muted or unmuted.
-     * @param ev The event.
-     */
-    onvolumechange: ((this: Document, ev: Event) => any) | null;
-    /**
-     * Occurs when playback stops because the next frame of a video resource is not available.
-     * @param ev The event.
-     */
-    onwaiting: ((this: Document, ev: Event) => any) | null;
-    onwebkitfullscreenchange: ((this: Document, ev: Event) => any) | null;
-    onwebkitfullscreenerror: ((this: Document, ev: Event) => any) | null;
     readonly plugins: HTMLCollectionOf<HTMLEmbedElement>;
     readonly pointerLockElement: Element;
     /**
@@ -4033,71 +3627,8 @@ interface Document extends Node, GlobalEventHandlers, ParentNode, DocumentEvent
      * Creates an instance of the element for the specified tag.
      * @param tagName The name of an element.
      */
-    createElement<K extends keyof HTMLElementTagNameMap>(tagName: K, options?: ElementCreationOptions): HTMLElementTagNameMap[K];
+    createElement<K extends HTMLElement>(tagName: __Class<K>, options?: ElementCreationOptions): K;
     createElement(tagName: string, options?: ElementCreationOptions): HTMLElement;
-    createElementNS(namespaceURI: "http://www.w3.org/1999/xhtml", qualifiedName: string): HTMLElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "a"): SVGAElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "circle"): SVGCircleElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "clipPath"): SVGClipPathElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "componentTransferFunction"): SVGComponentTransferFunctionElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "defs"): SVGDefsElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "desc"): SVGDescElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "ellipse"): SVGEllipseElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feBlend"): SVGFEBlendElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feColorMatrix"): SVGFEColorMatrixElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feComponentTransfer"): SVGFEComponentTransferElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feComposite"): SVGFECompositeElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feConvolveMatrix"): SVGFEConvolveMatrixElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feDiffuseLighting"): SVGFEDiffuseLightingElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feDisplacementMap"): SVGFEDisplacementMapElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feDistantLight"): SVGFEDistantLightElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feFlood"): SVGFEFloodElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feFuncA"): SVGFEFuncAElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feFuncB"): SVGFEFuncBElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feFuncG"): SVGFEFuncGElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feFuncR"): SVGFEFuncRElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feGaussianBlur"): SVGFEGaussianBlurElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feImage"): SVGFEImageElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feMerge"): SVGFEMergeElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feMergeNode"): SVGFEMergeNodeElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feMorphology"): SVGFEMorphologyElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feOffset"): SVGFEOffsetElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "fePointLight"): SVGFEPointLightElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feSpecularLighting"): SVGFESpecularLightingElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feSpotLight"): SVGFESpotLightElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feTile"): SVGFETileElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "feTurbulence"): SVGFETurbulenceElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "filter"): SVGFilterElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "foreignObject"): SVGForeignObjectElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "g"): SVGGElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "image"): SVGImageElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "gradient"): SVGGradientElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "line"): SVGLineElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "linearGradient"): SVGLinearGradientElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "marker"): SVGMarkerElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "mask"): SVGMaskElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "path"): SVGPathElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "metadata"): SVGMetadataElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "pattern"): SVGPatternElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "polygon"): SVGPolygonElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "polyline"): SVGPolylineElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "radialGradient"): SVGRadialGradientElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "rect"): SVGRectElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "svg"): SVGSVGElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "script"): SVGScriptElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "stop"): SVGStopElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "style"): SVGStyleElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "switch"): SVGSwitchElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "symbol"): SVGSymbolElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "tspan"): SVGTSpanElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "textContent"): SVGTextContentElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "text"): SVGTextElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "textPath"): SVGTextPathElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "textPositioning"): SVGTextPositioningElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "title"): SVGTitleElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "use"): SVGUseElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: "view"): SVGViewElement;
-    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: string): SVGElement;
     createElementNS(namespaceURI: string | null, qualifiedName: string): Element;
     createExpression(expression: string, resolver: XPathNSResolver): XPathExpression;
     createNSResolver(nodeResolver: Node): XPathNSResolver;
@@ -4171,11 +3702,9 @@ interface Document extends Node, GlobalEventHandlers, ParentNode, DocumentEvent
      * Retrieves a collection of objects based on the specified element name.
      * @param name Specifies the name of an element.
      */
-    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(tagname: K): NodeListOf<HTMLElementTagNameMap[K]>;
-    getElementsByTagName<K extends keyof SVGElementTagNameMap>(tagname: K): NodeListOf<SVGElementTagNameMap[K]>;
+    getElementsByTagName<K extends HTMLElement>(tagname: __Class<K>): NodeListOf<K>;
+    getElementsByTagName<K extends SVGElement>(tagname: __Class<K>): NodeListOf<K>;
     getElementsByTagName(tagname: string): NodeListOf<Element>;
-    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/1999/xhtml", localName: string): HTMLCollectionOf<HTMLElement>;
-    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/2000/svg", localName: string): HTMLCollectionOf<SVGElement>;
     getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>;
     /**
      * Returns an object representing the current selection of the document that is loaded into the object displaying a webpage.
@@ -4240,10 +3769,7 @@ interface Document extends Node, GlobalEventHandlers, ParentNode, DocumentEvent
      * @param content The text and HTML tags to write.
      */
     writeln(...content: string[]): void;
-    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var Document: {
@@ -4251,78 +3777,6 @@ declare var Document: {
     new(): Document;
 };
 
-interface DocumentEvent {
-    createEvent(eventInterface: "AnimationEvent"): AnimationEvent;
-    createEvent(eventInterface: "AnimationPlaybackEvent"): AnimationPlaybackEvent;
-    createEvent(eventInterface: "AudioProcessingEvent"): AudioProcessingEvent;
-    createEvent(eventInterface: "BeforeUnloadEvent"): BeforeUnloadEvent;
-    createEvent(eventInterface: "ClipboardEvent"): ClipboardEvent;
-    createEvent(eventInterface: "CloseEvent"): CloseEvent;
-    createEvent(eventInterface: "CompositionEvent"): CompositionEvent;
-    createEvent(eventInterface: "CustomEvent"): CustomEvent;
-    createEvent(eventInterface: "DeviceLightEvent"): DeviceLightEvent;
-    createEvent(eventInterface: "DeviceMotionEvent"): DeviceMotionEvent;
-    createEvent(eventInterface: "DeviceOrientationEvent"): DeviceOrientationEvent;
-    createEvent(eventInterface: "DragEvent"): DragEvent;
-    createEvent(eventInterface: "ErrorEvent"): ErrorEvent;
-    createEvent(eventInterface: "Event"): Event;
-    createEvent(eventInterface: "Events"): Event;
-    createEvent(eventInterface: "FocusEvent"): FocusEvent;
-    createEvent(eventInterface: "FocusNavigationEvent"): FocusNavigationEvent;
-    createEvent(eventInterface: "GamepadEvent"): GamepadEvent;
-    createEvent(eventInterface: "HashChangeEvent"): HashChangeEvent;
-    createEvent(eventInterface: "IDBVersionChangeEvent"): IDBVersionChangeEvent;
-    createEvent(eventInterface: "KeyboardEvent"): KeyboardEvent;
-    createEvent(eventInterface: "ListeningStateChangedEvent"): ListeningStateChangedEvent;
-    createEvent(eventInterface: "MSDCCEvent"): MSDCCEvent;
-    createEvent(eventInterface: "MSDSHEvent"): MSDSHEvent;
-    createEvent(eventInterface: "MSMediaKeyMessageEvent"): MSMediaKeyMessageEvent;
-    createEvent(eventInterface: "MSMediaKeyNeededEvent"): MSMediaKeyNeededEvent;
-    createEvent(eventInterface: "MediaEncryptedEvent"): MediaEncryptedEvent;
-    createEvent(eventInterface: "MediaKeyMessageEvent"): MediaKeyMessageEvent;
-    createEvent(eventInterface: "MediaStreamErrorEvent"): MediaStreamErrorEvent;
-    createEvent(eventInterface: "MediaStreamEvent"): MediaStreamEvent;
-    createEvent(eventInterface: "MediaStreamTrackEvent"): MediaStreamTrackEvent;
-    createEvent(eventInterface: "MessageEvent"): MessageEvent;
-    createEvent(eventInterface: "MouseEvent"): MouseEvent;
-    createEvent(eventInterface: "MouseEvents"): MouseEvent;
-    createEvent(eventInterface: "MutationEvent"): MutationEvent;
-    createEvent(eventInterface: "MutationEvents"): MutationEvent;
-    createEvent(eventInterface: "OfflineAudioCompletionEvent"): OfflineAudioCompletionEvent;
-    createEvent(eventInterface: "OverflowEvent"): OverflowEvent;
-    createEvent(eventInterface: "PageTransitionEvent"): PageTransitionEvent;
-    createEvent(eventInterface: "PaymentRequestUpdateEvent"): PaymentRequestUpdateEvent;
-    createEvent(eventInterface: "PermissionRequestedEvent"): PermissionRequestedEvent;
-    createEvent(eventInterface: "PointerEvent"): PointerEvent;
-    createEvent(eventInterface: "PopStateEvent"): PopStateEvent;
-    createEvent(eventInterface: "ProgressEvent"): ProgressEvent;
-    createEvent(eventInterface: "PromiseRejectionEvent"): PromiseRejectionEvent;
-    createEvent(eventInterface: "RTCDTMFToneChangeEvent"): RTCDTMFToneChangeEvent;
-    createEvent(eventInterface: "RTCDtlsTransportStateChangedEvent"): RTCDtlsTransportStateChangedEvent;
-    createEvent(eventInterface: "RTCIceCandidatePairChangedEvent"): RTCIceCandidatePairChangedEvent;
-    createEvent(eventInterface: "RTCIceGathererEvent"): RTCIceGathererEvent;
-    createEvent(eventInterface: "RTCIceTransportStateChangedEvent"): RTCIceTransportStateChangedEvent;
-    createEvent(eventInterface: "RTCPeerConnectionIceEvent"): RTCPeerConnectionIceEvent;
-    createEvent(eventInterface: "RTCSsrcConflictEvent"): RTCSsrcConflictEvent;
-    createEvent(eventInterface: "SVGZoomEvent"): SVGZoomEvent;
-    createEvent(eventInterface: "SVGZoomEvents"): SVGZoomEvent;
-    createEvent(eventInterface: "SecurityPolicyViolationEvent"): SecurityPolicyViolationEvent;
-    createEvent(eventInterface: "ServiceWorkerMessageEvent"): ServiceWorkerMessageEvent;
-    createEvent(eventInterface: "SpeechSynthesisEvent"): SpeechSynthesisEvent;
-    createEvent(eventInterface: "StorageEvent"): StorageEvent;
-    createEvent(eventInterface: "TextEvent"): TextEvent;
-    createEvent(eventInterface: "TouchEvent"): TouchEvent;
-    createEvent(eventInterface: "TrackEvent"): TrackEvent;
-    createEvent(eventInterface: "TransitionEvent"): TransitionEvent;
-    createEvent(eventInterface: "UIEvent"): UIEvent;
-    createEvent(eventInterface: "UIEvents"): UIEvent;
-    createEvent(eventInterface: "VRDisplayEvent"): VRDisplayEvent;
-    createEvent(eventInterface: "VRDisplayEvent "): VRDisplayEvent ;
-    createEvent(eventInterface: "WebGLContextEvent"): WebGLContextEvent;
-    createEvent(eventInterface: "WheelEvent"): WheelEvent;
-    createEvent(eventInterface: string): Event;
-}
-
 interface DocumentFragment extends Node, ParentNode {
     getElementById(elementId: string): HTMLElement | null;
 }
@@ -4362,7 +3816,7 @@ interface DragEvent extends MouseEvent {
 
 declare var DragEvent: {
     prototype: DragEvent;
-    new(type: "drag" | "dragend" | "dragenter" | "dragexit" | "dragleave" | "dragover" | "dragstart" | "drop", dragEventInit?: { dataTransfer?: DataTransfer }): DragEvent;
+    new(type: "drag" | "dragend" | "dragenter" | "dragexit" | "dragleave" | "dragover" | "dragstart" | "drop", dragEventInit?: { dataTransfer?: DataTransfer; }): DragEvent;
 };
 
 interface DynamicsCompressorNode extends AudioNode {
@@ -4398,8 +3852,6 @@ interface EXT_shader_texture_lod {
 }
 
 interface EXT_texture_filter_anisotropic {
-    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: number;
-    readonly TEXTURE_MAX_ANISOTROPY_EXT: number;
 }
 
 declare var EXT_texture_filter_anisotropic: {
@@ -4439,7 +3891,7 @@ interface ElementEventMap extends GlobalEventHandlersEventMap {
     "webkitfullscreenerror": Event;
 }
 
-interface Element extends Node, GlobalEventHandlers, ElementTraversal, ParentNode {
+interface Element extends EventTarget<Element, ElementEventType>, Node, GlobalEventHandlers, ElementTraversal, ParentNode /*! @ooml-abstract */ {
     readonly assignedSlot: HTMLSlotElement | null;
     readonly attributes: NamedNodeMap;
     readonly classList: DOMTokenList;
@@ -4452,33 +3904,6 @@ interface Element extends Node, GlobalEventHandlers, ElementTraversal, ParentNod
     innerHTML: string;
     msContentZoomFactor: number;
     readonly msRegionOverflow: string;
-    onariarequest: ((this: Element, ev: Event) => any) | null;
-    oncommand: ((this: Element, ev: Event) => any) | null;
-    ongotpointercapture: ((this: Element, ev: PointerEvent) => any) | null;
-    onlostpointercapture: ((this: Element, ev: PointerEvent) => any) | null;
-    onmsgesturechange: ((this: Element, ev: Event) => any) | null;
-    onmsgesturedoubletap: ((this: Element, ev: Event) => any) | null;
-    onmsgestureend: ((this: Element, ev: Event) => any) | null;
-    onmsgesturehold: ((this: Element, ev: Event) => any) | null;
-    onmsgesturestart: ((this: Element, ev: Event) => any) | null;
-    onmsgesturetap: ((this: Element, ev: Event) => any) | null;
-    onmsgotpointercapture: ((this: Element, ev: Event) => any) | null;
-    onmsinertiastart: ((this: Element, ev: Event) => any) | null;
-    onmslostpointercapture: ((this: Element, ev: Event) => any) | null;
-    onmspointercancel: ((this: Element, ev: Event) => any) | null;
-    onmspointerdown: ((this: Element, ev: Event) => any) | null;
-    onmspointerenter: ((this: Element, ev: Event) => any) | null;
-    onmspointerleave: ((this: Element, ev: Event) => any) | null;
-    onmspointermove: ((this: Element, ev: Event) => any) | null;
-    onmspointerout: ((this: Element, ev: Event) => any) | null;
-    onmspointerover: ((this: Element, ev: Event) => any) | null;
-    onmspointerup: ((this: Element, ev: Event) => any) | null;
-    ontouchcancel: ((this: Element, ev: TouchEvent) => any) | null;
-    ontouchend: ((this: Element, ev: TouchEvent) => any) | null;
-    ontouchmove: ((this: Element, ev: TouchEvent) => any) | null;
-    ontouchstart: ((this: Element, ev: TouchEvent) => any) | null;
-    onwebkitfullscreenchange: ((this: Element, ev: Event) => any) | null;
-    onwebkitfullscreenerror: ((this: Element, ev: Event) => any) | null;
     outerHTML: string;
     readonly prefix: string | null;
     readonly scrollHeight: number;
@@ -4489,8 +3914,8 @@ interface Element extends Node, GlobalEventHandlers, ElementTraversal, ParentNod
     slot: string;
     readonly tagName: string;
     attachShadow(shadowRootInitDict: ShadowRootInit): ShadowRoot;
-    closest<K extends keyof HTMLElementTagNameMap>(selector: K): HTMLElementTagNameMap[K] | null;
-    closest<K extends keyof SVGElementTagNameMap>(selector: K): SVGElementTagNameMap[K] | null;
+    closest<K extends HTMLElement>(selector: __Class<K>): K | null;
+    closest<K extends SVGElement>(selector: __Class<K>): K | null;
     closest(selector: string): Element | null;
     getAttribute(qualifiedName: string): string | null;
     getAttributeNS(namespaceURI: string, localName: string): string;
@@ -4499,11 +3924,9 @@ interface Element extends Node, GlobalEventHandlers, ElementTraversal, ParentNod
     getBoundingClientRect(): ClientRect | DOMRect;
     getClientRects(): ClientRectList | DOMRectList;
     getElementsByClassName(classNames: string): NodeListOf<Element>;
-    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(name: K): NodeListOf<HTMLElementTagNameMap[K]>;
-    getElementsByTagName<K extends keyof SVGElementTagNameMap>(name: K): NodeListOf<SVGElementTagNameMap[K]>;
+    getElementsByTagName<K extends HTMLElement>(name: __Class<K>): NodeListOf<K>;
+    getElementsByTagName<K extends SVGElement>(name: __Class<K>): NodeListOf<K>;
     getElementsByTagName(name: string): NodeListOf<Element>;
-    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/1999/xhtml", localName: string): HTMLCollectionOf<HTMLElement>;
-    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/2000/svg", localName: string): HTMLCollectionOf<SVGElement>;
     getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>;
     hasAttribute(name: string): boolean;
     hasAttributeNS(namespaceURI: string, localName: string): boolean;
@@ -4539,10 +3962,7 @@ interface Element extends Node, GlobalEventHandlers, ElementTraversal, ParentNod
     webkitMatchesSelector(selectors: string): boolean;
     webkitRequestFullScreen(): void;
     webkitRequestFullscreen(): void;
-    addEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: ElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: ElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var Element: {
@@ -4603,10 +4023,6 @@ interface Event {
     preventDefault(): void;
     stopImmediatePropagation(): void;
     stopPropagation(): void;
-    readonly AT_TARGET: number;
-    readonly BUBBLING_PHASE: number;
-    readonly CAPTURING_PHASE: number;
-    readonly NONE: number;
 }
 
 declare var Event: {
@@ -4618,8 +4034,8 @@ declare var Event: {
     readonly NONE: number;
 };
 
-interface EventListenerObject {
-    handleEvent(evt: Event): void;
+interface EventListener<Target, SpecificType> {
+  (this: Target, event: SpecificType): any;
 }
 
 interface EventSource extends EventTarget {
@@ -4644,17 +4060,12 @@ interface EventSourceInit {
     readonly withCredentials: boolean;
 }
 
-interface EventTarget {
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject | null, options?: boolean | AddEventListenerOptions): void;
+interface EventTarget<Target, Type extends EventType> /*! @ooml-interface */ {
     dispatchEvent(evt: Event): boolean;
-    removeEventListener(type: string, listener?: EventListenerOrEventListenerObject | null, options?: EventListenerOptions | boolean): void;
+    addEventListener<SpecificType extends Type>(type: __Class<SpecificType>, listener: EventListener<Target, SpecificType>, options?: boolean | AddEventListenerOptions): void;
+    removeEventListener<SpecificType extends Type>(type: __Class<SpecificType>, listener: EventListener<Target, SpecificType>, options?: boolean | EventListenerOptions): void;
 }
 
-declare var EventTarget: {
-    prototype: EventTarget;
-    new(): EventTarget;
-};
-
 interface ExtensionScriptApis {
     extensionIdToShortId(extensionId: string): number;
     fireExtensionApiTelemetry(functionName: string, isSucceeded: boolean, isSupported: boolean, errorString: string): void;
@@ -4690,7 +4101,9 @@ interface File extends Blob {
 
 declare var File: {
     prototype: File;
-    new (parts: (ArrayBuffer | ArrayBufferView | Blob | string)[], filename: string, properties?: FilePropertyBag): File;
+    new (parts: BufferSource[], filename: string, properties?: FilePropertyBag): File;
+    new (parts: Blob[], filename: string, properties?: FilePropertyBag): File;
+    new (parts: string[], filename: string, properties?: FilePropertyBag): File;
 };
 
 interface FileList {
@@ -4717,14 +4130,8 @@ interface FileReaderEventMap {
     "progress": ProgressEvent;
 }
 
-interface FileReader extends EventTarget {
+interface FileReader extends EventTarget<FileReader, FileReaderEventType> {
     readonly error: DOMException | null;
-    onabort: ((this: FileReader, ev: FileReaderProgressEvent) => any) | null;
-    onerror: ((this: FileReader, ev: FileReaderProgressEvent) => any) | null;
-    onload: ((this: FileReader, ev: FileReaderProgressEvent) => any) | null;
-    onloadend: ((this: FileReader, ev: FileReaderProgressEvent) => any) | null;
-    onloadstart: ((this: FileReader, ev: FileReaderProgressEvent) => any) | null;
-    onprogress: ((this: FileReader, ev: FileReaderProgressEvent) => any) | null;
     readonly readyState: number;
     readonly result: any;
     abort(): void;
@@ -4732,13 +4139,7 @@ interface FileReader extends EventTarget {
     readAsBinaryString(blob: Blob): void;
     readAsDataURL(blob: Blob): void;
     readAsText(blob: Blob, label?: string): void;
-    readonly DONE: number;
-    readonly EMPTY: number;
-    readonly LOADING: number;
-    addEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var FileReader: {
@@ -4893,24 +4294,8 @@ interface GlobalEventHandlersEventMap {
     "wheel": WheelEvent;
 }
 
-interface GlobalEventHandlers {
-    onpointercancel: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
-    onpointerdown: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
-    onpointerenter: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
-    onpointerleave: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
-    onpointermove: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
-    onpointerout: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
-    onpointerover: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
-    onpointerup: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
-    onwheel: ((this: GlobalEventHandlers, ev: WheelEvent) => any) | null;
-    addEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
-}
+interface GlobalEventHandlers extends EventTarget<GlobalEventHandlers, GlobalEventHandlersEventType> /*! @ooml-interface */ {
 
-interface GlobalFetch {
-    fetch(input?: Request | string, init?: RequestInit): Promise<Response>;
 }
 
 interface HTMLAllCollection {
@@ -4974,10 +4359,7 @@ interface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {
     text: string;
     type: string;
     urn: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLAnchorElement: {
@@ -5024,10 +4406,7 @@ interface HTMLAppletElement extends HTMLElement {
     vspace: number;
     /** @deprecated */
     width: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAppletElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAppletElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLAppletElement: {
@@ -5059,10 +4438,7 @@ interface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {
      * Sets or retrieves the window or frame at which to target content.
      */
     target: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLAreaElement: {
@@ -5078,11 +4454,8 @@ declare var HTMLAreasCollection: {
     new(): HTMLAreasCollection;
 };
 
-interface HTMLAudioElement extends HTMLMediaElement {
-    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface HTMLAudioElement extends EventTarget<HTMLAudioElement, HTMLMediaElementEventType>, HTMLMediaElement {
+
 }
 
 declare var HTMLAudioElement: {
@@ -5096,10 +4469,7 @@ interface HTMLBRElement extends HTMLElement {
      */
     /** @deprecated */
     clear: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLBRElement: {
@@ -5116,10 +4486,7 @@ interface HTMLBaseElement extends HTMLElement {
      * Sets or retrieves the window or frame at which to target content.
      */
     target: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLBaseElement: {
@@ -5127,7 +4494,7 @@ declare var HTMLBaseElement: {
     new(): HTMLBaseElement;
 };
 
-interface HTMLBaseFontElement extends HTMLElement, DOML2DeprecatedColorProperty {
+interface HTMLBaseFontElement extends HTMLElement {
     /**
      * Sets or retrieves the current typeface family.
      */
@@ -5138,10 +4505,7 @@ interface HTMLBaseFontElement extends HTMLElement, DOML2DeprecatedColorProperty
      */
     /** @deprecated */
     size: number;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLBaseFontElement: {
@@ -5159,7 +4523,7 @@ interface HTMLBodyElementEventMap extends HTMLElementEventMap, WindowEventHandle
     "scroll": UIEvent;
 }
 
-interface HTMLBodyElement extends HTMLElement, WindowEventHandlers {
+interface HTMLBodyElement extends EventTarget<HTMLBodyElement, HTMLBodyElementEventType>, HTMLElement, WindowEventHandlers {
     /** @deprecated */
     aLink: string;
     /** @deprecated */
@@ -5171,16 +4535,11 @@ interface HTMLBodyElement extends HTMLElement, WindowEventHandlers {
     link: string;
     /** @deprecated */
     noWrap: boolean;
-    onorientationchange: ((this: HTMLBodyElement, ev: Event) => any) | null;
-    onresize: ((this: HTMLBodyElement, ev: UIEvent) => any) | null;
     /** @deprecated */
     text: string;
     /** @deprecated */
     vLink: string;
-    addEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLBodyElement: {
@@ -5252,10 +4611,7 @@ interface HTMLButtonElement extends HTMLElement {
      * @param error Sets a custom error message that is displayed when a form is submitted.
      */
     setCustomValidity(error: string): void;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLButtonElement: {
@@ -5276,9 +4632,7 @@ interface HTMLCanvasElement extends HTMLElement {
      * Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.
      * @param contextId The identifier (ID) of the type of canvas to create. Internet Explorer 9 and Internet Explorer 10 support only a 2-D context using canvas.getContext("2d"); IE11 Preview also supports 3-D or WebGL context using canvas.getContext("experimental-webgl");
      */
-    getContext(contextId: "2d", contextAttributes?: Canvas2DContextAttributes): CanvasRenderingContext2D | null;
-    getContext(contextId: "webgl" | "experimental-webgl", contextAttributes?: WebGLContextAttributes): WebGLRenderingContext | null;
-    getContext(contextId: string, contextAttributes?: {}): CanvasRenderingContext2D | WebGLRenderingContext | null;
+    getContext(contextId: "2d" | "webgl" | "experimental-webgl", contextAttributes?: Canvas2DContextAttributes | WebGLContextAttributes): CanvasRenderingContext2D | WebGLRenderingContext | null;
     /**
      * Returns a blob object encoded as a Portable Network Graphics (PNG) format from a canvas image or drawing.
      */
@@ -5289,10 +4643,7 @@ interface HTMLCanvasElement extends HTMLElement {
      * @param type The standard MIME type for the image format to return. If you do not specify this parameter, the default value is a PNG format image.
      */
     toDataURL(type?: string, ...args: any[]): string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLCanvasElement: {
@@ -5333,10 +4684,7 @@ interface HTMLCollectionOf<T extends Element> extends HTMLCollectionBase {
 interface HTMLDListElement extends HTMLElement {
     /** @deprecated */
     compact: boolean;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLDListElement: {
@@ -5346,10 +4694,7 @@ declare var HTMLDListElement: {
 
 interface HTMLDataElement extends HTMLElement {
     value: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLDataElement: {
@@ -5359,10 +4704,7 @@ declare var HTMLDataElement: {
 
 interface HTMLDataListElement extends HTMLElement {
     readonly options: HTMLCollectionOf<HTMLOptionElement>;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLDataListElement: {
@@ -5372,10 +4714,7 @@ declare var HTMLDataListElement: {
 
 interface HTMLDetailsElement extends HTMLElement {
     open: boolean;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLDetailsElement: {
@@ -5389,10 +4728,7 @@ interface HTMLDialogElement extends HTMLElement {
     close(returnValue?: string): void;
     show(): void;
     showModal(): void;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLDialogElement: {
@@ -5402,10 +4738,7 @@ declare var HTMLDialogElement: {
 
 interface HTMLDirectoryElement extends HTMLElement {
     compact: boolean;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLDirectoryElement: {
@@ -5423,10 +4756,7 @@ interface HTMLDivElement extends HTMLElement {
      * Sets or retrieves whether the browser automatically performs wordwrap.
      */
     noWrap: boolean;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLDivElement: {
@@ -5434,11 +4764,8 @@ declare var HTMLDivElement: {
     new(): HTMLDivElement;
 };
 
-interface HTMLDocument extends Document {
-    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface HTMLDocument extends EventTarget<HTMLDocument, DocumentEventType>, Document {
+
 }
 
 declare var HTMLDocument: {
@@ -5516,7 +4843,7 @@ interface HTMLElementEventMap extends ElementEventMap {
     "waiting": Event;
 }
 
-interface HTMLElement extends Element, ElementCSSInlineStyle {
+interface HTMLElement extends EventTarget<HTMLElement, HTMLElementEventType>, Element, ElementCSSInlineStyle {
     accessKey: string;
     contentEditable: string;
     readonly dataset: DOMStringMap;
@@ -5532,87 +4859,17 @@ interface HTMLElement extends Element, ElementCSSInlineStyle {
     readonly offsetParent: Element;
     readonly offsetTop: number;
     readonly offsetWidth: number;
-    onabort: ((this: HTMLElement, ev: UIEvent) => any) | null;
-    onactivate: ((this: HTMLElement, ev: Event) => any) | null;
-    onbeforeactivate: ((this: HTMLElement, ev: Event) => any) | null;
-    onbeforecopy: ((this: HTMLElement, ev: Event) => any) | null;
-    onbeforecut: ((this: HTMLElement, ev: Event) => any) | null;
-    onbeforedeactivate: ((this: HTMLElement, ev: Event) => any) | null;
-    onbeforepaste: ((this: HTMLElement, ev: Event) => any) | null;
-    onblur: ((this: HTMLElement, ev: FocusEvent) => any) | null;
-    oncanplay: ((this: HTMLElement, ev: Event) => any) | null;
-    oncanplaythrough: ((this: HTMLElement, ev: Event) => any) | null;
-    onchange: ((this: HTMLElement, ev: Event) => any) | null;
-    onclick: ((this: HTMLElement, ev: MouseEvent) => any) | null;
-    oncontextmenu: ((this: HTMLElement, ev: PointerEvent) => any) | null;
-    oncopy: ((this: HTMLElement, ev: ClipboardEvent) => any) | null;
-    oncuechange: ((this: HTMLElement, ev: Event) => any) | null;
-    oncut: ((this: HTMLElement, ev: ClipboardEvent) => any) | null;
-    ondblclick: ((this: HTMLElement, ev: MouseEvent) => any) | null;
-    ondeactivate: ((this: HTMLElement, ev: Event) => any) | null;
-    ondrag: ((this: HTMLElement, ev: DragEvent) => any) | null;
-    ondragend: ((this: HTMLElement, ev: DragEvent) => any) | null;
-    ondragenter: ((this: HTMLElement, ev: DragEvent) => any) | null;
-    ondragleave: ((this: HTMLElement, ev: DragEvent) => any) | null;
-    ondragover: ((this: HTMLElement, ev: DragEvent) => any) | null;
-    ondragstart: ((this: HTMLElement, ev: DragEvent) => any) | null;
-    ondrop: ((this: HTMLElement, ev: DragEvent) => any) | null;
-    ondurationchange: ((this: HTMLElement, ev: Event) => any) | null;
-    onemptied: ((this: HTMLElement, ev: Event) => any) | null;
-    onended: ((this: HTMLElement, ev: Event) => any) | null;
-    onerror: ((this: HTMLElement, ev: ErrorEvent) => any) | null;
-    onfocus: ((this: HTMLElement, ev: FocusEvent) => any) | null;
-    oninput: ((this: HTMLElement, ev: Event) => any) | null;
-    oninvalid: ((this: HTMLElement, ev: Event) => any) | null;
-    onkeydown: ((this: HTMLElement, ev: KeyboardEvent) => any) | null;
-    onkeypress: ((this: HTMLElement, ev: KeyboardEvent) => any) | null;
-    onkeyup: ((this: HTMLElement, ev: KeyboardEvent) => any) | null;
-    onload: ((this: HTMLElement, ev: Event) => any) | null;
-    onloadeddata: ((this: HTMLElement, ev: Event) => any) | null;
-    onloadedmetadata: ((this: HTMLElement, ev: Event) => any) | null;
-    onloadstart: ((this: HTMLElement, ev: Event) => any) | null;
-    onmousedown: ((this: HTMLElement, ev: MouseEvent) => any) | null;
-    onmouseenter: ((this: HTMLElement, ev: MouseEvent) => any) | null;
-    onmouseleave: ((this: HTMLElement, ev: MouseEvent) => any) | null;
-    onmousemove: ((this: HTMLElement, ev: MouseEvent) => any) | null;
-    onmouseout: ((this: HTMLElement, ev: MouseEvent) => any) | null;
-    onmouseover: ((this: HTMLElement, ev: MouseEvent) => any) | null;
-    onmouseup: ((this: HTMLElement, ev: MouseEvent) => any) | null;
-    onmousewheel: ((this: HTMLElement, ev: WheelEvent) => any) | null;
-    onmscontentzoom: ((this: HTMLElement, ev: Event) => any) | null;
-    onmsmanipulationstatechanged: ((this: HTMLElement, ev: Event) => any) | null;
-    onpaste: ((this: HTMLElement, ev: ClipboardEvent) => any) | null;
-    onpause: ((this: HTMLElement, ev: Event) => any) | null;
-    onplay: ((this: HTMLElement, ev: Event) => any) | null;
-    onplaying: ((this: HTMLElement, ev: Event) => any) | null;
-    onprogress: ((this: HTMLElement, ev: ProgressEvent) => any) | null;
-    onratechange: ((this: HTMLElement, ev: Event) => any) | null;
-    onreset: ((this: HTMLElement, ev: Event) => any) | null;
-    onscroll: ((this: HTMLElement, ev: UIEvent) => any) | null;
-    onseeked: ((this: HTMLElement, ev: Event) => any) | null;
-    onseeking: ((this: HTMLElement, ev: Event) => any) | null;
-    onselect: ((this: HTMLElement, ev: UIEvent) => any) | null;
-    onselectstart: ((this: HTMLElement, ev: Event) => any) | null;
-    onstalled: ((this: HTMLElement, ev: Event) => any) | null;
-    onsubmit: ((this: HTMLElement, ev: Event) => any) | null;
-    onsuspend: ((this: HTMLElement, ev: Event) => any) | null;
-    ontimeupdate: ((this: HTMLElement, ev: Event) => any) | null;
-    onvolumechange: ((this: HTMLElement, ev: Event) => any) | null;
-    onwaiting: ((this: HTMLElement, ev: Event) => any) | null;
     outerText: string;
     spellcheck: boolean;
     tabIndex: number;
     title: string;
-    animate(keyframes: AnimationKeyFrame | AnimationKeyFrame[], options: number | AnimationOptions): Animation;
+    animate(keyframes: AnimationKeyFrame[], options: number | AnimationOptions): Animation;
     blur(): void;
     click(): void;
     dragDrop(): boolean;
     focus(): void;
     msGetInputContext(): MSInputMethodContext;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLElement: {
@@ -5668,10 +4925,7 @@ interface HTMLEmbedElement extends HTMLElement, GetSVGDocument {
      * Sets or retrieves the width of the object.
      */
     width: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLEmbedElement: {
@@ -5711,10 +4965,7 @@ interface HTMLFieldSetElement extends HTMLElement {
      * @param error Sets a custom error message that is displayed when a form is submitted.
      */
     setCustomValidity(error: string): void;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLFieldSetElement: {
@@ -5722,16 +4973,13 @@ declare var HTMLFieldSetElement: {
     new(): HTMLFieldSetElement;
 };
 
-interface HTMLFontElement extends HTMLElement, DOML2DeprecatedColorProperty, DOML2DeprecatedSizeProperty {
+interface HTMLFontElement extends HTMLElement {
     /**
      * Sets or retrieves the current typeface family.
      */
     /** @deprecated */
     face: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLFontElement: {
@@ -5816,10 +5064,8 @@ interface HTMLFormElement extends HTMLElement {
      * Fires when a FORM is about to be submitted.
      */
     submit(): void;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
+
     [name: string]: any;
 }
 
@@ -5832,7 +5078,7 @@ interface HTMLFrameElementEventMap extends HTMLElementEventMap {
     "load": Event;
 }
 
-interface HTMLFrameElement extends HTMLElement, GetSVGDocument {
+interface HTMLFrameElement extends EventTarget<HTMLFrameElement, HTMLFrameElementEventType>, HTMLElement, GetSVGDocument {
     /**
      * Specifies the properties of a border drawn around an object.
      */
@@ -5903,10 +5149,7 @@ interface HTMLFrameElement extends HTMLElement, GetSVGDocument {
      * Sets or retrieves the width of the object.
      */
     width: string | number;
-    addEventListener<K extends keyof HTMLFrameElementEventMap>(type: K, listener: (this: HTMLFrameElement, ev: HTMLFrameElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLFrameElementEventMap>(type: K, listener: (this: HTMLFrameElement, ev: HTMLFrameElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLFrameElement: {
@@ -5924,24 +5167,19 @@ interface HTMLFrameSetElementEventMap extends HTMLElementEventMap, WindowEventHa
     "scroll": UIEvent;
 }
 
-interface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {
+interface HTMLFrameSetElement extends EventTarget<HTMLFrameSetElement, HTMLFrameSetElementEventType>, HTMLElement, WindowEventHandlers {
     /**
      * Sets or retrieves the frame widths of the object.
      */
     /** @deprecated */
     cols: string;
     name: string;
-    onorientationchange: ((this: HTMLFrameSetElement, ev: Event) => any) | null;
-    onresize: ((this: HTMLFrameSetElement, ev: UIEvent) => any) | null;
     /**
      * Sets or retrieves the frame heights of the object.
      */
     /** @deprecated */
     rows: string;
-    addEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLFrameSetElement: {
@@ -5949,7 +5187,7 @@ declare var HTMLFrameSetElement: {
     new(): HTMLFrameSetElement;
 };
 
-interface HTMLHRElement extends HTMLElement, DOML2DeprecatedColorProperty, DOML2DeprecatedSizeProperty {
+interface HTMLHRElement extends HTMLElement {
     /**
      * Sets or retrieves how the object is aligned with adjacent text.
      */
@@ -5965,10 +5203,7 @@ interface HTMLHRElement extends HTMLElement, DOML2DeprecatedColorProperty, DOML2
      */
     /** @deprecated */
     width: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLHRElement: {
@@ -5979,10 +5214,7 @@ declare var HTMLHRElement: {
 interface HTMLHeadElement extends HTMLElement {
     /** @deprecated */
     profile: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLHeadElement: {
@@ -5996,10 +5228,7 @@ interface HTMLHeadingElement extends HTMLElement {
      */
     /** @deprecated */
     align: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLHeadingElement: {
@@ -6013,10 +5242,7 @@ interface HTMLHtmlElement extends HTMLElement {
      */
     /** @deprecated */
     version: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLHtmlElement: {
@@ -6041,7 +5267,7 @@ interface HTMLIFrameElementEventMap extends HTMLElementEventMap {
     "load": Event;
 }
 
-interface HTMLIFrameElement extends HTMLElement, GetSVGDocument {
+interface HTMLIFrameElement extends EventTarget<HTMLIFrameElement, HTMLIFrameElementEventType>, HTMLElement, GetSVGDocument {
     /**
      * Sets or retrieves how the object is aligned with adjacent text.
      */
@@ -6103,10 +5329,7 @@ interface HTMLIFrameElement extends HTMLElement, GetSVGDocument {
      * Sets or retrieves the width of the object.
      */
     width: string;
-    addEventListener<K extends keyof HTMLIFrameElementEventMap>(type: K, listener: (this: HTMLIFrameElement, ev: HTMLIFrameElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLIFrameElementEventMap>(type: K, listener: (this: HTMLIFrameElement, ev: HTMLIFrameElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLIFrameElement: {
@@ -6203,10 +5426,7 @@ interface HTMLImageElement extends HTMLElement {
     readonly x: number;
     readonly y: number;
     msGetAsCastingSource(): any;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLImageElement: {
@@ -6403,10 +5623,7 @@ interface HTMLInputElement extends HTMLElement {
      * @param n Value to increment the value by.
      */
     stepUp(n?: number): void;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLInputElement: {
@@ -6421,10 +5638,7 @@ interface HTMLLIElement extends HTMLElement {
      * Sets or retrieves the value of a list item.
      */
     value: number;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLLIElement: {
@@ -6442,10 +5656,7 @@ interface HTMLLabelElement extends HTMLElement {
      * Sets or retrieves the object to which the given label object is assigned.
      */
     htmlFor: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLLabelElement: {
@@ -6463,10 +5674,7 @@ interface HTMLLegendElement extends HTMLElement {
      * Retrieves a reference to the form that the object is embedded in.
      */
     readonly form: HTMLFormElement | null;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLLegendElement: {
@@ -6515,10 +5723,7 @@ interface HTMLLinkElement extends HTMLElement, LinkStyle {
      * Sets or retrieves the MIME type of the object.
      */
     type: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLLinkElement: {
@@ -6527,10 +5732,7 @@ declare var HTMLLinkElement: {
 };
 
 interface HTMLMainElement extends HTMLElement {
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMainElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMainElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLMainElement: {
@@ -6547,10 +5749,7 @@ interface HTMLMapElement extends HTMLElement {
      * Sets or retrieves the name of the object.
      */
     name: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLMapElement: {
@@ -6564,7 +5763,7 @@ interface HTMLMarqueeElementEventMap extends HTMLElementEventMap {
     "start": Event;
 }
 
-interface HTMLMarqueeElement extends HTMLElement {
+interface HTMLMarqueeElement extends EventTarget<HTMLMarqueeElement, HTMLMarqueeElementEventType>, HTMLElement {
     /** @deprecated */
     behavior: string;
     /** @deprecated */
@@ -6578,12 +5777,6 @@ interface HTMLMarqueeElement extends HTMLElement {
     /** @deprecated */
     loop: number;
     /** @deprecated */
-    onbounce: ((this: HTMLMarqueeElement, ev: Event) => any) | null;
-    /** @deprecated */
-    onfinish: ((this: HTMLMarqueeElement, ev: Event) => any) | null;
-    /** @deprecated */
-    onstart: ((this: HTMLMarqueeElement, ev: Event) => any) | null;
-    /** @deprecated */
     scrollAmount: number;
     /** @deprecated */
     scrollDelay: number;
@@ -6597,10 +5790,7 @@ interface HTMLMarqueeElement extends HTMLElement {
     start(): void;
     /** @deprecated */
     stop(): void;
-    addEventListener<K extends keyof HTMLMarqueeElementEventMap>(type: K, listener: (this: HTMLMarqueeElement, ev: HTMLMarqueeElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLMarqueeElementEventMap>(type: K, listener: (this: HTMLMarqueeElement, ev: HTMLMarqueeElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLMarqueeElement: {
@@ -6613,7 +5803,7 @@ interface HTMLMediaElementEventMap extends HTMLElementEventMap {
     "msneedkey": Event;
 }
 
-interface HTMLMediaElement extends HTMLElement {
+interface HTMLMediaElement extends EventTarget<HTMLMediaElement, HTMLMediaElementEventType>, HTMLElement {
     /**
      * Returns an AudioTrackList object with the audio tracks for a given video element.
      */
@@ -6703,9 +5893,6 @@ interface HTMLMediaElement extends HTMLElement {
      * Gets the current network activity for the element.
      */
     readonly networkState: number;
-    onencrypted: ((this: HTMLMediaElement, ev: MediaEncryptedEvent) => any) | null;
-    /** @deprecated */
-    onmsneedkey: ((this: HTMLMediaElement, ev: Event) => any) | null;
     /**
      * Gets a flag that specifies whether playback is paused.
      */
@@ -6775,19 +5962,6 @@ interface HTMLMediaElement extends HTMLElement {
      */
     play(): Promise<void>;
     setMediaKeys(mediaKeys: MediaKeys | null): Promise<void>;
-    readonly HAVE_CURRENT_DATA: number;
-    readonly HAVE_ENOUGH_DATA: number;
-    readonly HAVE_FUTURE_DATA: number;
-    readonly HAVE_METADATA: number;
-    readonly HAVE_NOTHING: number;
-    readonly NETWORK_EMPTY: number;
-    readonly NETWORK_IDLE: number;
-    readonly NETWORK_LOADING: number;
-    readonly NETWORK_NO_SOURCE: number;
-    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
 }
 
 declare var HTMLMediaElement: {
@@ -6808,10 +5982,7 @@ interface HTMLMenuElement extends HTMLElement {
     /** @deprecated */
     compact: boolean;
     type: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLMenuElement: {
@@ -6847,10 +6018,7 @@ interface HTMLMetaElement extends HTMLElement {
      */
     /** @deprecated */
     url: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLMetaElement: {
@@ -6865,10 +6033,7 @@ interface HTMLMeterElement extends HTMLElement {
     min: number;
     optimum: number;
     value: number;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLMeterElement: {
@@ -6885,10 +6050,7 @@ interface HTMLModElement extends HTMLElement {
      * Sets or retrieves the date and time of a modification to the object.
      */
     dateTime: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLModElement: {
@@ -6904,10 +6066,7 @@ interface HTMLOListElement extends HTMLElement {
      */
     start: number;
     type: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLOListElement: {
@@ -7026,10 +6185,7 @@ interface HTMLObjectElement extends HTMLElement, GetSVGDocument {
      * @param error Sets a custom error message that is displayed when a form is submitted.
      */
     setCustomValidity(error: string): void;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLObjectElement: {
@@ -7047,10 +6203,7 @@ interface HTMLOptGroupElement extends HTMLElement {
      * Sets or retrieves a value that you can use to implement your own label functionality for the object.
      */
     label: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLOptGroupElement: {
@@ -7088,10 +6241,7 @@ interface HTMLOptionElement extends HTMLElement {
      * Sets or retrieves the value which is returned to the server when the form control is submitted.
      */
     value: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLOptionElement: {
@@ -7124,10 +6274,7 @@ interface HTMLOutputElement extends HTMLElement {
     checkValidity(): boolean;
     reportValidity(): boolean;
     setCustomValidity(error: string): void;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLOutputElement: {
@@ -7142,10 +6289,7 @@ interface HTMLParagraphElement extends HTMLElement {
     /** @deprecated */
     align: string;
     clear: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLParagraphElement: {
@@ -7172,10 +6316,7 @@ interface HTMLParamElement extends HTMLElement {
      */
     /** @deprecated */
     valueType: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLParamElement: {
@@ -7184,10 +6325,7 @@ declare var HTMLParamElement: {
 };
 
 interface HTMLPictureElement extends HTMLElement {
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLPictureElement: {
@@ -7201,10 +6339,7 @@ interface HTMLPreElement extends HTMLElement {
      */
     /** @deprecated */
     width: number;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLPreElement: {
@@ -7229,10 +6364,7 @@ interface HTMLProgressElement extends HTMLElement {
      * Sets or gets the current value of a progress element. The value must be a non-negative number between 0 and the max value.
      */
     value: number;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLProgressElement: {
@@ -7245,10 +6377,7 @@ interface HTMLQuoteElement extends HTMLElement {
      * Sets or retrieves reference information about the object.
      */
     cite: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLQuoteElement: {
@@ -7291,10 +6420,7 @@ interface HTMLScriptElement extends HTMLElement {
      * Sets or retrieves the MIME type for the associated scripting engine.
      */
     type: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLScriptElement: {
@@ -7389,10 +6515,8 @@ interface HTMLSelectElement extends HTMLElement {
      * @param error Sets a custom error message that is displayed when a form is submitted.
      */
     setCustomValidity(error: string): void;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
+
     [name: string]: any;
 }
 
@@ -7404,10 +6528,7 @@ declare var HTMLSelectElement: {
 interface HTMLSlotElement extends HTMLElement {
     name: string;
     assignedNodes(options?: AssignedNodesOptions): Node[];
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 interface HTMLSourceElement extends HTMLElement {
@@ -7427,10 +6548,7 @@ interface HTMLSourceElement extends HTMLElement {
      * Gets or sets the MIME type of a media resource.
      */
     type: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLSourceElement: {
@@ -7439,10 +6557,7 @@ declare var HTMLSourceElement: {
 };
 
 interface HTMLSpanElement extends HTMLElement {
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLSpanElement: {
@@ -7461,10 +6576,7 @@ interface HTMLStyleElement extends HTMLElement, LinkStyle {
      * Retrieves the CSS language in which the style sheet is written.
      */
     type: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLStyleElement: {
@@ -7473,10 +6585,7 @@ declare var HTMLStyleElement: {
 };
 
 interface HTMLSummaryElement extends HTMLElement {
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSummaryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSummaryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLSummaryElement: {
@@ -7490,10 +6599,7 @@ interface HTMLTableCaptionElement extends HTMLElement {
      */
     /** @deprecated */
     align: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTableCaptionElement: {
@@ -7559,10 +6665,7 @@ interface HTMLTableCellElement extends HTMLElement {
      */
     /** @deprecated */
     width: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTableCellElement: {
@@ -7591,10 +6694,7 @@ interface HTMLTableColElement extends HTMLElement {
      */
     /** @deprecated */
     width: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTableColElement: {
@@ -7603,10 +6703,7 @@ declare var HTMLTableColElement: {
 };
 
 interface HTMLTableDataCellElement extends HTMLTableCellElement {
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTableDataCellElement: {
@@ -7715,10 +6812,7 @@ interface HTMLTableElement extends HTMLElement {
      * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.
      */
     insertRow(index?: number): HTMLTableRowElement;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTableElement: {
@@ -7728,10 +6822,7 @@ declare var HTMLTableElement: {
 
 interface HTMLTableHeaderCellElement extends HTMLTableCellElement {
     scope: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTableHeaderCellElement: {
@@ -7775,10 +6866,7 @@ interface HTMLTableRowElement extends HTMLElement {
      * @param index Number that specifies where to insert the cell in the tr. The default value is -1, which appends the new cell to the end of the cells collection.
      */
     insertCell(index?: number): HTMLTableDataCellElement;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTableRowElement: {
@@ -7812,10 +6900,7 @@ interface HTMLTableSectionElement extends HTMLElement {
      * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.
      */
     insertRow(index?: number): HTMLTableRowElement;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTableSectionElement: {
@@ -7825,10 +6910,7 @@ declare var HTMLTableSectionElement: {
 
 interface HTMLTemplateElement extends HTMLElement {
     readonly content: DocumentFragment;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTemplateElement: {
@@ -7931,10 +7013,7 @@ interface HTMLTextAreaElement extends HTMLElement {
      * @param direction The direction in which the selection is performed.
      */
     setSelectionRange(start: number, end: number, direction?: "forward" | "backward" | "none"): void;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTextAreaElement: {
@@ -7944,10 +7023,7 @@ declare var HTMLTextAreaElement: {
 
 interface HTMLTimeElement extends HTMLElement {
     dateTime: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTimeElement: {
@@ -7960,10 +7036,7 @@ interface HTMLTitleElement extends HTMLElement {
      * Retrieves or sets the text of the object as a string.
      */
     text: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTitleElement: {
@@ -7979,14 +7052,7 @@ interface HTMLTrackElement extends HTMLElement {
     src: string;
     srclang: string;
     readonly track: TextTrack;
-    readonly ERROR: number;
-    readonly LOADED: number;
-    readonly LOADING: number;
-    readonly NONE: number;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLTrackElement: {
@@ -8003,10 +7069,7 @@ interface HTMLUListElement extends HTMLElement {
     compact: boolean;
     /** @deprecated */
     type: string;
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLUListElement: {
@@ -8015,10 +7078,7 @@ declare var HTMLUListElement: {
 };
 
 interface HTMLUnknownElement extends HTMLElement {
-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLUnknownElement: {
@@ -8032,7 +7092,7 @@ interface HTMLVideoElementEventMap extends HTMLMediaElementEventMap {
     "MSVideoOptimalLayoutChanged": Event;
 }
 
-interface HTMLVideoElement extends HTMLMediaElement {
+interface HTMLVideoElement extends EventTarget<HTMLVideoElement, HTMLVideoElementEventType>, HTMLMediaElement {
     /**
      * Gets or sets the height of the video element.
      */
@@ -8043,9 +7103,6 @@ interface HTMLVideoElement extends HTMLMediaElement {
     msStereo3DPackingMode: string;
     msStereo3DRenderMode: string;
     msZoom: boolean;
-    onMSVideoFormatChanged: ((this: HTMLVideoElement, ev: Event) => any) | null;
-    onMSVideoFrameStepCompleted: ((this: HTMLVideoElement, ev: Event) => any) | null;
-    onMSVideoOptimalLayoutChanged: ((this: HTMLVideoElement, ev: Event) => any) | null;
     /**
      * Gets or sets a URL of an image to display, for example, like a movie poster. This can be a still frame from the video, or another image if no video data is available.
      */
@@ -8072,10 +7129,7 @@ interface HTMLVideoElement extends HTMLMediaElement {
     webkitEnterFullscreen(): void;
     webkitExitFullScreen(): void;
     webkitExitFullscreen(): void;
-    addEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var HTMLVideoElement: {
@@ -8133,27 +7187,23 @@ declare var History: {
 };
 
 interface HkdfCtrParams extends Algorithm {
-    context: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer;
-    hash: string | Algorithm;
-    label: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer;
+    context: BufferSource;
+    hash: AlgorithmIdentifier;
+    label: BufferSource;
 }
 
-interface IDBArrayKey extends Array<number | string | Date | IDBArrayKey> {
+interface IDBArrayKey extends Array<IDBValidKey> {
 }
 
 interface IDBCursor {
     readonly direction: IDBCursorDirection;
-    readonly key: IDBKeyRange | number | string | Date | IDBArrayKey;
+    readonly key: IDBKeyRange | IDBValidKey;
     readonly primaryKey: any;
     readonly source: IDBObjectStore | IDBIndex;
     advance(count: number): void;
-    continue(key?: IDBKeyRange | number | string | Date | IDBArrayKey): void;
+    continue(key?: IDBKeyRange | IDBValidKey): void;
     delete(): IDBRequest;
     update(value: any): IDBRequest;
-    readonly NEXT: string;
-    readonly NEXT_NO_DUPLICATE: string;
-    readonly PREV: string;
-    readonly PREV_NO_DUPLICATE: string;
 }
 
 declare var IDBCursor: {
@@ -8179,21 +7229,15 @@ interface IDBDatabaseEventMap {
     "error": Event;
 }
 
-interface IDBDatabase extends EventTarget {
+interface IDBDatabase extends EventTarget<IDBDatabase, IDBDatabaseEventType> {
     readonly name: string;
     readonly objectStoreNames: DOMStringList;
-    onabort: ((this: IDBDatabase, ev: Event) => any) | null;
-    onerror: ((this: IDBDatabase, ev: Event) => any) | null;
-    onversionchange: ((this: IDBDatabase, ev: Event) => any) | null;
     readonly version: number;
     close(): void;
     createObjectStore(name: string, optionalParameters?: IDBObjectStoreParameters): IDBObjectStore;
     deleteObjectStore(name: string): void;
     transaction(storeNames: string | string[], mode?: IDBTransactionMode): IDBTransaction;
-    addEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var IDBDatabase: {
@@ -8201,10 +7245,6 @@ declare var IDBDatabase: {
     new(): IDBDatabase;
 };
 
-interface IDBEnvironment {
-    readonly indexedDB: IDBFactory;
-}
-
 interface IDBFactory {
     cmp(first: any, second: any): number;
     deleteDatabase(name: string): IDBOpenDBRequest;
@@ -8222,11 +7262,11 @@ interface IDBIndex {
     readonly name: string;
     readonly objectStore: IDBObjectStore;
     readonly unique: boolean;
-    count(key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;
-    get(key: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;
-    getKey(key: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;
-    openCursor(range?: IDBKeyRange | number | string | Date | IDBArrayKey, direction?: IDBCursorDirection): IDBRequest;
-    openKeyCursor(range?: IDBKeyRange | number | string | Date | IDBArrayKey, direction?: IDBCursorDirection): IDBRequest;
+    count(key?: IDBKeyRange | IDBValidKey): IDBRequest;
+    get(key: IDBKeyRange | IDBValidKey): IDBRequest;
+    getKey(key: IDBKeyRange | IDBValidKey): IDBRequest;
+    openCursor(range?: IDBKeyRange | IDBValidKey, direction?: IDBCursorDirection): IDBRequest;
+    openKeyCursor(range?: IDBKeyRange | IDBValidKey, direction?: IDBCursorDirection): IDBRequest;
 }
 
 declare var IDBIndex: {
@@ -8256,16 +7296,16 @@ interface IDBObjectStore {
     readonly keyPath: string | string[] | null;
     readonly name: string;
     readonly transaction: IDBTransaction;
-    add(value: any, key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;
+    add(value: any, key?: IDBKeyRange | IDBValidKey): IDBRequest;
     clear(): IDBRequest;
-    count(key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;
+    count(key?: IDBKeyRange | IDBValidKey): IDBRequest;
     createIndex(name: string, keyPath: string | string[], optionalParameters?: IDBIndexParameters): IDBIndex;
-    delete(key: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;
+    delete(key: IDBKeyRange | IDBValidKey): IDBRequest;
     deleteIndex(indexName: string): void;
     get(key: any): IDBRequest;
     index(name: string): IDBIndex;
-    openCursor(range?: IDBKeyRange | number | string | Date | IDBArrayKey, direction?: IDBCursorDirection): IDBRequest;
-    put(value: any, key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;
+    openCursor(range?: IDBKeyRange | IDBValidKey, direction?: IDBCursorDirection): IDBRequest;
+    put(value: any, key?: IDBKeyRange | IDBValidKey): IDBRequest;
 }
 
 declare var IDBObjectStore: {
@@ -8278,13 +7318,8 @@ interface IDBOpenDBRequestEventMap extends IDBRequestEventMap {
     "upgradeneeded": IDBVersionChangeEvent;
 }
 
-interface IDBOpenDBRequest extends IDBRequest {
-    onblocked: ((this: IDBOpenDBRequest, ev: Event) => any) | null;
-    onupgradeneeded: ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any) | null;
-    addEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface IDBOpenDBRequest extends EventTarget<IDBOpenDBRequest, IDBOpenDBRequestEventType>, IDBRequest {
+
 }
 
 declare var IDBOpenDBRequest: {
@@ -8297,18 +7332,13 @@ interface IDBRequestEventMap {
     "success": Event;
 }
 
-interface IDBRequest extends EventTarget {
+interface IDBRequest extends EventTarget<IDBRequest, IDBRequestEventType> {
     readonly error: DOMException;
-    onerror: ((this: IDBRequest, ev: Event) => any) | null;
-    onsuccess: ((this: IDBRequest, ev: Event) => any) | null;
     readonly readyState: IDBRequestReadyState;
     readonly result: any;
     readonly source: IDBObjectStore | IDBIndex | IDBCursor;
     readonly transaction: IDBTransaction;
-    addEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest, ev: IDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest, ev: IDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var IDBRequest: {
@@ -8322,22 +7352,13 @@ interface IDBTransactionEventMap {
     "error": Event;
 }
 
-interface IDBTransaction extends EventTarget {
+interface IDBTransaction extends EventTarget<IDBTransaction, IDBTransactionEventType> {
     readonly db: IDBDatabase;
     readonly error: DOMException;
     readonly mode: IDBTransactionMode;
-    onabort: ((this: IDBTransaction, ev: Event) => any) | null;
-    oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;
-    onerror: ((this: IDBTransaction, ev: Event) => any) | null;
     abort(): void;
     objectStore(name: string): IDBObjectStore;
-    readonly READ_ONLY: string;
-    readonly READ_WRITE: string;
-    readonly VERSION_CHANGE: string;
-    addEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var IDBTransaction: {
@@ -8444,12 +7465,6 @@ interface KeyboardEvent extends UIEvent {
     getModifierState(keyArg: string): boolean;
     /** @deprecated */
     initKeyboardEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, keyArg: string, locationArg: number, modifiersListArg: string, repeat: boolean, locale: string): void;
-    readonly DOM_KEY_LOCATION_JOYSTICK: number;
-    readonly DOM_KEY_LOCATION_LEFT: number;
-    readonly DOM_KEY_LOCATION_MOBILE: number;
-    readonly DOM_KEY_LOCATION_NUMPAD: number;
-    readonly DOM_KEY_LOCATION_RIGHT: number;
-    readonly DOM_KEY_LOCATION_STANDARD: number;
 }
 
 declare var KeyboardEvent: {
@@ -8463,7 +7478,7 @@ declare var KeyboardEvent: {
     readonly DOM_KEY_LOCATION_STANDARD: number;
 };
 
-interface LinkStyle {
+interface LinkStyle /*! @ooml-interface */ {
     readonly sheet: StyleSheet | null;
 }
 
@@ -8549,7 +7564,7 @@ declare var MSDSHEvent: {
 };
 
 interface MSFIDOCredentialAssertion extends MSAssertion {
-    readonly algorithm: string | Algorithm;
+    readonly algorithm: AlgorithmIdentifier;
     readonly attestation: any;
     readonly publicKey: string;
     readonly transportHints: MSTransportType[];
@@ -8615,11 +7630,6 @@ interface MSGestureEvent extends UIEvent {
     readonly velocityX: number;
     readonly velocityY: number;
     initGestureEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, offsetXArg: number, offsetYArg: number, translationXArg: number, translationYArg: number, scaleArg: number, expansionArg: number, rotationArg: number, velocityXArg: number, velocityYArg: number, velocityExpansionArg: number, velocityAngularArg: number, hwTimestampArg: number): void;
-    readonly MSGESTURE_FLAG_BEGIN: number;
-    readonly MSGESTURE_FLAG_CANCEL: number;
-    readonly MSGESTURE_FLAG_END: number;
-    readonly MSGESTURE_FLAG_INERTIA: number;
-    readonly MSGESTURE_FLAG_NONE: number;
 }
 
 declare var MSGestureEvent: {
@@ -8648,21 +7658,15 @@ interface MSInputMethodContextEventMap {
     "MSCandidateWindowUpdate": Event;
 }
 
-interface MSInputMethodContext extends EventTarget {
+interface MSInputMethodContext extends EventTarget<MSInputMethodContext, MSInputMethodContextEventType> {
     readonly compositionEndOffset: number;
     readonly compositionStartOffset: number;
-    oncandidatewindowhide: ((this: MSInputMethodContext, ev: Event) => any) | null;
-    oncandidatewindowshow: ((this: MSInputMethodContext, ev: Event) => any) | null;
-    oncandidatewindowupdate: ((this: MSInputMethodContext, ev: Event) => any) | null;
     readonly target: HTMLElement;
     getCandidateWindowClientRect(): ClientRect;
     getCompositionAlternatives(): string[];
     hasComposition(): boolean;
     isCandidateWindowVisible(): boolean;
-    addEventListener<K extends keyof MSInputMethodContextEventMap>(type: K, listener: (this: MSInputMethodContext, ev: MSInputMethodContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof MSInputMethodContextEventMap>(type: K, listener: (this: MSInputMethodContext, ev: MSInputMethodContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var MSInputMethodContext: {
@@ -8673,12 +7677,6 @@ declare var MSInputMethodContext: {
 interface MSMediaKeyError {
     readonly code: number;
     readonly systemCode: number;
-    readonly MS_MEDIA_KEYERR_CLIENT: number;
-    readonly MS_MEDIA_KEYERR_DOMAIN: number;
-    readonly MS_MEDIA_KEYERR_HARDWARECHANGE: number;
-    readonly MS_MEDIA_KEYERR_OUTPUT: number;
-    readonly MS_MEDIA_KEYERR_SERVICE: number;
-    readonly MS_MEDIA_KEYERR_UNKNOWN: number;
 }
 
 declare var MSMediaKeyError: {
@@ -8788,14 +7786,8 @@ interface MSStreamReaderEventMap {
     "progress": ProgressEvent;
 }
 
-interface MSStreamReader extends EventTarget {
+interface MSStreamReader extends EventTarget<MSStreamReader, MSStreamReaderEventType> {
     readonly error: DOMError;
-    onabort: ((this: MSStreamReader, ev: UIEvent) => any) | null;
-    onerror: ((this: MSStreamReader, ev: ErrorEvent) => any) | null;
-    onload: ((this: MSStreamReader, ev: Event) => any) | null;
-    onloadend: ((this: MSStreamReader, ev: ProgressEvent) => any) | null;
-    onloadstart: ((this: MSStreamReader, ev: Event) => any) | null;
-    onprogress: ((this: MSStreamReader, ev: ProgressEvent) => any) | null;
     readonly readyState: number;
     readonly result: any;
     abort(): void;
@@ -8804,13 +7796,7 @@ interface MSStreamReader extends EventTarget {
     readAsBlob(stream: MSStream, size?: number): void;
     readAsDataURL(stream: MSStream, size?: number): void;
     readAsText(stream: MSStream, encoding?: string, size?: number): void;
-    readonly DONE: number;
-    readonly EMPTY: number;
-    readonly LOADING: number;
-    addEventListener<K extends keyof MSStreamReaderEventMap>(type: K, listener: (this: MSStreamReader, ev: MSStreamReaderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof MSStreamReaderEventMap>(type: K, listener: (this: MSStreamReader, ev: MSStreamReaderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var MSStreamReader: {
@@ -8837,15 +7823,11 @@ interface MediaDevicesEventMap {
     "devicechange": Event;
 }
 
-interface MediaDevices extends EventTarget {
-    ondevicechange: ((this: MediaDevices, ev: Event) => any) | null;
+interface MediaDevices extends EventTarget<MediaDevices, MediaDevicesEventType> {
     enumerateDevices(): Promise<MediaDeviceInfo[]>;
     getSupportedConstraints(): MediaTrackSupportedConstraints;
     getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream>;
-    addEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var MediaDevices: {
@@ -8875,11 +7857,6 @@ interface MediaError {
     readonly code: number;
     readonly message: string;
     readonly msExtendedCode: number;
-    readonly MEDIA_ERR_ABORTED: number;
-    readonly MEDIA_ERR_DECODE: number;
-    readonly MEDIA_ERR_NETWORK: number;
-    readonly MEDIA_ERR_SRC_NOT_SUPPORTED: number;
-    readonly MS_MEDIA_ERR_ENCRYPTED: number;
 }
 
 declare var MediaError: {
@@ -8908,10 +7885,10 @@ interface MediaKeySession extends EventTarget {
     readonly keyStatuses: MediaKeyStatusMap;
     readonly sessionId: string;
     close(): Promise<void>;
-    generateRequest(initDataType: string, initData: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): Promise<void>;
+    generateRequest(initDataType: string, initData: BufferSource | null): Promise<void>;
     load(sessionId: string): Promise<boolean>;
     remove(): Promise<void>;
-    update(response: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): Promise<void>;
+    update(response: BufferSource | null): Promise<void>;
 }
 
 declare var MediaKeySession: {
@@ -8922,8 +7899,8 @@ declare var MediaKeySession: {
 interface MediaKeyStatusMap {
     readonly size: number;
     forEach(callback: Function, thisArg?: any): void;
-    get(keyId: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): MediaKeyStatus;
-    has(keyId: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): boolean;
+    get(keyId: BufferSource | null): MediaKeyStatus;
+    has(keyId: BufferSource | null): boolean;
 }
 
 declare var MediaKeyStatusMap: {
@@ -8944,7 +7921,7 @@ declare var MediaKeySystemAccess: {
 
 interface MediaKeys {
     createSession(sessionType?: MediaKeySessionType): MediaKeySession;
-    setServerCertificate(serverCertificate: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): Promise<void>;
+    setServerCertificate(serverCertificate: BufferSource | null): Promise<void>;
 }
 
 declare var MediaKeys: {
@@ -9002,13 +7979,9 @@ interface MediaStreamEventMap {
     "removetrack": MediaStreamTrackEvent;
 }
 
-interface MediaStream extends EventTarget {
+interface MediaStream extends EventTarget<MediaStream, MediaStreamEventType> {
     readonly active: boolean;
     readonly id: string;
-    onactive: ((this: MediaStream, ev: Event) => any) | null;
-    onaddtrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;
-    oninactive: ((this: MediaStream, ev: Event) => any) | null;
-    onremovetrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;
     addTrack(track: MediaStreamTrack): void;
     clone(): MediaStream;
     getAudioTracks(): MediaStreamTrack[];
@@ -9017,10 +7990,7 @@ interface MediaStream extends EventTarget {
     getVideoTracks(): MediaStreamTrack[];
     removeTrack(track: MediaStreamTrack): void;
     stop(): void;
-    addEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var MediaStream: {
@@ -9074,16 +8044,12 @@ interface MediaStreamTrackEventMap {
     "unmute": Event;
 }
 
-interface MediaStreamTrack extends EventTarget {
+interface MediaStreamTrack extends EventTarget<MediaStreamTrack, MediaStreamTrackEventType> {
     enabled: boolean;
     readonly id: string;
     readonly kind: string;
     readonly label: string;
     readonly muted: boolean;
-    onended: ((this: MediaStreamTrack, ev: MediaStreamErrorEvent) => any) | null;
-    onmute: ((this: MediaStreamTrack, ev: Event) => any) | null;
-    onoverconstrained: ((this: MediaStreamTrack, ev: MediaStreamErrorEvent) => any) | null;
-    onunmute: ((this: MediaStreamTrack, ev: Event) => any) | null;
     readonly readonly: boolean;
     readonly readyState: MediaStreamTrackState;
     readonly remote: boolean;
@@ -9093,10 +8059,7 @@ interface MediaStreamTrack extends EventTarget {
     getConstraints(): MediaTrackConstraints;
     getSettings(): MediaTrackSettings;
     stop(): void;
-    addEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var MediaStreamTrack: {
@@ -9140,15 +8103,11 @@ interface MessagePortEventMap {
     "message": MessageEvent;
 }
 
-interface MessagePort extends EventTarget {
-    onmessage: ((this: MessagePort, ev: MessageEvent) => any) | null;
+interface MessagePort extends EventTarget<MessagePort, MessagePortEventType> {
     close(): void;
     postMessage(message?: any, transfer?: any[]): void;
     start(): void;
-    addEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var MessagePort: {
@@ -9224,9 +8183,6 @@ interface MutationEvent extends Event {
     readonly prevValue: string;
     readonly relatedNode: Node;
     initMutationEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, relatedNodeArg: Node, prevValueArg: string, newValueArg: string, attrNameArg: string, attrChangeArg: number): void;
-    readonly ADDITION: number;
-    readonly MODIFICATION: number;
-    readonly REMOVAL: number;
 }
 
 declare var MutationEvent: {
@@ -9312,7 +8268,7 @@ declare var Navigator: {
 };
 
 interface NavigatorBeacon {
-    sendBeacon(url: string, data?: Blob | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | FormData | string | null): boolean;
+    sendBeacon(url: string, data?: Blob | BufferSource | FormData | string | null): boolean;
 }
 
 interface NavigatorConcurrentHardware {
@@ -9352,7 +8308,7 @@ interface NavigatorUserMedia {
     getUserMedia(constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback): void;
 }
 
-interface Node extends EventTarget {
+interface Node extends EventTarget /*! @ooml-abstract */ {
     readonly baseURI: string | null;
     readonly childNodes: NodeListOf<Node>;
     readonly firstChild: Node | null;
@@ -9383,24 +8339,6 @@ interface Node extends EventTarget {
     normalize(): void;
     removeChild<T extends Node>(oldChild: T): T;
     replaceChild<T extends Node>(newChild: Node, oldChild: T): T;
-    readonly ATTRIBUTE_NODE: number;
-    readonly CDATA_SECTION_NODE: number;
-    readonly COMMENT_NODE: number;
-    readonly DOCUMENT_FRAGMENT_NODE: number;
-    readonly DOCUMENT_NODE: number;
-    readonly DOCUMENT_POSITION_CONTAINED_BY: number;
-    readonly DOCUMENT_POSITION_CONTAINS: number;
-    readonly DOCUMENT_POSITION_DISCONNECTED: number;
-    readonly DOCUMENT_POSITION_FOLLOWING: number;
-    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;
-    readonly DOCUMENT_POSITION_PRECEDING: number;
-    readonly DOCUMENT_TYPE_NODE: number;
-    readonly ELEMENT_NODE: number;
-    readonly ENTITY_NODE: number;
-    readonly ENTITY_REFERENCE_NODE: number;
-    readonly NOTATION_NODE: number;
-    readonly PROCESSING_INSTRUCTION_NODE: number;
-    readonly TEXT_NODE: number;
 }
 
 declare var Node: {
@@ -9426,11 +8364,7 @@ declare var Node: {
     readonly TEXT_NODE: number;
 };
 
-interface NodeFilter {
-    acceptNode(node: Node): number;
-}
-
-declare var NodeFilter: {
+interface NodeFilter /*! @ooml-static */ {
     readonly FILTER_ACCEPT: number;
     readonly FILTER_REJECT: number;
     readonly FILTER_SKIP: number;
@@ -9447,7 +8381,8 @@ declare var NodeFilter: {
     readonly SHOW_NOTATION: number;
     readonly SHOW_PROCESSING_INSTRUCTION: number;
     readonly SHOW_TEXT: number;
-};
+    acceptNode(node: Node): number;
+}
 
 interface NodeIterator {
     /** @deprecated */
@@ -9483,11 +8418,7 @@ interface NodeListOf<TNode extends Node> extends NodeList {
 }
 
 interface NodeSelector {
-    querySelector<K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K] | null;
-    querySelector<K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K] | null;
     querySelector<E extends Element = Element>(selectors: string): E | null;
-    querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>;
-    querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementTagNameMap[K]>;
     querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;
 }
 
@@ -9498,24 +8429,17 @@ interface NotificationEventMap {
     "show": Event;
 }
 
-interface Notification extends EventTarget {
+interface Notification extends EventTarget<Notification, NotificationEventType> {
     readonly body: string | null;
     readonly data: any;
     readonly dir: NotificationDirection;
     readonly icon: string | null;
     readonly lang: string | null;
-    onclick: ((this: Notification, ev: Event) => any) | null;
-    onclose: ((this: Notification, ev: Event) => any) | null;
-    onerror: ((this: Notification, ev: Event) => any) | null;
-    onshow: ((this: Notification, ev: Event) => any) | null;
     readonly permission: NotificationPermission;
     readonly tag: string | null;
     readonly title: string;
     close(): void;
-    addEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var Notification: {
@@ -9533,7 +8457,6 @@ declare var OES_element_index_uint: {
 };
 
 interface OES_standard_derivatives {
-    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: number;
 }
 
 declare var OES_standard_derivatives: {
@@ -9559,7 +8482,6 @@ declare var OES_texture_float_linear: {
 };
 
 interface OES_texture_half_float {
-    readonly HALF_FLOAT_OES: number;
 }
 
 declare var OES_texture_half_float: {
@@ -9597,15 +8519,11 @@ interface OfflineAudioContextEventMap extends AudioContextEventMap {
     "complete": OfflineAudioCompletionEvent;
 }
 
-interface OfflineAudioContext extends AudioContextBase {
+interface OfflineAudioContext extends EventTarget<OfflineAudioContext, OfflineAudioContextEventType>, AudioContextBase {
     readonly length: number;
-    oncomplete: ((this: OfflineAudioContext, ev: OfflineAudioCompletionEvent) => any) | null;
     startRendering(): Promise<AudioBuffer>;
     suspend(suspendTime: number): Promise<void>;
-    addEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var OfflineAudioContext: {
@@ -9617,18 +8535,14 @@ interface OscillatorNodeEventMap {
     "ended": Event;
 }
 
-interface OscillatorNode extends AudioNode {
+interface OscillatorNode extends EventTarget<OscillatorNode, OscillatorNodeEventType>, AudioNode {
     readonly detune: AudioParam;
     readonly frequency: AudioParam;
-    onended: ((this: OscillatorNode, ev: Event) => any) | null;
     type: OscillatorType;
     setPeriodicWave(periodicWave: PeriodicWave): void;
     start(when?: number): void;
     stop(when?: number): void;
-    addEventListener<K extends keyof OscillatorNodeEventMap>(type: K, listener: (this: OscillatorNode, ev: OscillatorNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof OscillatorNodeEventMap>(type: K, listener: (this: OscillatorNode, ev: OscillatorNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var OscillatorNode: {
@@ -9640,9 +8554,6 @@ interface OverflowEvent extends UIEvent {
     readonly horizontalOverflow: boolean;
     readonly orient: number;
     readonly verticalOverflow: boolean;
-    readonly BOTH: number;
-    readonly HORIZONTAL: number;
-    readonly VERTICAL: number;
 }
 
 declare var OverflowEvent: {
@@ -9688,15 +8599,8 @@ interface ParentNode {
     readonly childElementCount: number;
     readonly firstElementChild: Element | null;
     readonly lastElementChild: Element | null;
-}
-
-interface ParentNode {
     readonly children: HTMLCollection;
-    querySelector<K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K] | null;
-    querySelector<K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K] | null;
     querySelector<E extends Element = Element>(selectors: string): E | null;
-    querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>;
-    querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementTagNameMap[K]>;
     querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;
 }
 
@@ -9733,20 +8637,15 @@ interface PaymentRequestEventMap {
     "shippingoptionchange": Event;
 }
 
-interface PaymentRequest extends EventTarget {
+interface PaymentRequest extends EventTarget<PaymentRequest, PaymentRequestEventType> {
     readonly id: string;
-    onshippingaddresschange: ((this: PaymentRequest, ev: Event) => any) | null;
-    onshippingoptionchange: ((this: PaymentRequest, ev: Event) => any) | null;
     readonly shippingAddress: PaymentAddress | null;
     readonly shippingOption: string | null;
     readonly shippingType: PaymentShippingType | null;
     abort(): Promise<void>;
     canMakePayment(): Promise<boolean>;
     show(): Promise<PaymentResponse>;
-    addEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var PaymentRequest: {
@@ -9871,10 +8770,6 @@ interface PerformanceNavigation {
     readonly redirectCount: number;
     readonly type: number;
     toJSON(): any;
-    readonly TYPE_BACK_FORWARD: number;
-    readonly TYPE_NAVIGATE: number;
-    readonly TYPE_RELOAD: number;
-    readonly TYPE_RESERVED: number;
 }
 
 declare var PerformanceNavigation: {
@@ -10082,9 +8977,6 @@ interface PositionError {
     readonly code: number;
     readonly message: string;
     toString(): string;
-    readonly PERMISSION_DENIED: number;
-    readonly POSITION_UNAVAILABLE: number;
-    readonly TIMEOUT: number;
 }
 
 declare var PositionError: {
@@ -10117,12 +9009,12 @@ declare var ProgressEvent: {
 };
 
 interface PromiseRejectionEvent extends Event {
-    readonly promise: PromiseLike<any>;
+    readonly promise: Promise<any>;
     readonly reason: any;
 }
 
 interface PromiseRejectionEventInit extends EventInit {
-    promise: PromiseLike<any>;
+    promise: Promise<any>;
     reason?: any;
 }
 
@@ -10176,9 +9068,7 @@ interface RTCDtlsTransportEventMap {
     "error": Event;
 }
 
-interface RTCDtlsTransport extends RTCStatsProvider {
-    ondtlsstatechange: ((this: RTCDtlsTransport, ev: RTCDtlsTransportStateChangedEvent) => any) | null;
-    onerror: ((this: RTCDtlsTransport, ev: Event) => any) | null;
+interface RTCDtlsTransport extends EventTarget<RTCDtlsTransport, RTCDtlsTransportEventType>, RTCStatsProvider {
     readonly state: RTCDtlsTransportState;
     readonly transport: RTCIceTransport;
     getLocalParameters(): RTCDtlsParameters;
@@ -10186,10 +9076,7 @@ interface RTCDtlsTransport extends RTCStatsProvider {
     getRemoteParameters(): RTCDtlsParameters | null;
     start(remoteParameters: RTCDtlsParameters): void;
     stop(): void;
-    addEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var RTCDtlsTransport: {
@@ -10210,18 +9097,14 @@ interface RTCDtmfSenderEventMap {
     "tonechange": RTCDTMFToneChangeEvent;
 }
 
-interface RTCDtmfSender extends EventTarget {
+interface RTCDtmfSender extends EventTarget<RTCDtmfSender, RTCDtmfSenderEventType> {
     readonly canInsertDTMF: boolean;
     readonly duration: number;
     readonly interToneGap: number;
-    ontonechange: ((this: RTCDtmfSender, ev: RTCDTMFToneChangeEvent) => any) | null;
     readonly sender: RTCRtpSender;
     readonly toneBuffer: string;
     insertDTMF(tones: string, duration?: number, interToneGap?: number): void;
-    addEventListener<K extends keyof RTCDtmfSenderEventMap>(type: K, listener: (this: RTCDtmfSender, ev: RTCDtmfSenderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof RTCDtmfSenderEventMap>(type: K, listener: (this: RTCDtmfSender, ev: RTCDtmfSenderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var RTCDtmfSender: {
@@ -10255,17 +9138,12 @@ interface RTCIceGathererEventMap {
     "localcandidate": RTCIceGathererEvent;
 }
 
-interface RTCIceGatherer extends RTCStatsProvider {
+interface RTCIceGatherer extends EventTarget<RTCIceGatherer, RTCIceGathererEventType>, RTCStatsProvider {
     readonly component: RTCIceComponent;
-    onerror: ((this: RTCIceGatherer, ev: Event) => any) | null;
-    onlocalcandidate: ((this: RTCIceGatherer, ev: RTCIceGathererEvent) => any) | null;
     createAssociatedGatherer(): RTCIceGatherer;
     getLocalCandidates(): RTCIceCandidateDictionary[];
     getLocalParameters(): RTCIceParameters;
-    addEventListener<K extends keyof RTCIceGathererEventMap>(type: K, listener: (this: RTCIceGatherer, ev: RTCIceGathererEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof RTCIceGathererEventMap>(type: K, listener: (this: RTCIceGatherer, ev: RTCIceGathererEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var RTCIceGatherer: {
@@ -10287,11 +9165,9 @@ interface RTCIceTransportEventMap {
     "icestatechange": RTCIceTransportStateChangedEvent;
 }
 
-interface RTCIceTransport extends RTCStatsProvider {
+interface RTCIceTransport extends EventTarget<RTCIceTransport, RTCIceTransportEventType>, RTCStatsProvider {
     readonly component: RTCIceComponent;
     readonly iceGatherer: RTCIceGatherer | null;
-    oncandidatepairchange: ((this: RTCIceTransport, ev: RTCIceCandidatePairChangedEvent) => any) | null;
-    onicestatechange: ((this: RTCIceTransport, ev: RTCIceTransportStateChangedEvent) => any) | null;
     readonly role: RTCIceRole;
     readonly state: RTCIceTransportState;
     addRemoteCandidate(remoteCandidate: RTCIceCandidateDictionary | RTCIceCandidateComplete): void;
@@ -10302,10 +9178,7 @@ interface RTCIceTransport extends RTCStatsProvider {
     setRemoteCandidates(remoteCandidates: RTCIceCandidateDictionary[]): void;
     start(gatherer: RTCIceGatherer, remoteParameters: RTCIceParameters, role?: RTCIceRole): void;
     stop(): void;
-    addEventListener<K extends keyof RTCIceTransportEventMap>(type: K, listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof RTCIceTransportEventMap>(type: K, listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var RTCIceTransport: {
@@ -10332,18 +9205,11 @@ interface RTCPeerConnectionEventMap {
     "signalingstatechange": Event;
 }
 
-interface RTCPeerConnection extends EventTarget {
+interface RTCPeerConnection extends EventTarget<RTCPeerConnection, RTCPeerConnectionEventType> {
     readonly canTrickleIceCandidates: boolean | null;
     readonly iceConnectionState: RTCIceConnectionState;
     readonly iceGatheringState: RTCIceGatheringState;
     readonly localDescription: RTCSessionDescription | null;
-    onaddstream: ((this: RTCPeerConnection, ev: MediaStreamEvent) => any) | null;
-    onicecandidate: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => any) | null;
-    oniceconnectionstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;
-    onicegatheringstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;
-    onnegotiationneeded: ((this: RTCPeerConnection, ev: Event) => any) | null;
-    onremovestream: ((this: RTCPeerConnection, ev: MediaStreamEvent) => any) | null;
-    onsignalingstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;
     readonly remoteDescription: RTCSessionDescription | null;
     readonly signalingState: RTCSignalingState;
     addIceCandidate(candidate: RTCIceCandidateInit | RTCIceCandidate): Promise<void>;
@@ -10359,10 +9225,7 @@ interface RTCPeerConnection extends EventTarget {
     removeStream(stream: MediaStream): void;
     setLocalDescription(description: RTCSessionDescriptionInit): Promise<void>;
     setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void>;
-    addEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var RTCPeerConnection: {
@@ -10385,10 +9248,7 @@ interface RTCRtpReceiverEventMap {
     "msdsh": Event;
 }
 
-interface RTCRtpReceiver extends RTCStatsProvider {
-    onerror: ((this: RTCRtpReceiver, ev: Event) => any) | null;
-    onmsdecodercapacitychange: ((this: RTCRtpReceiver, ev: Event) => any) | null;
-    onmsdsh: ((this: RTCRtpReceiver, ev: Event) => any) | null;
+interface RTCRtpReceiver extends EventTarget<RTCRtpReceiver, RTCRtpReceiverEventType>, RTCStatsProvider {
     readonly rtcpTransport: RTCDtlsTransport;
     readonly track: MediaStreamTrack | null;
     readonly transport: RTCDtlsTransport | RTCSrtpSdesTransport;
@@ -10397,10 +9257,7 @@ interface RTCRtpReceiver extends RTCStatsProvider {
     requestSendCSRC(csrc: number): void;
     setTransport(transport: RTCDtlsTransport | RTCSrtpSdesTransport, rtcpTransport?: RTCDtlsTransport): void;
     stop(): void;
-    addEventListener<K extends keyof RTCRtpReceiverEventMap>(type: K, listener: (this: RTCRtpReceiver, ev: RTCRtpReceiverEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof RTCRtpReceiverEventMap>(type: K, listener: (this: RTCRtpReceiver, ev: RTCRtpReceiverEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var RTCRtpReceiver: {
@@ -10414,9 +9271,7 @@ interface RTCRtpSenderEventMap {
     "ssrcconflict": RTCSsrcConflictEvent;
 }
 
-interface RTCRtpSender extends RTCStatsProvider {
-    onerror: ((this: RTCRtpSender, ev: Event) => any) | null;
-    onssrcconflict: ((this: RTCRtpSender, ev: RTCSsrcConflictEvent) => any) | null;
+interface RTCRtpSender extends EventTarget<RTCRtpSender, RTCRtpSenderEventType>, RTCStatsProvider {
     readonly rtcpTransport: RTCDtlsTransport;
     readonly track: MediaStreamTrack;
     readonly transport: RTCDtlsTransport | RTCSrtpSdesTransport;
@@ -10424,10 +9279,7 @@ interface RTCRtpSender extends RTCStatsProvider {
     setTrack(track: MediaStreamTrack): void;
     setTransport(transport: RTCDtlsTransport | RTCSrtpSdesTransport, rtcpTransport?: RTCDtlsTransport): void;
     stop(): void;
-    addEventListener<K extends keyof RTCRtpSenderEventMap>(type: K, listener: (this: RTCRtpSender, ev: RTCRtpSenderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof RTCRtpSenderEventMap>(type: K, listener: (this: RTCRtpSender, ev: RTCRtpSenderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var RTCRtpSender: {
@@ -10451,13 +9303,9 @@ interface RTCSrtpSdesTransportEventMap {
     "error": Event;
 }
 
-interface RTCSrtpSdesTransport extends EventTarget {
-    onerror: ((this: RTCSrtpSdesTransport, ev: Event) => any) | null;
+interface RTCSrtpSdesTransport extends EventTarget<RTCSrtpSdesTransport, RTCSrtpSdesTransportEventType> {
     readonly transport: RTCIceTransport;
-    addEventListener<K extends keyof RTCSrtpSdesTransportEventMap>(type: K, listener: (this: RTCSrtpSdesTransport, ev: RTCSrtpSdesTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof RTCSrtpSdesTransportEventMap>(type: K, listener: (this: RTCSrtpSdesTransport, ev: RTCSrtpSdesTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var RTCSrtpSdesTransport: {
@@ -10524,10 +9372,6 @@ interface Range {
     setStartBefore(node: Node): void;
     surroundContents(newParent: Node): void;
     toString(): string;
-    readonly END_TO_END: number;
-    readonly END_TO_START: number;
-    readonly START_TO_END: number;
-    readonly START_TO_START: number;
 }
 
 declare var Range: {
@@ -10598,17 +9442,14 @@ interface Response extends Body {
 
 declare var Response: {
     prototype: Response;
-    new(body?: Blob | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | FormData | string | null, init?: ResponseInit): Response;
+    new(body?: Blob | BufferSource | FormData | string | null, init?: ResponseInit): Response;
     error(): Response;
     redirect(url: string, status?: number): Response;
 };
 
-interface SVGAElement extends SVGGraphicsElement, SVGURIReference {
+interface SVGAElement extends EventTarget<SVGAElement, SVGElementEventType>, SVGGraphicsElement, SVGURIReference {
     readonly target: SVGAnimatedString;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGAElement: {
@@ -10623,11 +9464,6 @@ interface SVGAngle {
     valueInSpecifiedUnits: number;
     convertToSpecifiedUnits(unitType: number): void;
     newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;
-    readonly SVG_ANGLETYPE_DEG: number;
-    readonly SVG_ANGLETYPE_GRAD: number;
-    readonly SVG_ANGLETYPE_RAD: number;
-    readonly SVG_ANGLETYPE_UNKNOWN: number;
-    readonly SVG_ANGLETYPE_UNSPECIFIED: number;
 }
 
 declare var SVGAngle: {
@@ -10765,14 +9601,11 @@ declare var SVGAnimatedTransformList: {
     new(): SVGAnimatedTransformList;
 };
 
-interface SVGCircleElement extends SVGGraphicsElement {
+interface SVGCircleElement extends EventTarget<SVGCircleElement, SVGElementEventType>, SVGGraphicsElement {
     readonly cx: SVGAnimatedLength;
     readonly cy: SVGAnimatedLength;
     readonly r: SVGAnimatedLength;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGCircleElement: {
@@ -10780,12 +9613,9 @@ declare var SVGCircleElement: {
     new(): SVGCircleElement;
 };
 
-interface SVGClipPathElement extends SVGGraphicsElement, SVGUnitTypes {
+interface SVGClipPathElement extends EventTarget<SVGClipPathElement, SVGElementEventType>, SVGGraphicsElement {
     readonly clipPathUnits: SVGAnimatedEnumeration;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGClipPathElement: {
@@ -10793,7 +9623,7 @@ declare var SVGClipPathElement: {
     new(): SVGClipPathElement;
 };
 
-interface SVGComponentTransferFunctionElement extends SVGElement {
+interface SVGComponentTransferFunctionElement extends EventTarget<SVGComponentTransferFunctionElement, SVGElementEventType>, SVGElement {
     readonly amplitude: SVGAnimatedNumber;
     readonly exponent: SVGAnimatedNumber;
     readonly intercept: SVGAnimatedNumber;
@@ -10801,16 +9631,7 @@ interface SVGComponentTransferFunctionElement extends SVGElement {
     readonly slope: SVGAnimatedNumber;
     readonly tableValues: SVGAnimatedNumberList;
     readonly type: SVGAnimatedEnumeration;
-    readonly SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: number;
-    readonly SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: number;
-    readonly SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: number;
-    readonly SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: number;
-    readonly SVG_FECOMPONENTTRANSFER_TYPE_TABLE: number;
-    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGComponentTransferFunctionElement: {
@@ -10824,11 +9645,8 @@ declare var SVGComponentTransferFunctionElement: {
     readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;
 };
 
-interface SVGDefsElement extends SVGGraphicsElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGDefsElement extends EventTarget<SVGDefsElement, SVGElementEventType>, SVGGraphicsElement {
+
 }
 
 declare var SVGDefsElement: {
@@ -10836,11 +9654,8 @@ declare var SVGDefsElement: {
     new(): SVGDefsElement;
 };
 
-interface SVGDescElement extends SVGElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGDescElement extends EventTarget<SVGDescElement, SVGElementEventType>, SVGElement {
+
 }
 
 declare var SVGDescElement: {
@@ -10861,26 +9676,13 @@ interface SVGElementEventMap extends ElementEventMap {
     "mouseup": MouseEvent;
 }
 
-interface SVGElement extends Element, ElementCSSInlineStyle {
+interface SVGElement extends EventTarget<SVGElement, SVGElementEventType>, Element, ElementCSSInlineStyle {
     readonly className: any;
-    onclick: ((this: SVGElement, ev: MouseEvent) => any) | null;
-    ondblclick: ((this: SVGElement, ev: MouseEvent) => any) | null;
-    onfocusin: ((this: SVGElement, ev: FocusEvent) => any) | null;
-    onfocusout: ((this: SVGElement, ev: FocusEvent) => any) | null;
-    onload: ((this: SVGElement, ev: Event) => any) | null;
-    onmousedown: ((this: SVGElement, ev: MouseEvent) => any) | null;
-    onmousemove: ((this: SVGElement, ev: MouseEvent) => any) | null;
-    onmouseout: ((this: SVGElement, ev: MouseEvent) => any) | null;
-    onmouseover: ((this: SVGElement, ev: MouseEvent) => any) | null;
-    onmouseup: ((this: SVGElement, ev: MouseEvent) => any) | null;
     readonly ownerSVGElement: SVGSVGElement | null;
     readonly viewportElement: SVGElement | null;
     /** @deprecated */
     xmlbase: string;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGElement: {
@@ -10916,15 +9718,12 @@ declare var SVGElementInstanceList: {
     new(): SVGElementInstanceList;
 };
 
-interface SVGEllipseElement extends SVGGraphicsElement {
+interface SVGEllipseElement extends EventTarget<SVGEllipseElement, SVGElementEventType>, SVGGraphicsElement {
     readonly cx: SVGAnimatedLength;
     readonly cy: SVGAnimatedLength;
     readonly rx: SVGAnimatedLength;
     readonly ry: SVGAnimatedLength;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGEllipseElement: {
@@ -10932,31 +9731,10 @@ declare var SVGEllipseElement: {
     new(): SVGEllipseElement;
 };
 
-interface SVGFEBlendElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEBlendElement extends EventTarget<SVGFEBlendElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly in1: SVGAnimatedString;
     readonly in2: SVGAnimatedString;
     readonly mode: SVGAnimatedEnumeration;
-    readonly SVG_FEBLEND_MODE_COLOR: number;
-    readonly SVG_FEBLEND_MODE_COLOR_BURN: number;
-    readonly SVG_FEBLEND_MODE_COLOR_DODGE: number;
-    readonly SVG_FEBLEND_MODE_DARKEN: number;
-    readonly SVG_FEBLEND_MODE_DIFFERENCE: number;
-    readonly SVG_FEBLEND_MODE_EXCLUSION: number;
-    readonly SVG_FEBLEND_MODE_HARD_LIGHT: number;
-    readonly SVG_FEBLEND_MODE_HUE: number;
-    readonly SVG_FEBLEND_MODE_LIGHTEN: number;
-    readonly SVG_FEBLEND_MODE_LUMINOSITY: number;
-    readonly SVG_FEBLEND_MODE_MULTIPLY: number;
-    readonly SVG_FEBLEND_MODE_NORMAL: number;
-    readonly SVG_FEBLEND_MODE_OVERLAY: number;
-    readonly SVG_FEBLEND_MODE_SATURATION: number;
-    readonly SVG_FEBLEND_MODE_SCREEN: number;
-    readonly SVG_FEBLEND_MODE_SOFT_LIGHT: number;
-    readonly SVG_FEBLEND_MODE_UNKNOWN: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
 }
 
 declare var SVGFEBlendElement: {
@@ -10981,19 +9759,11 @@ declare var SVGFEBlendElement: {
     readonly SVG_FEBLEND_MODE_UNKNOWN: number;
 };
 
-interface SVGFEColorMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEColorMatrixElement extends EventTarget<SVGFEColorMatrixElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly in1: SVGAnimatedString;
     readonly type: SVGAnimatedEnumeration;
     readonly values: SVGAnimatedNumberList;
-    readonly SVG_FECOLORMATRIX_TYPE_HUEROTATE: number;
-    readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: number;
-    readonly SVG_FECOLORMATRIX_TYPE_MATRIX: number;
-    readonly SVG_FECOLORMATRIX_TYPE_SATURATE: number;
-    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEColorMatrixElement: {
@@ -11006,12 +9776,9 @@ declare var SVGFEColorMatrixElement: {
     readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;
 };
 
-interface SVGFEComponentTransferElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEComponentTransferElement extends EventTarget<SVGFEComponentTransferElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly in1: SVGAnimatedString;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEComponentTransferElement: {
@@ -11019,7 +9786,7 @@ declare var SVGFEComponentTransferElement: {
     new(): SVGFEComponentTransferElement;
 };
 
-interface SVGFECompositeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFECompositeElement extends EventTarget<SVGFECompositeElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly in1: SVGAnimatedString;
     readonly in2: SVGAnimatedString;
     readonly k1: SVGAnimatedNumber;
@@ -11027,17 +9794,7 @@ interface SVGFECompositeElement extends SVGElement, SVGFilterPrimitiveStandardAt
     readonly k3: SVGAnimatedNumber;
     readonly k4: SVGAnimatedNumber;
     readonly operator: SVGAnimatedEnumeration;
-    readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: number;
-    readonly SVG_FECOMPOSITE_OPERATOR_ATOP: number;
-    readonly SVG_FECOMPOSITE_OPERATOR_IN: number;
-    readonly SVG_FECOMPOSITE_OPERATOR_OUT: number;
-    readonly SVG_FECOMPOSITE_OPERATOR_OVER: number;
-    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: number;
-    readonly SVG_FECOMPOSITE_OPERATOR_XOR: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFECompositeElement: {
@@ -11052,7 +9809,7 @@ declare var SVGFECompositeElement: {
     readonly SVG_FECOMPOSITE_OPERATOR_XOR: number;
 };
 
-interface SVGFEConvolveMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEConvolveMatrixElement extends EventTarget<SVGFEConvolveMatrixElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly bias: SVGAnimatedNumber;
     readonly divisor: SVGAnimatedNumber;
     readonly edgeMode: SVGAnimatedEnumeration;
@@ -11065,14 +9822,7 @@ interface SVGFEConvolveMatrixElement extends SVGElement, SVGFilterPrimitiveStand
     readonly preserveAlpha: SVGAnimatedBoolean;
     readonly targetX: SVGAnimatedInteger;
     readonly targetY: SVGAnimatedInteger;
-    readonly SVG_EDGEMODE_DUPLICATE: number;
-    readonly SVG_EDGEMODE_NONE: number;
-    readonly SVG_EDGEMODE_UNKNOWN: number;
-    readonly SVG_EDGEMODE_WRAP: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEConvolveMatrixElement: {
@@ -11084,16 +9834,13 @@ declare var SVGFEConvolveMatrixElement: {
     readonly SVG_EDGEMODE_WRAP: number;
 };
 
-interface SVGFEDiffuseLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEDiffuseLightingElement extends EventTarget<SVGFEDiffuseLightingElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly diffuseConstant: SVGAnimatedNumber;
     readonly in1: SVGAnimatedString;
     readonly kernelUnitLengthX: SVGAnimatedNumber;
     readonly kernelUnitLengthY: SVGAnimatedNumber;
     readonly surfaceScale: SVGAnimatedNumber;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEDiffuseLightingElement: {
@@ -11101,21 +9848,13 @@ declare var SVGFEDiffuseLightingElement: {
     new(): SVGFEDiffuseLightingElement;
 };
 
-interface SVGFEDisplacementMapElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEDisplacementMapElement extends EventTarget<SVGFEDisplacementMapElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly in1: SVGAnimatedString;
     readonly in2: SVGAnimatedString;
     readonly scale: SVGAnimatedNumber;
     readonly xChannelSelector: SVGAnimatedEnumeration;
     readonly yChannelSelector: SVGAnimatedEnumeration;
-    readonly SVG_CHANNEL_A: number;
-    readonly SVG_CHANNEL_B: number;
-    readonly SVG_CHANNEL_G: number;
-    readonly SVG_CHANNEL_R: number;
-    readonly SVG_CHANNEL_UNKNOWN: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEDisplacementMapElement: {
@@ -11128,13 +9867,10 @@ declare var SVGFEDisplacementMapElement: {
     readonly SVG_CHANNEL_UNKNOWN: number;
 };
 
-interface SVGFEDistantLightElement extends SVGElement {
+interface SVGFEDistantLightElement extends EventTarget<SVGFEDistantLightElement, SVGElementEventType>, SVGElement {
     readonly azimuth: SVGAnimatedNumber;
     readonly elevation: SVGAnimatedNumber;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEDistantLightElement: {
@@ -11142,11 +9878,8 @@ declare var SVGFEDistantLightElement: {
     new(): SVGFEDistantLightElement;
 };
 
-interface SVGFEFloodElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGFEFloodElement extends EventTarget<SVGFEFloodElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+
 }
 
 declare var SVGFEFloodElement: {
@@ -11154,11 +9887,8 @@ declare var SVGFEFloodElement: {
     new(): SVGFEFloodElement;
 };
 
-interface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGFEFuncAElement extends EventTarget<SVGFEFuncAElement, SVGElementEventType>, SVGComponentTransferFunctionElement {
+
 }
 
 declare var SVGFEFuncAElement: {
@@ -11166,11 +9896,8 @@ declare var SVGFEFuncAElement: {
     new(): SVGFEFuncAElement;
 };
 
-interface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGFEFuncBElement extends EventTarget<SVGFEFuncBElement, SVGElementEventType>, SVGComponentTransferFunctionElement {
+
 }
 
 declare var SVGFEFuncBElement: {
@@ -11178,11 +9905,8 @@ declare var SVGFEFuncBElement: {
     new(): SVGFEFuncBElement;
 };
 
-interface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGFEFuncGElement extends EventTarget<SVGFEFuncGElement, SVGElementEventType>, SVGComponentTransferFunctionElement {
+
 }
 
 declare var SVGFEFuncGElement: {
@@ -11190,11 +9914,8 @@ declare var SVGFEFuncGElement: {
     new(): SVGFEFuncGElement;
 };
 
-interface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGFEFuncRElement extends EventTarget<SVGFEFuncRElement, SVGElementEventType>, SVGComponentTransferFunctionElement {
+
 }
 
 declare var SVGFEFuncRElement: {
@@ -11202,15 +9923,12 @@ declare var SVGFEFuncRElement: {
     new(): SVGFEFuncRElement;
 };
 
-interface SVGFEGaussianBlurElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEGaussianBlurElement extends EventTarget<SVGFEGaussianBlurElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly in1: SVGAnimatedString;
     readonly stdDeviationX: SVGAnimatedNumber;
     readonly stdDeviationY: SVGAnimatedNumber;
     setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEGaussianBlurElement: {
@@ -11218,12 +9936,9 @@ declare var SVGFEGaussianBlurElement: {
     new(): SVGFEGaussianBlurElement;
 };
 
-interface SVGFEImageElement extends SVGElement, SVGFilterPrimitiveStandardAttributes, SVGURIReference {
+interface SVGFEImageElement extends EventTarget<SVGFEImageElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes, SVGURIReference {
     readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEImageElement: {
@@ -11231,11 +9946,8 @@ declare var SVGFEImageElement: {
     new(): SVGFEImageElement;
 };
 
-interface SVGFEMergeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGFEMergeElement extends EventTarget<SVGFEMergeElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
+
 }
 
 declare var SVGFEMergeElement: {
@@ -11243,12 +9955,9 @@ declare var SVGFEMergeElement: {
     new(): SVGFEMergeElement;
 };
 
-interface SVGFEMergeNodeElement extends SVGElement {
+interface SVGFEMergeNodeElement extends EventTarget<SVGFEMergeNodeElement, SVGElementEventType>, SVGElement {
     readonly in1: SVGAnimatedString;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEMergeNodeElement: {
@@ -11256,18 +9965,12 @@ declare var SVGFEMergeNodeElement: {
     new(): SVGFEMergeNodeElement;
 };
 
-interface SVGFEMorphologyElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEMorphologyElement extends EventTarget<SVGFEMorphologyElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly in1: SVGAnimatedString;
     readonly operator: SVGAnimatedEnumeration;
     readonly radiusX: SVGAnimatedNumber;
     readonly radiusY: SVGAnimatedNumber;
-    readonly SVG_MORPHOLOGY_OPERATOR_DILATE: number;
-    readonly SVG_MORPHOLOGY_OPERATOR_ERODE: number;
-    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEMorphologyElement: {
@@ -11278,14 +9981,11 @@ declare var SVGFEMorphologyElement: {
     readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;
 };
 
-interface SVGFEOffsetElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFEOffsetElement extends EventTarget<SVGFEOffsetElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly dx: SVGAnimatedNumber;
     readonly dy: SVGAnimatedNumber;
     readonly in1: SVGAnimatedString;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEOffsetElement: {
@@ -11293,14 +9993,11 @@ declare var SVGFEOffsetElement: {
     new(): SVGFEOffsetElement;
 };
 
-interface SVGFEPointLightElement extends SVGElement {
+interface SVGFEPointLightElement extends EventTarget<SVGFEPointLightElement, SVGElementEventType>, SVGElement {
     readonly x: SVGAnimatedNumber;
     readonly y: SVGAnimatedNumber;
     readonly z: SVGAnimatedNumber;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFEPointLightElement: {
@@ -11308,17 +10005,14 @@ declare var SVGFEPointLightElement: {
     new(): SVGFEPointLightElement;
 };
 
-interface SVGFESpecularLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFESpecularLightingElement extends EventTarget<SVGFESpecularLightingElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly in1: SVGAnimatedString;
     readonly kernelUnitLengthX: SVGAnimatedNumber;
     readonly kernelUnitLengthY: SVGAnimatedNumber;
     readonly specularConstant: SVGAnimatedNumber;
     readonly specularExponent: SVGAnimatedNumber;
     readonly surfaceScale: SVGAnimatedNumber;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFESpecularLightingElement: {
@@ -11326,7 +10020,7 @@ declare var SVGFESpecularLightingElement: {
     new(): SVGFESpecularLightingElement;
 };
 
-interface SVGFESpotLightElement extends SVGElement {
+interface SVGFESpotLightElement extends EventTarget<SVGFESpotLightElement, SVGElementEventType>, SVGElement {
     readonly limitingConeAngle: SVGAnimatedNumber;
     readonly pointsAtX: SVGAnimatedNumber;
     readonly pointsAtY: SVGAnimatedNumber;
@@ -11335,10 +10029,7 @@ interface SVGFESpotLightElement extends SVGElement {
     readonly x: SVGAnimatedNumber;
     readonly y: SVGAnimatedNumber;
     readonly z: SVGAnimatedNumber;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFESpotLightElement: {
@@ -11346,12 +10037,9 @@ declare var SVGFESpotLightElement: {
     new(): SVGFESpotLightElement;
 };
 
-interface SVGFETileElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFETileElement extends EventTarget<SVGFETileElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly in1: SVGAnimatedString;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFETileElement: {
@@ -11359,23 +10047,14 @@ declare var SVGFETileElement: {
     new(): SVGFETileElement;
 };
 
-interface SVGFETurbulenceElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {
+interface SVGFETurbulenceElement extends EventTarget<SVGFETurbulenceElement, SVGElementEventType>, SVGElement, SVGFilterPrimitiveStandardAttributes {
     readonly baseFrequencyX: SVGAnimatedNumber;
     readonly baseFrequencyY: SVGAnimatedNumber;
     readonly numOctaves: SVGAnimatedInteger;
     readonly seed: SVGAnimatedNumber;
     readonly stitchTiles: SVGAnimatedEnumeration;
     readonly type: SVGAnimatedEnumeration;
-    readonly SVG_STITCHTYPE_NOSTITCH: number;
-    readonly SVG_STITCHTYPE_STITCH: number;
-    readonly SVG_STITCHTYPE_UNKNOWN: number;
-    readonly SVG_TURBULENCE_TYPE_FRACTALNOISE: number;
-    readonly SVG_TURBULENCE_TYPE_TURBULENCE: number;
-    readonly SVG_TURBULENCE_TYPE_UNKNOWN: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFETurbulenceElement: {
@@ -11389,7 +10068,7 @@ declare var SVGFETurbulenceElement: {
     readonly SVG_TURBULENCE_TYPE_UNKNOWN: number;
 };
 
-interface SVGFilterElement extends SVGElement, SVGUnitTypes, SVGURIReference {
+interface SVGFilterElement extends EventTarget<SVGFilterElement, SVGElementEventType>, SVGElement, SVGURIReference {
     /** @deprecated */
     readonly filterResX: SVGAnimatedInteger;
     /** @deprecated */
@@ -11402,10 +10081,7 @@ interface SVGFilterElement extends SVGElement, SVGUnitTypes, SVGURIReference {
     readonly y: SVGAnimatedLength;
     /** @deprecated */
     setFilterRes(filterResX: number, filterResY: number): void;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGFilterElement: {
@@ -11413,7 +10089,7 @@ declare var SVGFilterElement: {
     new(): SVGFilterElement;
 };
 
-interface SVGFilterPrimitiveStandardAttributes {
+interface SVGFilterPrimitiveStandardAttributes /*! @ooml-interface */ {
     readonly height: SVGAnimatedLength;
     readonly result: SVGAnimatedString;
     readonly width: SVGAnimatedLength;
@@ -11426,15 +10102,12 @@ interface SVGFitToViewBox {
     readonly viewBox: SVGAnimatedRect;
 }
 
-interface SVGForeignObjectElement extends SVGGraphicsElement {
+interface SVGForeignObjectElement extends EventTarget<SVGForeignObjectElement, SVGElementEventType>, SVGGraphicsElement {
     readonly height: SVGAnimatedLength;
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGForeignObjectElement: {
@@ -11442,11 +10115,8 @@ declare var SVGForeignObjectElement: {
     new(): SVGForeignObjectElement;
 };
 
-interface SVGGElement extends SVGGraphicsElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGGElement extends EventTarget<SVGGElement, SVGElementEventType>, SVGGraphicsElement {
+
 }
 
 declare var SVGGElement: {
@@ -11454,18 +10124,11 @@ declare var SVGGElement: {
     new(): SVGGElement;
 };
 
-interface SVGGradientElement extends SVGElement, SVGUnitTypes, SVGURIReference {
+interface SVGGradientElement extends EventTarget<SVGGradientElement, SVGElementEventType>, SVGElement, SVGURIReference {
     readonly gradientTransform: SVGAnimatedTransformList;
     readonly gradientUnits: SVGAnimatedEnumeration;
     readonly spreadMethod: SVGAnimatedEnumeration;
-    readonly SVG_SPREADMETHOD_PAD: number;
-    readonly SVG_SPREADMETHOD_REFLECT: number;
-    readonly SVG_SPREADMETHOD_REPEAT: number;
-    readonly SVG_SPREADMETHOD_UNKNOWN: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGGradientElement: {
@@ -11477,7 +10140,7 @@ declare var SVGGradientElement: {
     readonly SVG_SPREADMETHOD_UNKNOWN: number;
 };
 
-interface SVGGraphicsElement extends SVGElement, SVGTests {
+interface SVGGraphicsElement extends EventTarget<SVGGraphicsElement, SVGElementEventType>, SVGElement, SVGTests {
     /** @deprecated */
     readonly farthestViewportElement: SVGElement | null;
     /** @deprecated */
@@ -11488,10 +10151,7 @@ interface SVGGraphicsElement extends SVGElement, SVGTests {
     getScreenCTM(): SVGMatrix | null;
     /** @deprecated */
     getTransformToElement(element: SVGElement): SVGMatrix;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGGraphicsElement: {
@@ -11499,16 +10159,13 @@ declare var SVGGraphicsElement: {
     new(): SVGGraphicsElement;
 };
 
-interface SVGImageElement extends SVGGraphicsElement, SVGURIReference {
+interface SVGImageElement extends EventTarget<SVGImageElement, SVGElementEventType>, SVGGraphicsElement, SVGURIReference {
     readonly height: SVGAnimatedLength;
     readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGImageElement: {
@@ -11523,17 +10180,6 @@ interface SVGLength {
     valueInSpecifiedUnits: number;
     convertToSpecifiedUnits(unitType: number): void;
     newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;
-    readonly SVG_LENGTHTYPE_CM: number;
-    readonly SVG_LENGTHTYPE_EMS: number;
-    readonly SVG_LENGTHTYPE_EXS: number;
-    readonly SVG_LENGTHTYPE_IN: number;
-    readonly SVG_LENGTHTYPE_MM: number;
-    readonly SVG_LENGTHTYPE_NUMBER: number;
-    readonly SVG_LENGTHTYPE_PC: number;
-    readonly SVG_LENGTHTYPE_PERCENTAGE: number;
-    readonly SVG_LENGTHTYPE_PT: number;
-    readonly SVG_LENGTHTYPE_PX: number;
-    readonly SVG_LENGTHTYPE_UNKNOWN: number;
 }
 
 declare var SVGLength: {
@@ -11568,15 +10214,12 @@ declare var SVGLengthList: {
     new(): SVGLengthList;
 };
 
-interface SVGLineElement extends SVGGraphicsElement {
+interface SVGLineElement extends EventTarget<SVGLineElement, SVGElementEventType>, SVGGraphicsElement {
     readonly x1: SVGAnimatedLength;
     readonly x2: SVGAnimatedLength;
     readonly y1: SVGAnimatedLength;
     readonly y2: SVGAnimatedLength;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGLineElement: {
@@ -11584,15 +10227,12 @@ declare var SVGLineElement: {
     new(): SVGLineElement;
 };
 
-interface SVGLinearGradientElement extends SVGGradientElement {
+interface SVGLinearGradientElement extends EventTarget<SVGLinearGradientElement, SVGElementEventType>, SVGGradientElement {
     readonly x1: SVGAnimatedLength;
     readonly x2: SVGAnimatedLength;
     readonly y1: SVGAnimatedLength;
     readonly y2: SVGAnimatedLength;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGLinearGradientElement: {
@@ -11600,7 +10240,7 @@ declare var SVGLinearGradientElement: {
     new(): SVGLinearGradientElement;
 };
 
-interface SVGMarkerElement extends SVGElement, SVGFitToViewBox {
+interface SVGMarkerElement extends EventTarget<SVGMarkerElement, SVGElementEventType>, SVGElement, SVGFitToViewBox {
     readonly markerHeight: SVGAnimatedLength;
     readonly markerUnits: SVGAnimatedEnumeration;
     readonly markerWidth: SVGAnimatedLength;
@@ -11610,16 +10250,7 @@ interface SVGMarkerElement extends SVGElement, SVGFitToViewBox {
     readonly refY: SVGAnimatedLength;
     setOrientToAngle(angle: SVGAngle): void;
     setOrientToAuto(): void;
-    readonly SVG_MARKERUNITS_STROKEWIDTH: number;
-    readonly SVG_MARKERUNITS_UNKNOWN: number;
-    readonly SVG_MARKERUNITS_USERSPACEONUSE: number;
-    readonly SVG_MARKER_ORIENT_ANGLE: number;
-    readonly SVG_MARKER_ORIENT_AUTO: number;
-    readonly SVG_MARKER_ORIENT_UNKNOWN: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGMarkerElement: {
@@ -11633,17 +10264,14 @@ declare var SVGMarkerElement: {
     readonly SVG_MARKER_ORIENT_UNKNOWN: number;
 };
 
-interface SVGMaskElement extends SVGElement, SVGTests, SVGUnitTypes {
+interface SVGMaskElement extends EventTarget<SVGMaskElement, SVGElementEventType>, SVGElement, SVGTests {
     readonly height: SVGAnimatedLength;
     readonly maskContentUnits: SVGAnimatedEnumeration;
     readonly maskUnits: SVGAnimatedEnumeration;
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGMaskElement: {
@@ -11676,11 +10304,8 @@ declare var SVGMatrix: {
     new(): SVGMatrix;
 };
 
-interface SVGMetadataElement extends SVGElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGMetadataElement extends EventTarget<SVGMetadataElement, SVGElementEventType>, SVGElement {
+
 }
 
 declare var SVGMetadataElement: {
@@ -11713,7 +10338,7 @@ declare var SVGNumberList: {
     new(): SVGNumberList;
 };
 
-interface SVGPathElement extends SVGGraphicsElement {
+interface SVGPathElement extends EventTarget<SVGPathElement, SVGElementEventType>, SVGGraphicsElement {
     /** @deprecated */
     readonly pathSegList: SVGPathSegList;
     /** @deprecated */
@@ -11758,10 +10383,7 @@ interface SVGPathElement extends SVGGraphicsElement {
     getPathSegAtLength(distance: number): number;
     getPointAtLength(distance: number): SVGPoint;
     getTotalLength(): number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGPathElement: {
@@ -11772,26 +10394,6 @@ declare var SVGPathElement: {
 interface SVGPathSeg {
     readonly pathSegType: number;
     readonly pathSegTypeAsLetter: string;
-    readonly PATHSEG_ARC_ABS: number;
-    readonly PATHSEG_ARC_REL: number;
-    readonly PATHSEG_CLOSEPATH: number;
-    readonly PATHSEG_CURVETO_CUBIC_ABS: number;
-    readonly PATHSEG_CURVETO_CUBIC_REL: number;
-    readonly PATHSEG_CURVETO_CUBIC_SMOOTH_ABS: number;
-    readonly PATHSEG_CURVETO_CUBIC_SMOOTH_REL: number;
-    readonly PATHSEG_CURVETO_QUADRATIC_ABS: number;
-    readonly PATHSEG_CURVETO_QUADRATIC_REL: number;
-    readonly PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: number;
-    readonly PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: number;
-    readonly PATHSEG_LINETO_ABS: number;
-    readonly PATHSEG_LINETO_HORIZONTAL_ABS: number;
-    readonly PATHSEG_LINETO_HORIZONTAL_REL: number;
-    readonly PATHSEG_LINETO_REL: number;
-    readonly PATHSEG_LINETO_VERTICAL_ABS: number;
-    readonly PATHSEG_LINETO_VERTICAL_REL: number;
-    readonly PATHSEG_MOVETO_ABS: number;
-    readonly PATHSEG_MOVETO_REL: number;
-    readonly PATHSEG_UNKNOWN: number;
 }
 
 declare var SVGPathSeg: {
@@ -12045,7 +10647,7 @@ declare var SVGPathSegMovetoRel: {
     new(): SVGPathSegMovetoRel;
 };
 
-interface SVGPatternElement extends SVGElement, SVGTests, SVGUnitTypes, SVGFitToViewBox, SVGURIReference {
+interface SVGPatternElement extends EventTarget<SVGPatternElement, SVGElementEventType>, SVGElement, SVGTests, SVGFitToViewBox, SVGURIReference {
     readonly height: SVGAnimatedLength;
     readonly patternContentUnits: SVGAnimatedEnumeration;
     readonly patternTransform: SVGAnimatedTransformList;
@@ -12053,10 +10655,7 @@ interface SVGPatternElement extends SVGElement, SVGTests, SVGUnitTypes, SVGFitTo
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGPatternElement: {
@@ -12091,11 +10690,8 @@ declare var SVGPointList: {
     new(): SVGPointList;
 };
 
-interface SVGPolygonElement extends SVGGraphicsElement, SVGAnimatedPoints {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGPolygonElement extends EventTarget<SVGPolygonElement, SVGElementEventType>, SVGGraphicsElement, SVGAnimatedPoints {
+
 }
 
 declare var SVGPolygonElement: {
@@ -12103,11 +10699,8 @@ declare var SVGPolygonElement: {
     new(): SVGPolygonElement;
 };
 
-interface SVGPolylineElement extends SVGGraphicsElement, SVGAnimatedPoints {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGPolylineElement extends EventTarget<SVGPolylineElement, SVGElementEventType>, SVGGraphicsElement, SVGAnimatedPoints {
+
 }
 
 declare var SVGPolylineElement: {
@@ -12118,20 +10711,6 @@ declare var SVGPolylineElement: {
 interface SVGPreserveAspectRatio {
     align: number;
     meetOrSlice: number;
-    readonly SVG_MEETORSLICE_MEET: number;
-    readonly SVG_MEETORSLICE_SLICE: number;
-    readonly SVG_MEETORSLICE_UNKNOWN: number;
-    readonly SVG_PRESERVEASPECTRATIO_NONE: number;
-    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: number;
-    readonly SVG_PRESERVEASPECTRATIO_XMAXYMAX: number;
-    readonly SVG_PRESERVEASPECTRATIO_XMAXYMID: number;
-    readonly SVG_PRESERVEASPECTRATIO_XMAXYMIN: number;
-    readonly SVG_PRESERVEASPECTRATIO_XMIDYMAX: number;
-    readonly SVG_PRESERVEASPECTRATIO_XMIDYMID: number;
-    readonly SVG_PRESERVEASPECTRATIO_XMIDYMIN: number;
-    readonly SVG_PRESERVEASPECTRATIO_XMINYMAX: number;
-    readonly SVG_PRESERVEASPECTRATIO_XMINYMID: number;
-    readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: number;
 }
 
 declare var SVGPreserveAspectRatio: {
@@ -12153,16 +10732,13 @@ declare var SVGPreserveAspectRatio: {
     readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: number;
 };
 
-interface SVGRadialGradientElement extends SVGGradientElement {
+interface SVGRadialGradientElement extends EventTarget<SVGRadialGradientElement, SVGElementEventType>, SVGGradientElement {
     readonly cx: SVGAnimatedLength;
     readonly cy: SVGAnimatedLength;
     readonly fx: SVGAnimatedLength;
     readonly fy: SVGAnimatedLength;
     readonly r: SVGAnimatedLength;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGRadialGradientElement: {
@@ -12182,17 +10758,14 @@ declare var SVGRect: {
     new(): SVGRect;
 };
 
-interface SVGRectElement extends SVGGraphicsElement {
+interface SVGRectElement extends EventTarget<SVGRectElement, SVGElementEventType>, SVGGraphicsElement {
     readonly height: SVGAnimatedLength;
     readonly rx: SVGAnimatedLength;
     readonly ry: SVGAnimatedLength;
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGRectElement: {
@@ -12209,7 +10782,7 @@ interface SVGSVGElementEventMap extends SVGElementEventMap {
     "SVGZoom": SVGZoomEvent;
 }
 
-interface SVGSVGElement extends SVGGraphicsElement, DocumentEvent, SVGFitToViewBox, SVGZoomAndPan {
+interface SVGSVGElement extends EventTarget<SVGSVGElement, SVGSVGElementEventType>, SVGGraphicsElement, SVGFitToViewBox, SVGZoomAndPan {
     /** @deprecated */
     contentScriptType: string;
     /** @deprecated */
@@ -12217,12 +10790,6 @@ interface SVGSVGElement extends SVGGraphicsElement, DocumentEvent, SVGFitToViewB
     currentScale: number;
     readonly currentTranslate: SVGPoint;
     readonly height: SVGAnimatedLength;
-    onabort: ((this: SVGSVGElement, ev: Event) => any) | null;
-    onerror: ((this: SVGSVGElement, ev: Event) => any) | null;
-    onresize: ((this: SVGSVGElement, ev: UIEvent) => any) | null;
-    onscroll: ((this: SVGSVGElement, ev: UIEvent) => any) | null;
-    onunload: ((this: SVGSVGElement, ev: Event) => any) | null;
-    onzoom: ((this: SVGSVGElement, ev: SVGZoomEvent) => any) | null;
     /** @deprecated */
     readonly pixelUnitToMillimeterX: number;
     /** @deprecated */
@@ -12267,10 +10834,7 @@ interface SVGSVGElement extends SVGGraphicsElement, DocumentEvent, SVGFitToViewB
     unsuspendRedraw(suspendHandleID: number): void;
     /** @deprecated */
     unsuspendRedrawAll(): void;
-    addEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGSVGElement: {
@@ -12278,12 +10842,9 @@ declare var SVGSVGElement: {
     new(): SVGSVGElement;
 };
 
-interface SVGScriptElement extends SVGElement, SVGURIReference {
+interface SVGScriptElement extends EventTarget<SVGScriptElement, SVGElementEventType>, SVGElement, SVGURIReference {
     type: string;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGScriptElement: {
@@ -12291,12 +10852,9 @@ declare var SVGScriptElement: {
     new(): SVGScriptElement;
 };
 
-interface SVGStopElement extends SVGElement {
+interface SVGStopElement extends EventTarget<SVGStopElement, SVGElementEventType>, SVGElement {
     readonly offset: SVGAnimatedNumber;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGStopElement: {
@@ -12329,15 +10887,12 @@ declare var SVGStylable: {
     new(): SVGStylable;
 };
 
-interface SVGStyleElement extends SVGElement {
+interface SVGStyleElement extends EventTarget<SVGStyleElement, SVGElementEventType>, SVGElement {
     disabled: boolean;
     media: string;
     title: string;
     type: string;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGStyleElement: {
@@ -12345,11 +10900,8 @@ declare var SVGStyleElement: {
     new(): SVGStyleElement;
 };
 
-interface SVGSwitchElement extends SVGGraphicsElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGSwitchElement extends EventTarget<SVGSwitchElement, SVGElementEventType>, SVGGraphicsElement {
+
 }
 
 declare var SVGSwitchElement: {
@@ -12357,11 +10909,8 @@ declare var SVGSwitchElement: {
     new(): SVGSwitchElement;
 };
 
-interface SVGSymbolElement extends SVGElement, SVGFitToViewBox {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGSymbolElement extends EventTarget<SVGSymbolElement, SVGElementEventType>, SVGElement, SVGFitToViewBox {
+
 }
 
 declare var SVGSymbolElement: {
@@ -12369,11 +10918,8 @@ declare var SVGSymbolElement: {
     new(): SVGSymbolElement;
 };
 
-interface SVGTSpanElement extends SVGTextPositioningElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGTSpanElement extends EventTarget<SVGTSpanElement, SVGElementEventType>, SVGTextPositioningElement {
+
 }
 
 declare var SVGTSpanElement: {
@@ -12390,7 +10936,7 @@ interface SVGTests {
     hasExtension(extension: string): boolean;
 }
 
-interface SVGTextContentElement extends SVGGraphicsElement {
+interface SVGTextContentElement extends EventTarget<SVGTextContentElement, SVGElementEventType>, SVGGraphicsElement {
     readonly lengthAdjust: SVGAnimatedEnumeration;
     readonly textLength: SVGAnimatedLength;
     getCharNumAtPosition(point: SVGPoint): number;
@@ -12402,13 +10948,7 @@ interface SVGTextContentElement extends SVGGraphicsElement {
     getStartPositionOfChar(charnum: number): SVGPoint;
     getSubStringLength(charnum: number, nchars: number): number;
     selectSubString(charnum: number, nchars: number): void;
-    readonly LENGTHADJUST_SPACING: number;
-    readonly LENGTHADJUST_SPACINGANDGLYPHS: number;
-    readonly LENGTHADJUST_UNKNOWN: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGTextContentElement: {
@@ -12419,11 +10959,8 @@ declare var SVGTextContentElement: {
     readonly LENGTHADJUST_UNKNOWN: number;
 };
 
-interface SVGTextElement extends SVGTextPositioningElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGTextElement extends EventTarget<SVGTextElement, SVGElementEventType>, SVGTextPositioningElement {
+
 }
 
 declare var SVGTextElement: {
@@ -12431,20 +10968,11 @@ declare var SVGTextElement: {
     new(): SVGTextElement;
 };
 
-interface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {
+interface SVGTextPathElement extends EventTarget<SVGTextPathElement, SVGElementEventType>, SVGTextContentElement, SVGURIReference {
     readonly method: SVGAnimatedEnumeration;
     readonly spacing: SVGAnimatedEnumeration;
     readonly startOffset: SVGAnimatedLength;
-    readonly TEXTPATH_METHODTYPE_ALIGN: number;
-    readonly TEXTPATH_METHODTYPE_STRETCH: number;
-    readonly TEXTPATH_METHODTYPE_UNKNOWN: number;
-    readonly TEXTPATH_SPACINGTYPE_AUTO: number;
-    readonly TEXTPATH_SPACINGTYPE_EXACT: number;
-    readonly TEXTPATH_SPACINGTYPE_UNKNOWN: number;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGTextPathElement: {
@@ -12458,16 +10986,13 @@ declare var SVGTextPathElement: {
     readonly TEXTPATH_SPACINGTYPE_UNKNOWN: number;
 };
 
-interface SVGTextPositioningElement extends SVGTextContentElement {
+interface SVGTextPositioningElement extends EventTarget<SVGTextPositioningElement, SVGElementEventType>, SVGTextContentElement {
     readonly dx: SVGAnimatedLengthList;
     readonly dy: SVGAnimatedLengthList;
     readonly rotate: SVGAnimatedNumberList;
     readonly x: SVGAnimatedLengthList;
     readonly y: SVGAnimatedLengthList;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGTextPositioningElement: {
@@ -12475,11 +11000,8 @@ declare var SVGTextPositioningElement: {
     new(): SVGTextPositioningElement;
 };
 
-interface SVGTitleElement extends SVGElement {
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface SVGTitleElement extends EventTarget<SVGTitleElement, SVGElementEventType>, SVGElement {
+
 }
 
 declare var SVGTitleElement: {
@@ -12497,13 +11019,6 @@ interface SVGTransform {
     setSkewX(angle: number): void;
     setSkewY(angle: number): void;
     setTranslate(tx: number, ty: number): void;
-    readonly SVG_TRANSFORM_MATRIX: number;
-    readonly SVG_TRANSFORM_ROTATE: number;
-    readonly SVG_TRANSFORM_SCALE: number;
-    readonly SVG_TRANSFORM_SKEWX: number;
-    readonly SVG_TRANSFORM_SKEWY: number;
-    readonly SVG_TRANSFORM_TRANSLATE: number;
-    readonly SVG_TRANSFORM_UNKNOWN: number;
 }
 
 declare var SVGTransform: {
@@ -12540,24 +11055,20 @@ interface SVGURIReference {
     readonly href: SVGAnimatedString;
 }
 
-interface SVGUnitTypes {
-    readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: number;
-    readonly SVG_UNIT_TYPE_UNKNOWN: number;
-    readonly SVG_UNIT_TYPE_USERSPACEONUSE: number;
+interface SVGUnitTypes /*! @ooml-static */ {
+  readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: number;
+  readonly SVG_UNIT_TYPE_UNKNOWN: number;
+  readonly SVG_UNIT_TYPE_USERSPACEONUSE: number;
 }
-declare var SVGUnitTypes: SVGUnitTypes;
 
-interface SVGUseElement extends SVGGraphicsElement, SVGURIReference {
+interface SVGUseElement extends EventTarget<SVGUseElement, SVGElementEventType>, SVGGraphicsElement, SVGURIReference {
     readonly animatedInstanceRoot: SVGElementInstance | null;
     readonly height: SVGAnimatedLength;
     readonly instanceRoot: SVGElementInstance | null;
     readonly width: SVGAnimatedLength;
     readonly x: SVGAnimatedLength;
     readonly y: SVGAnimatedLength;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGUseElement: {
@@ -12565,13 +11076,10 @@ declare var SVGUseElement: {
     new(): SVGUseElement;
 };
 
-interface SVGViewElement extends SVGElement, SVGFitToViewBox, SVGZoomAndPan {
+interface SVGViewElement extends EventTarget<SVGViewElement, SVGElementEventType>, SVGElement, SVGFitToViewBox, SVGZoomAndPan {
     /** @deprecated */
     readonly viewTarget: SVGStringList;
-    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SVGViewElement: {
@@ -12579,16 +11087,13 @@ declare var SVGViewElement: {
     new(): SVGViewElement;
 };
 
-interface SVGZoomAndPan {
+interface SVGZoomAndPan /*! @ooml-interface */ {
     readonly zoomAndPan: number;
+    /*! @ooml-static */ readonly SVG_ZOOMANDPAN_DISABLE: number;
+    /*! @ooml-static */ readonly SVG_ZOOMANDPAN_MAGNIFY: number;
+    /*! @ooml-static */ readonly SVG_ZOOMANDPAN_UNKNOWN: number;
 }
 
-declare var SVGZoomAndPan: {
-    readonly SVG_ZOOMANDPAN_DISABLE: number;
-    readonly SVG_ZOOMANDPAN_MAGNIFY: number;
-    readonly SVG_ZOOMANDPAN_UNKNOWN: number;
-};
-
 interface SVGZoomEvent extends UIEvent {
     readonly newScale: number;
     readonly newTranslate: SVGPoint;
@@ -12626,7 +11131,7 @@ interface ScreenEventMap {
     "MSOrientationChange": Event;
 }
 
-interface Screen extends EventTarget {
+interface Screen extends EventTarget<Screen, ScreenEventType> {
     readonly availHeight: number;
     readonly availWidth: number;
     /** @deprecated */
@@ -12639,7 +11144,6 @@ interface Screen extends EventTarget {
     readonly logicalXDPI: number;
     readonly logicalYDPI: number;
     readonly msOrientation: string;
-    onmsorientationchange: ((this: Screen, ev: Event) => any) | null;
     readonly pixelDepth: number;
     readonly systemXDPI: number;
     readonly systemYDPI: number;
@@ -12648,10 +11152,7 @@ interface Screen extends EventTarget {
     msLockOrientation(orientations: string | string[]): boolean;
     msUnlockOrientation(): void;
     unlockOrientation(): void;
-    addEventListener<K extends keyof ScreenEventMap>(type: K, listener: (this: Screen, ev: ScreenEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof ScreenEventMap>(type: K, listener: (this: Screen, ev: ScreenEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var Screen: {
@@ -12663,15 +11164,10 @@ interface ScriptProcessorNodeEventMap {
     "audioprocess": AudioProcessingEvent;
 }
 
-interface ScriptProcessorNode extends AudioNode {
+interface ScriptProcessorNode extends EventTarget<ScriptProcessorNode, ScriptProcessorNodeEventType>, AudioNode {
     /** @deprecated */
     readonly bufferSize: number;
-    /** @deprecated */
-    onaudioprocess: ((this: ScriptProcessorNode, ev: AudioProcessingEvent) => any) | null;
-    addEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var ScriptProcessorNode: {
@@ -12755,15 +11251,11 @@ interface ServiceWorkerEventMap extends AbstractWorkerEventMap {
     "statechange": Event;
 }
 
-interface ServiceWorker extends EventTarget, AbstractWorker {
-    onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;
+interface ServiceWorker extends EventTarget<ServiceWorker, ServiceWorkerEventType>, AbstractWorker {
     readonly scriptURL: string;
     readonly state: ServiceWorkerState;
     postMessage(message: any, transfer?: any[]): void;
-    addEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var ServiceWorker: {
@@ -12777,20 +11269,14 @@ interface ServiceWorkerContainerEventMap {
     "messageerror": MessageEvent;
 }
 
-interface ServiceWorkerContainer extends EventTarget {
+interface ServiceWorkerContainer extends EventTarget<ServiceWorkerContainer, ServiceWorkerContainerEventType> {
     readonly controller: ServiceWorker | null;
-    oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;
-    onmessage: ((this: ServiceWorkerContainer, ev: ServiceWorkerMessageEvent) => any) | null;
-    onmessageerror: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;
     readonly ready: Promise<ServiceWorkerRegistration>;
-    getRegistration(clientURL?: string): Promise<ServiceWorkerRegistration | undefined>;
+    getRegistration(clientURL?: string): Promise<ServiceWorkerRegistration | null>;
     getRegistrations(): Promise<ServiceWorkerRegistration[]>;
     register(scriptURL: string, options?: RegistrationOptions): Promise<ServiceWorkerRegistration>;
     startMessages(): void;
-    addEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var ServiceWorkerContainer: {
@@ -12815,10 +11301,9 @@ interface ServiceWorkerRegistrationEventMap {
     "updatefound": Event;
 }
 
-interface ServiceWorkerRegistration extends EventTarget {
+interface ServiceWorkerRegistration extends EventTarget<ServiceWorkerRegistration, ServiceWorkerRegistrationEventType> {
     readonly active: ServiceWorker | null;
     readonly installing: ServiceWorker | null;
-    onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;
     readonly pushManager: PushManager;
     readonly scope: string;
     readonly sync: SyncManager;
@@ -12827,10 +11312,7 @@ interface ServiceWorkerRegistration extends EventTarget {
     showNotification(title: string, options?: NotificationOptions): Promise<void>;
     unregister(): Promise<boolean>;
     update(): Promise<void>;
-    addEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var ServiceWorkerRegistration: {
@@ -12859,7 +11341,7 @@ interface SourceBuffer extends EventTarget {
     readonly updating: boolean;
     readonly videoTracks: VideoTrackList;
     abort(): void;
-    appendBuffer(data: ArrayBuffer | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;
+    appendBuffer(data: BufferSource | null): void;
     appendStream(stream: MSStream, maxSize?: number): void;
     remove(start: number, end: number): void;
 }
@@ -12884,8 +11366,7 @@ interface SpeechSynthesisEventMap {
     "voiceschanged": Event;
 }
 
-interface SpeechSynthesis extends EventTarget {
-    onvoiceschanged: ((this: SpeechSynthesis, ev: Event) => any) | null;
+interface SpeechSynthesis extends EventTarget<SpeechSynthesis, SpeechSynthesisEventType> {
     readonly paused: boolean;
     readonly pending: boolean;
     readonly speaking: boolean;
@@ -12894,10 +11375,7 @@ interface SpeechSynthesis extends EventTarget {
     pause(): void;
     resume(): void;
     speak(utterance: SpeechSynthesisUtterance): void;
-    addEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SpeechSynthesis: {
@@ -12928,24 +11406,14 @@ interface SpeechSynthesisUtteranceEventMap {
     "start": Event;
 }
 
-interface SpeechSynthesisUtterance extends EventTarget {
+interface SpeechSynthesisUtterance extends EventTarget<SpeechSynthesisUtterance, SpeechSynthesisUtteranceEventType> {
     lang: string;
-    onboundary: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;
-    onend: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;
-    onerror: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;
-    onmark: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;
-    onpause: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;
-    onresume: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;
-    onstart: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;
     pitch: number;
     rate: number;
     text: string;
     voice: SpeechSynthesisVoice;
     volume: number;
-    addEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var SpeechSynthesisUtterance: {
@@ -13049,24 +11517,20 @@ declare var StyleSheetList: {
 };
 
 interface SubtleCrypto {
-    decrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;
-    deriveBits(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, length: number): PromiseLike<ArrayBuffer>;
-    deriveKey(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: string | AesDerivedKeyParams | HmacImportParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;
-    digest(algorithm: string | Algorithm, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;
-    encrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;
-    exportKey(format: "jwk", key: CryptoKey): PromiseLike<JsonWebKey>;
-    exportKey(format: "raw" | "pkcs8" | "spki", key: CryptoKey): PromiseLike<ArrayBuffer>;
-    exportKey(format: string, key: CryptoKey): PromiseLike<JsonWebKey | ArrayBuffer>;
-    generateKey(algorithm: string, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKeyPair | CryptoKey>;
-    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams | DhKeyGenParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKeyPair>;
-    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;
-    importKey(format: "jwk", keyData: JsonWebKey, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;
-    importKey(format: "raw" | "pkcs8" | "spki", keyData: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;
-    importKey(format: string, keyData: JsonWebKey | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;
-    sign(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;
-    unwrapKey(format: string, wrappedKey: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: string | Algorithm, unwrappedKeyAlgorithm: string | Algorithm, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;
-    verify(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, signature: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<boolean>;
-    wrapKey(format: string, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: string | Algorithm): PromiseLike<ArrayBuffer>;
+    decrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: BufferSource): Promise<ArrayBuffer>;
+    deriveBits(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, length: number): Promise<ArrayBuffer>;
+    deriveKey(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: string | AesDerivedKeyParams | HmacImportParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): Promise<CryptoKey>;
+    digest(algorithm: AlgorithmIdentifier, data: BufferSource): Promise<ArrayBuffer>;
+    encrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: BufferSource): Promise<ArrayBuffer>;
+    exportKey(format: string, key: CryptoKey): Promise<JsonWebKey | ArrayBuffer>;
+    generateKey(algorithm: string, extractable: boolean, keyUsages: string[]): Promise<CryptoKeyPair | CryptoKey>;
+    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams | DhKeyGenParams, extractable: boolean, keyUsages: string[]): Promise<CryptoKeyPair>;
+    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): Promise<CryptoKey>;
+    importKey(format: string, keyData: JsonWebKey | BufferSource, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): Promise<CryptoKey>;
+    sign(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, data: BufferSource): Promise<ArrayBuffer>;
+    unwrapKey(format: string, wrappedKey: BufferSource, unwrappingKey: CryptoKey, unwrapAlgorithm: AlgorithmIdentifier, unwrappedKeyAlgorithm: AlgorithmIdentifier, extractable: boolean, keyUsages: string[]): Promise<CryptoKey>;
+    verify(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, signature: BufferSource, data: BufferSource): Promise<boolean>;
+    wrapKey(format: string, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: AlgorithmIdentifier): Promise<ArrayBuffer>;
 }
 
 declare var SubtleCrypto: {
@@ -13099,7 +11563,7 @@ interface TextDecoder {
     readonly encoding: string;
     readonly fatal: boolean;
     readonly ignoreBOM: boolean;
-    decode(input?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, options?: TextDecodeOptions): string;
+    decode(input?: BufferSource | null, options?: TextDecodeOptions): string;
 }
 
 declare var TextDecoder: {
@@ -13120,16 +11584,6 @@ declare var TextEncoder: {
 interface TextEvent extends UIEvent {
     readonly data: string;
     initTextEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, dataArg: string, inputMethod: number, locale: string): void;
-    readonly DOM_INPUT_METHOD_DROP: number;
-    readonly DOM_INPUT_METHOD_HANDWRITING: number;
-    readonly DOM_INPUT_METHOD_IME: number;
-    readonly DOM_INPUT_METHOD_KEYBOARD: number;
-    readonly DOM_INPUT_METHOD_MULTIMODAL: number;
-    readonly DOM_INPUT_METHOD_OPTION: number;
-    readonly DOM_INPUT_METHOD_PASTE: number;
-    readonly DOM_INPUT_METHOD_SCRIPT: number;
-    readonly DOM_INPUT_METHOD_UNKNOWN: number;
-    readonly DOM_INPUT_METHOD_VOICE: number;
 }
 
 declare var TextEvent: {
@@ -13162,7 +11616,7 @@ interface TextTrackEventMap {
     "load": Event;
 }
 
-interface TextTrack extends EventTarget {
+interface TextTrack extends EventTarget<TextTrack, TextTrackEventType> {
     readonly activeCues: TextTrackCueList;
     readonly cues: TextTrackCueList;
     readonly inBandMetadataTrackDispatchType: string;
@@ -13170,23 +11624,10 @@ interface TextTrack extends EventTarget {
     readonly label: string;
     readonly language: string;
     mode: TextTrackMode | number;
-    oncuechange: ((this: TextTrack, ev: Event) => any) | null;
-    onerror: ((this: TextTrack, ev: Event) => any) | null;
-    onload: ((this: TextTrack, ev: Event) => any) | null;
     readonly readyState: number;
     addCue(cue: TextTrackCue): void;
     removeCue(cue: TextTrackCue): void;
-    readonly DISABLED: number;
-    readonly ERROR: number;
-    readonly HIDDEN: number;
-    readonly LOADED: number;
-    readonly LOADING: number;
-    readonly NONE: number;
-    readonly SHOWING: number;
-    addEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var TextTrack: {
@@ -13206,20 +11647,15 @@ interface TextTrackCueEventMap {
     "exit": Event;
 }
 
-interface TextTrackCue extends EventTarget {
+interface TextTrackCue extends EventTarget<TextTrackCue, TextTrackCueEventType> {
     endTime: number;
     id: string;
-    onenter: ((this: TextTrackCue, ev: Event) => any) | null;
-    onexit: ((this: TextTrackCue, ev: Event) => any) | null;
     pauseOnExit: boolean;
     startTime: number;
     text: string;
     readonly track: TextTrack;
     getCueAsHTML(): DocumentFragment;
-    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var TextTrackCue: {
@@ -13243,14 +11679,11 @@ interface TextTrackListEventMap {
     "addtrack": TrackEvent;
 }
 
-interface TextTrackList extends EventTarget {
+interface TextTrackList extends EventTarget<TextTrackList, TextTrackListEventType> {
     readonly length: number;
-    onaddtrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;
     item(index: number): TextTrack;
-    addEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
+
     [index: number]: TextTrack;
 }
 
@@ -13585,18 +12018,13 @@ interface VideoTrackListEventMap {
     "removetrack": TrackEvent;
 }
 
-interface VideoTrackList extends EventTarget {
+interface VideoTrackList extends EventTarget<VideoTrackList, VideoTrackListEventType> {
     readonly length: number;
-    onaddtrack: ((this: VideoTrackList, ev: TrackEvent) => any) | null;
-    onchange: ((this: VideoTrackList, ev: Event) => any) | null;
-    onremovetrack: ((this: VideoTrackList, ev: TrackEvent) => any) | null;
     readonly selectedIndex: number;
     getTrackById(id: string): VideoTrack | null;
     item(index: number): VideoTrack;
-    addEventListener<K extends keyof VideoTrackListEventMap>(type: K, listener: (this: VideoTrackList, ev: VideoTrackListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof VideoTrackListEventMap>(type: K, listener: (this: VideoTrackList, ev: VideoTrackListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
+
     [index: number]: VideoTrack;
 }
 
@@ -13605,50 +12033,46 @@ declare var VideoTrackList: {
     new(): VideoTrackList;
 };
 
-interface WEBGL_color_buffer_float {
-    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: number;
-    readonly RGB32F_EXT: number;
-    readonly RGBA32F_EXT: number;
-    readonly UNSIGNED_NORMALIZED_EXT: number;
-}
-
-interface WEBGL_compressed_texture_astc {
-    readonly COMPRESSED_RGBA_ASTC_10x10_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_10x5_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_10x6_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_10x8_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_12x10_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_12x12_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_4x4_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_5x4_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_5x5_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_6x5_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_6x6_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_8x5_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_8x6_KHR: number;
-    readonly COMPRESSED_RGBA_ASTC_8x8_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: number;
-    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: number;
-    getSupportedProfiles(): string[];
+interface WEBGL_color_buffer_float /*! @ooml-static */ {
+  readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: number;
+  readonly RGB32F_EXT: number;
+  readonly RGBA32F_EXT: number;
+  readonly UNSIGNED_NORMALIZED_EXT: number;
+}
+
+interface WEBGL_compressed_texture_astc /*! @ooml-static */ {
+  readonly COMPRESSED_RGBA_ASTC_10x10_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_10x5_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_10x6_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_10x8_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_12x10_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_12x12_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_4x4_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_5x4_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_5x5_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_6x5_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_6x6_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_8x5_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_8x6_KHR: number;
+  readonly COMPRESSED_RGBA_ASTC_8x8_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: number;
+  readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: number;
+  getSupportedProfiles(): string[];
 }
 
 interface WEBGL_compressed_texture_s3tc {
-    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: number;
-    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: number;
-    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: number;
-    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: number;
 }
 
 declare var WEBGL_compressed_texture_s3tc: {
@@ -13660,7 +12084,7 @@ declare var WEBGL_compressed_texture_s3tc: {
     readonly COMPRESSED_RGB_S3TC_DXT1_EXT: number;
 };
 
-interface WEBGL_compressed_texture_s3tc_srgb {
+interface WEBGL_compressed_texture_s3tc_srgb /*! @ooml-static */ {
     readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: number;
     readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: number;
     readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: number;
@@ -13668,8 +12092,6 @@ interface WEBGL_compressed_texture_s3tc_srgb {
 }
 
 interface WEBGL_debug_renderer_info {
-    readonly UNMASKED_RENDERER_WEBGL: number;
-    readonly UNMASKED_VENDOR_WEBGL: number;
 }
 
 declare var WEBGL_debug_renderer_info: {
@@ -13684,7 +12106,6 @@ interface WEBGL_debug_shaders {
 }
 
 interface WEBGL_depth_texture {
-    readonly UNSIGNED_INT_24_8_WEBGL: number;
 }
 
 declare var WEBGL_depth_texture: {
@@ -13693,7 +12114,7 @@ declare var WEBGL_depth_texture: {
     readonly UNSIGNED_INT_24_8_WEBGL: number;
 };
 
-interface WEBGL_draw_buffers {
+interface WEBGL_draw_buffers /*! @ooml-static */ {
     readonly COLOR_ATTACHMENT0_WEBGL: number;
     readonly COLOR_ATTACHMENT10_WEBGL: number;
     readonly COLOR_ATTACHMENT11_WEBGL: number;
@@ -13747,8 +12168,8 @@ declare var WaveShaperNode: {
 };
 
 interface WebAuthentication {
-    getAssertion(assertionChallenge: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, options?: AssertionOptions): Promise<WebAuthnAssertion>;
-    makeCredential(accountInformation: Account, cryptoParameters: ScopedCredentialParameters[], attestationChallenge: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, options?: ScopedCredentialOptions): Promise<ScopedCredentialInfo>;
+    getAssertion(assertionChallenge: BufferSource | null, options?: AssertionOptions): Promise<WebAuthnAssertion>;
+    makeCredential(accountInformation: Account, cryptoParameters: ScopedCredentialParameters[], attestationChallenge: BufferSource | null, options?: ScopedCredentialOptions): Promise<ScopedCredentialInfo>;
 }
 
 declare var WebAuthentication: {
@@ -13844,8 +12265,8 @@ interface WebGLRenderingContext {
     blendEquationSeparate(modeRGB: number, modeAlpha: number): void;
     blendFunc(sfactor: number, dfactor: number): void;
     blendFuncSeparate(srcRGB: number, dstRGB: number, srcAlpha: number, dstAlpha: number): void;
-    bufferData(target: number, size: number | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, usage: number): void;
-    bufferSubData(target: number, offset: number, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): void;
+    bufferData(target: number, size: number | BufferSource | null, usage: number): void;
+    bufferSubData(target: number, offset: number, data: BufferSource | null): void;
     checkFramebufferStatus(target: number): number;
     clear(mask: number): void;
     clearColor(red: number, green: number, blue: number, alpha: number): void;
@@ -13853,8 +12274,8 @@ interface WebGLRenderingContext {
     clearStencil(s: number): void;
     colorMask(red: boolean, green: boolean, blue: boolean, alpha: boolean): void;
     compileShader(shader: WebGLShader | null): void;
-    compressedTexImage2D(target: number, level: number, internalformat: number, width: number, height: number, border: number, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;
-    compressedTexSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;
+    compressedTexImage2D(target: number, level: number, internalformat: number, width: number, height: number, border: number, data: ArrayBufferView | null): void;
+    compressedTexSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, data: ArrayBufferView | null): void;
     copyTexImage2D(target: number, level: number, internalformat: number, x: number, y: number, width: number, height: number, border: number): void;
     copyTexSubImage2D(target: number, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number): void;
     createBuffer(): WebGLBuffer | null;
@@ -13893,28 +12314,6 @@ interface WebGLRenderingContext {
     getBufferParameter(target: number, pname: number): any;
     getContextAttributes(): WebGLContextAttributes;
     getError(): number;
-    getExtension(extensionName: "EXT_blend_minmax"): EXT_blend_minmax | null;
-    getExtension(extensionName: "EXT_texture_filter_anisotropic"): EXT_texture_filter_anisotropic | null;
-    getExtension(extensionName: "EXT_frag_depth"): EXT_frag_depth | null;
-    getExtension(extensionName: "EXT_shader_texture_lod"): EXT_shader_texture_lod | null;
-    getExtension(extensionName: "EXT_sRGB"): EXT_sRGB | null;
-    getExtension(extensionName: "OES_vertex_array_object"): OES_vertex_array_object | null;
-    getExtension(extensionName: "WEBGL_color_buffer_float"): WEBGL_color_buffer_float | null;
-    getExtension(extensionName: "WEBGL_compressed_texture_astc"): WEBGL_compressed_texture_astc | null;
-    getExtension(extensionName: "WEBGL_compressed_texture_s3tc_srgb"): WEBGL_compressed_texture_s3tc_srgb | null;
-    getExtension(extensionName: "WEBGL_debug_shaders"): WEBGL_debug_shaders | null;
-    getExtension(extensionName: "WEBGL_draw_buffers"): WEBGL_draw_buffers | null;
-    getExtension(extensionName: "WEBGL_lose_context"): WEBGL_lose_context | null;
-    getExtension(extensionName: "WEBGL_depth_texture"): WEBGL_depth_texture | null;
-    getExtension(extensionName: "WEBGL_debug_renderer_info"): WEBGL_debug_renderer_info | null;
-    getExtension(extensionName: "WEBGL_compressed_texture_s3tc"): WEBGL_compressed_texture_s3tc | null;
-    getExtension(extensionName: "OES_texture_half_float_linear"): OES_texture_half_float_linear | null;
-    getExtension(extensionName: "OES_texture_half_float"): OES_texture_half_float | null;
-    getExtension(extensionName: "OES_texture_float_linear"): OES_texture_float_linear | null;
-    getExtension(extensionName: "OES_texture_float"): OES_texture_float | null;
-    getExtension(extensionName: "OES_standard_derivatives"): OES_standard_derivatives | null;
-    getExtension(extensionName: "OES_element_index_uint"): OES_element_index_uint | null;
-    getExtension(extensionName: "ANGLE_instanced_arrays"): ANGLE_instanced_arrays | null;
     getExtension(extensionName: string): any;
     getFramebufferAttachmentParameter(target: number, attachment: number, pname: number): any;
     getParameter(pname: number): any;
@@ -13944,7 +12343,7 @@ interface WebGLRenderingContext {
     linkProgram(program: WebGLProgram | null): void;
     pixelStorei(pname: number, param: number | boolean): void;
     polygonOffset(factor: number, units: number): void;
-    readPixels(x: number, y: number, width: number, height: number, format: number, type: number, pixels: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;
+    readPixels(x: number, y: number, width: number, height: number, format: number, type: number, pixels: ArrayBufferView | null): void;
     renderbufferStorage(target: number, internalformat: number, width: number, height: number): void;
     sampleCoverage(value: number, invert: boolean): void;
     scissor(x: number, y: number, width: number, height: number): void;
@@ -13962,24 +12361,24 @@ interface WebGLRenderingContext {
     texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, type: number, pixels: ArrayBufferView | null): void;
     texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, pixels: ImageBitmap | ImageData | HTMLVideoElement | HTMLImageElement | HTMLCanvasElement): void;
     uniform1f(location: WebGLUniformLocation | null, x: number): void;
-    uniform1fv(location: WebGLUniformLocation | null, v: Float32Array | ArrayLike<number>): void;
+    uniform1fv(location: WebGLUniformLocation | null, v: Float32Array | Array<number>): void;
     uniform1i(location: WebGLUniformLocation | null, x: number): void;
-    uniform1iv(location: WebGLUniformLocation | null, v: Int32Array | ArrayLike<number>): void;
+    uniform1iv(location: WebGLUniformLocation | null, v: Int32Array | Array<number>): void;
     uniform2f(location: WebGLUniformLocation | null, x: number, y: number): void;
-    uniform2fv(location: WebGLUniformLocation | null, v: Float32Array | ArrayLike<number>): void;
+    uniform2fv(location: WebGLUniformLocation | null, v: Float32Array | Array<number>): void;
     uniform2i(location: WebGLUniformLocation | null, x: number, y: number): void;
-    uniform2iv(location: WebGLUniformLocation | null, v: Int32Array | ArrayLike<number>): void;
+    uniform2iv(location: WebGLUniformLocation | null, v: Int32Array | Array<number>): void;
     uniform3f(location: WebGLUniformLocation | null, x: number, y: number, z: number): void;
-    uniform3fv(location: WebGLUniformLocation | null, v: Float32Array | ArrayLike<number>): void;
+    uniform3fv(location: WebGLUniformLocation | null, v: Float32Array | Array<number>): void;
     uniform3i(location: WebGLUniformLocation | null, x: number, y: number, z: number): void;
-    uniform3iv(location: WebGLUniformLocation | null, v: Int32Array | ArrayLike<number>): void;
+    uniform3iv(location: WebGLUniformLocation | null, v: Int32Array | Array<number>): void;
     uniform4f(location: WebGLUniformLocation | null, x: number, y: number, z: number, w: number): void;
-    uniform4fv(location: WebGLUniformLocation | null, v: Float32Array | ArrayLike<number>): void;
+    uniform4fv(location: WebGLUniformLocation | null, v: Float32Array | Array<number>): void;
     uniform4i(location: WebGLUniformLocation | null, x: number, y: number, z: number, w: number): void;
-    uniform4iv(location: WebGLUniformLocation | null, v: Int32Array | ArrayLike<number>): void;
-    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: boolean, value: Float32Array | ArrayLike<number>): void;
-    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: boolean, value: Float32Array | ArrayLike<number>): void;
-    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: boolean, value: Float32Array | ArrayLike<number>): void;
+    uniform4iv(location: WebGLUniformLocation | null, v: Int32Array | Array<number>): void;
+    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: boolean, value: Float32Array | Array<number>): void;
+    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: boolean, value: Float32Array | Array<number>): void;
+    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: boolean, value: Float32Array | Array<number>): void;
     useProgram(program: WebGLProgram | null): void;
     validateProgram(program: WebGLProgram | null): void;
     vertexAttrib1f(indx: number, x: number): void;
@@ -13992,303 +12391,6 @@ interface WebGLRenderingContext {
     vertexAttrib4fv(indx: number, values: Float32Array | number[]): void;
     vertexAttribPointer(indx: number, size: number, type: number, normalized: boolean, stride: number, offset: number): void;
     viewport(x: number, y: number, width: number, height: number): void;
-    readonly ACTIVE_ATTRIBUTES: number;
-    readonly ACTIVE_TEXTURE: number;
-    readonly ACTIVE_UNIFORMS: number;
-    readonly ALIASED_LINE_WIDTH_RANGE: number;
-    readonly ALIASED_POINT_SIZE_RANGE: number;
-    readonly ALPHA: number;
-    readonly ALPHA_BITS: number;
-    readonly ALWAYS: number;
-    readonly ARRAY_BUFFER: number;
-    readonly ARRAY_BUFFER_BINDING: number;
-    readonly ATTACHED_SHADERS: number;
-    readonly BACK: number;
-    readonly BLEND: number;
-    readonly BLEND_COLOR: number;
-    readonly BLEND_DST_ALPHA: number;
-    readonly BLEND_DST_RGB: number;
-    readonly BLEND_EQUATION: number;
-    readonly BLEND_EQUATION_ALPHA: number;
-    readonly BLEND_EQUATION_RGB: number;
-    readonly BLEND_SRC_ALPHA: number;
-    readonly BLEND_SRC_RGB: number;
-    readonly BLUE_BITS: number;
-    readonly BOOL: number;
-    readonly BOOL_VEC2: number;
-    readonly BOOL_VEC3: number;
-    readonly BOOL_VEC4: number;
-    readonly BROWSER_DEFAULT_WEBGL: number;
-    readonly BUFFER_SIZE: number;
-    readonly BUFFER_USAGE: number;
-    readonly BYTE: number;
-    readonly CCW: number;
-    readonly CLAMP_TO_EDGE: number;
-    readonly COLOR_ATTACHMENT0: number;
-    readonly COLOR_BUFFER_BIT: number;
-    readonly COLOR_CLEAR_VALUE: number;
-    readonly COLOR_WRITEMASK: number;
-    readonly COMPILE_STATUS: number;
-    readonly COMPRESSED_TEXTURE_FORMATS: number;
-    readonly CONSTANT_ALPHA: number;
-    readonly CONSTANT_COLOR: number;
-    readonly CONTEXT_LOST_WEBGL: number;
-    readonly CULL_FACE: number;
-    readonly CULL_FACE_MODE: number;
-    readonly CURRENT_PROGRAM: number;
-    readonly CURRENT_VERTEX_ATTRIB: number;
-    readonly CW: number;
-    readonly DECR: number;
-    readonly DECR_WRAP: number;
-    readonly DELETE_STATUS: number;
-    readonly DEPTH_ATTACHMENT: number;
-    readonly DEPTH_BITS: number;
-    readonly DEPTH_BUFFER_BIT: number;
-    readonly DEPTH_CLEAR_VALUE: number;
-    readonly DEPTH_COMPONENT: number;
-    readonly DEPTH_COMPONENT16: number;
-    readonly DEPTH_FUNC: number;
-    readonly DEPTH_RANGE: number;
-    readonly DEPTH_STENCIL: number;
-    readonly DEPTH_STENCIL_ATTACHMENT: number;
-    readonly DEPTH_TEST: number;
-    readonly DEPTH_WRITEMASK: number;
-    readonly DITHER: number;
-    readonly DONT_CARE: number;
-    readonly DST_ALPHA: number;
-    readonly DST_COLOR: number;
-    readonly DYNAMIC_DRAW: number;
-    readonly ELEMENT_ARRAY_BUFFER: number;
-    readonly ELEMENT_ARRAY_BUFFER_BINDING: number;
-    readonly EQUAL: number;
-    readonly FASTEST: number;
-    readonly FLOAT: number;
-    readonly FLOAT_MAT2: number;
-    readonly FLOAT_MAT3: number;
-    readonly FLOAT_MAT4: number;
-    readonly FLOAT_VEC2: number;
-    readonly FLOAT_VEC3: number;
-    readonly FLOAT_VEC4: number;
-    readonly FRAGMENT_SHADER: number;
-    readonly FRAMEBUFFER: number;
-    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: number;
-    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: number;
-    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: number;
-    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: number;
-    readonly FRAMEBUFFER_BINDING: number;
-    readonly FRAMEBUFFER_COMPLETE: number;
-    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: number;
-    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: number;
-    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: number;
-    readonly FRAMEBUFFER_UNSUPPORTED: number;
-    readonly FRONT: number;
-    readonly FRONT_AND_BACK: number;
-    readonly FRONT_FACE: number;
-    readonly FUNC_ADD: number;
-    readonly FUNC_REVERSE_SUBTRACT: number;
-    readonly FUNC_SUBTRACT: number;
-    readonly GENERATE_MIPMAP_HINT: number;
-    readonly GEQUAL: number;
-    readonly GREATER: number;
-    readonly GREEN_BITS: number;
-    readonly HIGH_FLOAT: number;
-    readonly HIGH_INT: number;
-    readonly IMPLEMENTATION_COLOR_READ_FORMAT: number;
-    readonly IMPLEMENTATION_COLOR_READ_TYPE: number;
-    readonly INCR: number;
-    readonly INCR_WRAP: number;
-    readonly INT: number;
-    readonly INT_VEC2: number;
-    readonly INT_VEC3: number;
-    readonly INT_VEC4: number;
-    readonly INVALID_ENUM: number;
-    readonly INVALID_FRAMEBUFFER_OPERATION: number;
-    readonly INVALID_OPERATION: number;
-    readonly INVALID_VALUE: number;
-    readonly INVERT: number;
-    readonly KEEP: number;
-    readonly LEQUAL: number;
-    readonly LESS: number;
-    readonly LINEAR: number;
-    readonly LINEAR_MIPMAP_LINEAR: number;
-    readonly LINEAR_MIPMAP_NEAREST: number;
-    readonly LINES: number;
-    readonly LINE_LOOP: number;
-    readonly LINE_STRIP: number;
-    readonly LINE_WIDTH: number;
-    readonly LINK_STATUS: number;
-    readonly LOW_FLOAT: number;
-    readonly LOW_INT: number;
-    readonly LUMINANCE: number;
-    readonly LUMINANCE_ALPHA: number;
-    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: number;
-    readonly MAX_CUBE_MAP_TEXTURE_SIZE: number;
-    readonly MAX_FRAGMENT_UNIFORM_VECTORS: number;
-    readonly MAX_RENDERBUFFER_SIZE: number;
-    readonly MAX_TEXTURE_IMAGE_UNITS: number;
-    readonly MAX_TEXTURE_SIZE: number;
-    readonly MAX_VARYING_VECTORS: number;
-    readonly MAX_VERTEX_ATTRIBS: number;
-    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: number;
-    readonly MAX_VERTEX_UNIFORM_VECTORS: number;
-    readonly MAX_VIEWPORT_DIMS: number;
-    readonly MEDIUM_FLOAT: number;
-    readonly MEDIUM_INT: number;
-    readonly MIRRORED_REPEAT: number;
-    readonly NEAREST: number;
-    readonly NEAREST_MIPMAP_LINEAR: number;
-    readonly NEAREST_MIPMAP_NEAREST: number;
-    readonly NEVER: number;
-    readonly NICEST: number;
-    readonly NONE: number;
-    readonly NOTEQUAL: number;
-    readonly NO_ERROR: number;
-    readonly ONE: number;
-    readonly ONE_MINUS_CONSTANT_ALPHA: number;
-    readonly ONE_MINUS_CONSTANT_COLOR: number;
-    readonly ONE_MINUS_DST_ALPHA: number;
-    readonly ONE_MINUS_DST_COLOR: number;
-    readonly ONE_MINUS_SRC_ALPHA: number;
-    readonly ONE_MINUS_SRC_COLOR: number;
-    readonly OUT_OF_MEMORY: number;
-    readonly PACK_ALIGNMENT: number;
-    readonly POINTS: number;
-    readonly POLYGON_OFFSET_FACTOR: number;
-    readonly POLYGON_OFFSET_FILL: number;
-    readonly POLYGON_OFFSET_UNITS: number;
-    readonly RED_BITS: number;
-    readonly RENDERBUFFER: number;
-    readonly RENDERBUFFER_ALPHA_SIZE: number;
-    readonly RENDERBUFFER_BINDING: number;
-    readonly RENDERBUFFER_BLUE_SIZE: number;
-    readonly RENDERBUFFER_DEPTH_SIZE: number;
-    readonly RENDERBUFFER_GREEN_SIZE: number;
-    readonly RENDERBUFFER_HEIGHT: number;
-    readonly RENDERBUFFER_INTERNAL_FORMAT: number;
-    readonly RENDERBUFFER_RED_SIZE: number;
-    readonly RENDERBUFFER_STENCIL_SIZE: number;
-    readonly RENDERBUFFER_WIDTH: number;
-    readonly RENDERER: number;
-    readonly REPEAT: number;
-    readonly REPLACE: number;
-    readonly RGB: number;
-    readonly RGB565: number;
-    readonly RGB5_A1: number;
-    readonly RGBA: number;
-    readonly RGBA4: number;
-    readonly SAMPLER_2D: number;
-    readonly SAMPLER_CUBE: number;
-    readonly SAMPLES: number;
-    readonly SAMPLE_ALPHA_TO_COVERAGE: number;
-    readonly SAMPLE_BUFFERS: number;
-    readonly SAMPLE_COVERAGE: number;
-    readonly SAMPLE_COVERAGE_INVERT: number;
-    readonly SAMPLE_COVERAGE_VALUE: number;
-    readonly SCISSOR_BOX: number;
-    readonly SCISSOR_TEST: number;
-    readonly SHADER_TYPE: number;
-    readonly SHADING_LANGUAGE_VERSION: number;
-    readonly SHORT: number;
-    readonly SRC_ALPHA: number;
-    readonly SRC_ALPHA_SATURATE: number;
-    readonly SRC_COLOR: number;
-    readonly STATIC_DRAW: number;
-    readonly STENCIL_ATTACHMENT: number;
-    readonly STENCIL_BACK_FAIL: number;
-    readonly STENCIL_BACK_FUNC: number;
-    readonly STENCIL_BACK_PASS_DEPTH_FAIL: number;
-    readonly STENCIL_BACK_PASS_DEPTH_PASS: number;
-    readonly STENCIL_BACK_REF: number;
-    readonly STENCIL_BACK_VALUE_MASK: number;
-    readonly STENCIL_BACK_WRITEMASK: number;
-    readonly STENCIL_BITS: number;
-    readonly STENCIL_BUFFER_BIT: number;
-    readonly STENCIL_CLEAR_VALUE: number;
-    readonly STENCIL_FAIL: number;
-    readonly STENCIL_FUNC: number;
-    readonly STENCIL_INDEX: number;
-    readonly STENCIL_INDEX8: number;
-    readonly STENCIL_PASS_DEPTH_FAIL: number;
-    readonly STENCIL_PASS_DEPTH_PASS: number;
-    readonly STENCIL_REF: number;
-    readonly STENCIL_TEST: number;
-    readonly STENCIL_VALUE_MASK: number;
-    readonly STENCIL_WRITEMASK: number;
-    readonly STREAM_DRAW: number;
-    readonly SUBPIXEL_BITS: number;
-    readonly TEXTURE: number;
-    readonly TEXTURE0: number;
-    readonly TEXTURE1: number;
-    readonly TEXTURE10: number;
-    readonly TEXTURE11: number;
-    readonly TEXTURE12: number;
-    readonly TEXTURE13: number;
-    readonly TEXTURE14: number;
-    readonly TEXTURE15: number;
-    readonly TEXTURE16: number;
-    readonly TEXTURE17: number;
-    readonly TEXTURE18: number;
-    readonly TEXTURE19: number;
-    readonly TEXTURE2: number;
-    readonly TEXTURE20: number;
-    readonly TEXTURE21: number;
-    readonly TEXTURE22: number;
-    readonly TEXTURE23: number;
-    readonly TEXTURE24: number;
-    readonly TEXTURE25: number;
-    readonly TEXTURE26: number;
-    readonly TEXTURE27: number;
-    readonly TEXTURE28: number;
-    readonly TEXTURE29: number;
-    readonly TEXTURE3: number;
-    readonly TEXTURE30: number;
-    readonly TEXTURE31: number;
-    readonly TEXTURE4: number;
-    readonly TEXTURE5: number;
-    readonly TEXTURE6: number;
-    readonly TEXTURE7: number;
-    readonly TEXTURE8: number;
-    readonly TEXTURE9: number;
-    readonly TEXTURE_2D: number;
-    readonly TEXTURE_BINDING_2D: number;
-    readonly TEXTURE_BINDING_CUBE_MAP: number;
-    readonly TEXTURE_CUBE_MAP: number;
-    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: number;
-    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: number;
-    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: number;
-    readonly TEXTURE_CUBE_MAP_POSITIVE_X: number;
-    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: number;
-    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: number;
-    readonly TEXTURE_MAG_FILTER: number;
-    readonly TEXTURE_MIN_FILTER: number;
-    readonly TEXTURE_WRAP_S: number;
-    readonly TEXTURE_WRAP_T: number;
-    readonly TRIANGLES: number;
-    readonly TRIANGLE_FAN: number;
-    readonly TRIANGLE_STRIP: number;
-    readonly UNPACK_ALIGNMENT: number;
-    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: number;
-    readonly UNPACK_FLIP_Y_WEBGL: number;
-    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: number;
-    readonly UNSIGNED_BYTE: number;
-    readonly UNSIGNED_INT: number;
-    readonly UNSIGNED_SHORT: number;
-    readonly UNSIGNED_SHORT_4_4_4_4: number;
-    readonly UNSIGNED_SHORT_5_5_5_1: number;
-    readonly UNSIGNED_SHORT_5_6_5: number;
-    readonly VALIDATE_STATUS: number;
-    readonly VENDOR: number;
-    readonly VERSION: number;
-    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: number;
-    readonly VERTEX_ATTRIB_ARRAY_ENABLED: number;
-    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: number;
-    readonly VERTEX_ATTRIB_ARRAY_POINTER: number;
-    readonly VERTEX_ATTRIB_ARRAY_SIZE: number;
-    readonly VERTEX_ATTRIB_ARRAY_STRIDE: number;
-    readonly VERTEX_ATTRIB_ARRAY_TYPE: number;
-    readonly VERTEX_SHADER: number;
-    readonly VIEWPORT: number;
-    readonly ZERO: number;
 }
 
 declare var WebGLRenderingContext: {
@@ -14738,27 +12840,16 @@ interface WebSocketEventMap {
     "open": Event;
 }
 
-interface WebSocket extends EventTarget {
+interface WebSocket extends EventTarget<WebSocket, WebSocketEventType> {
     binaryType: BinaryType;
     readonly bufferedAmount: number;
     readonly extensions: string;
-    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;
-    onerror: ((this: WebSocket, ev: Event) => any) | null;
-    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;
-    onopen: ((this: WebSocket, ev: Event) => any) | null;
     readonly protocol: string;
     readonly readyState: number;
     readonly url: string;
     close(code?: number, reason?: string): void;
-    send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void;
-    readonly CLOSED: number;
-    readonly CLOSING: number;
-    readonly CONNECTING: number;
-    readonly OPEN: number;
-    addEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+    send(data: string | BufferSource | Blob): void;
+
 }
 
 declare var WebSocket: {
@@ -14780,9 +12871,6 @@ interface WheelEvent extends MouseEvent {
     readonly wheelDeltaY: number;
     getCurrentPoint(element: Element): void;
     initWheelEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, buttonArg: number, relatedTargetArg: EventTarget, modifiersListArg: string, deltaXArg: number, deltaYArg: number, deltaZArg: number, deltaMode: number): void;
-    readonly DOM_DELTA_LINE: number;
-    readonly DOM_DELTA_PAGE: number;
-    readonly DOM_DELTA_PIXEL: number;
 }
 
 declare var WheelEvent: {
@@ -14896,10 +12984,21 @@ interface WindowEventMap extends GlobalEventHandlersEventMap {
     "waiting": Event;
 }
 
-interface Window extends EventTarget, WindowTimers, WindowSessionStorage, WindowLocalStorage, WindowConsole, GlobalEventHandlers, IDBEnvironment, WindowBase64, GlobalFetch {
-    Blob: typeof Blob;
-    URL: typeof URL;
-    URLSearchParams: typeof URLSearchParams;
+interface Window extends EventTarget<Window, WindowEventType>, GlobalEventHandlers {
+  clearInterval(handle: number): void;
+  clearTimeout(handle: number): void;
+  setInterval(handler: (...args: any[]) => void, timeout: number): number;
+  setTimeout(handler: (...args: any[]) => void, timeout: number): number;
+  fetch(input?: Request | string, init?: RequestInit): Promise<Response>;
+  atob(encodedString: string): string;
+  btoa(rawString: string): string;
+  readonly indexedDB: IDBFactory;
+  readonly console: Console;
+  readonly localStorage: Storage;
+  readonly sessionStorage: Storage;
+    Blob: Blob;
+    URL: URL;
+    URLSearchParams: URLSearchParams;
     readonly applicationCache: ApplicationCache;
     readonly caches: CacheStorage;
     readonly clientInformation: Navigator;
@@ -14910,7 +13009,7 @@ interface Window extends EventTarget, WindowTimers, WindowSessionStorage, Window
     readonly devicePixelRatio: number;
     readonly doNotTrack: string;
     readonly document: Document;
-    event: Event | undefined;
+    event: Event | null;
     readonly external: External;
     readonly frameElement: Element;
     readonly frames: Window;
@@ -14927,106 +13026,6 @@ interface Window extends EventTarget, WindowTimers, WindowSessionStorage, Window
     name: string;
     readonly navigator: Navigator;
     offscreenBuffering: string | boolean;
-    onabort: ((this: Window, ev: UIEvent) => any) | null;
-    onafterprint: ((this: Window, ev: Event) => any) | null;
-    onbeforeprint: ((this: Window, ev: Event) => any) | null;
-    onbeforeunload: ((this: Window, ev: BeforeUnloadEvent) => any) | null;
-    onblur: ((this: Window, ev: FocusEvent) => any) | null;
-    oncanplay: ((this: Window, ev: Event) => any) | null;
-    oncanplaythrough: ((this: Window, ev: Event) => any) | null;
-    onchange: ((this: Window, ev: Event) => any) | null;
-    onclick: ((this: Window, ev: MouseEvent) => any) | null;
-    oncompassneedscalibration: ((this: Window, ev: Event) => any) | null;
-    oncontextmenu: ((this: Window, ev: PointerEvent) => any) | null;
-    ondblclick: ((this: Window, ev: MouseEvent) => any) | null;
-    ondevicelight: ((this: Window, ev: DeviceLightEvent) => any) | null;
-    ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;
-    ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;
-    ondrag: ((this: Window, ev: DragEvent) => any) | null;
-    ondragend: ((this: Window, ev: DragEvent) => any) | null;
-    ondragenter: ((this: Window, ev: DragEvent) => any) | null;
-    ondragleave: ((this: Window, ev: DragEvent) => any) | null;
-    ondragover: ((this: Window, ev: DragEvent) => any) | null;
-    ondragstart: ((this: Window, ev: DragEvent) => any) | null;
-    ondrop: ((this: Window, ev: DragEvent) => any) | null;
-    ondurationchange: ((this: Window, ev: Event) => any) | null;
-    onemptied: ((this: Window, ev: Event) => any) | null;
-    onended: ((this: Window, ev: Event) => any) | null;
-    onerror: ErrorEventHandler;
-    onfocus: ((this: Window, ev: FocusEvent) => any) | null;
-    onhashchange: ((this: Window, ev: HashChangeEvent) => any) | null;
-    oninput: ((this: Window, ev: Event) => any) | null;
-    oninvalid: ((this: Window, ev: Event) => any) | null;
-    onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;
-    onkeypress: ((this: Window, ev: KeyboardEvent) => any) | null;
-    onkeyup: ((this: Window, ev: KeyboardEvent) => any) | null;
-    onload: ((this: Window, ev: Event) => any) | null;
-    onloadeddata: ((this: Window, ev: Event) => any) | null;
-    onloadedmetadata: ((this: Window, ev: Event) => any) | null;
-    onloadstart: ((this: Window, ev: Event) => any) | null;
-    onmessage: ((this: Window, ev: MessageEvent) => any) | null;
-    onmousedown: ((this: Window, ev: MouseEvent) => any) | null;
-    onmouseenter: ((this: Window, ev: MouseEvent) => any) | null;
-    onmouseleave: ((this: Window, ev: MouseEvent) => any) | null;
-    onmousemove: ((this: Window, ev: MouseEvent) => any) | null;
-    onmouseout: ((this: Window, ev: MouseEvent) => any) | null;
-    onmouseover: ((this: Window, ev: MouseEvent) => any) | null;
-    onmouseup: ((this: Window, ev: MouseEvent) => any) | null;
-    onmousewheel: ((this: Window, ev: WheelEvent) => any) | null;
-    onmsgesturechange: ((this: Window, ev: Event) => any) | null;
-    onmsgesturedoubletap: ((this: Window, ev: Event) => any) | null;
-    onmsgestureend: ((this: Window, ev: Event) => any) | null;
-    onmsgesturehold: ((this: Window, ev: Event) => any) | null;
-    onmsgesturestart: ((this: Window, ev: Event) => any) | null;
-    onmsgesturetap: ((this: Window, ev: Event) => any) | null;
-    onmsinertiastart: ((this: Window, ev: Event) => any) | null;
-    onmspointercancel: ((this: Window, ev: Event) => any) | null;
-    onmspointerdown: ((this: Window, ev: Event) => any) | null;
-    onmspointerenter: ((this: Window, ev: Event) => any) | null;
-    onmspointerleave: ((this: Window, ev: Event) => any) | null;
-    onmspointermove: ((this: Window, ev: Event) => any) | null;
-    onmspointerout: ((this: Window, ev: Event) => any) | null;
-    onmspointerover: ((this: Window, ev: Event) => any) | null;
-    onmspointerup: ((this: Window, ev: Event) => any) | null;
-    onoffline: ((this: Window, ev: Event) => any) | null;
-    ononline: ((this: Window, ev: Event) => any) | null;
-    onorientationchange: ((this: Window, ev: Event) => any) | null;
-    onpagehide: ((this: Window, ev: PageTransitionEvent) => any) | null;
-    onpageshow: ((this: Window, ev: PageTransitionEvent) => any) | null;
-    onpause: ((this: Window, ev: Event) => any) | null;
-    onplay: ((this: Window, ev: Event) => any) | null;
-    onplaying: ((this: Window, ev: Event) => any) | null;
-    onpopstate: ((this: Window, ev: PopStateEvent) => any) | null;
-    onprogress: ((this: Window, ev: ProgressEvent) => any) | null;
-    onratechange: ((this: Window, ev: Event) => any) | null;
-    onreadystatechange: ((this: Window, ev: ProgressEvent) => any) | null;
-    onreset: ((this: Window, ev: Event) => any) | null;
-    onresize: ((this: Window, ev: UIEvent) => any) | null;
-    onscroll: ((this: Window, ev: UIEvent) => any) | null;
-    onseeked: ((this: Window, ev: Event) => any) | null;
-    onseeking: ((this: Window, ev: Event) => any) | null;
-    onselect: ((this: Window, ev: UIEvent) => any) | null;
-    onstalled: ((this: Window, ev: Event) => any) | null;
-    onstorage: ((this: Window, ev: StorageEvent) => any) | null;
-    onsubmit: ((this: Window, ev: Event) => any) | null;
-    onsuspend: ((this: Window, ev: Event) => any) | null;
-    ontimeupdate: ((this: Window, ev: Event) => any) | null;
-    ontouchcancel: (ev: TouchEvent) => any;
-    ontouchend: (ev: TouchEvent) => any;
-    ontouchmove: (ev: TouchEvent) => any;
-    ontouchstart: (ev: TouchEvent) => any;
-    onunload: ((this: Window, ev: Event) => any) | null;
-    onvolumechange: ((this: Window, ev: Event) => any) | null;
-    onvrdisplayactivate: ((this: Window, ev: Event) => any) | null;
-    onvrdisplayblur: ((this: Window, ev: Event) => any) | null;
-    onvrdisplayconnect: ((this: Window, ev: Event) => any) | null;
-    onvrdisplaydeactivate: ((this: Window, ev: Event) => any) | null;
-    onvrdisplaydisconnect: ((this: Window, ev: Event) => any) | null;
-    onvrdisplayfocus: ((this: Window, ev: Event) => any) | null;
-    onvrdisplaypointerrestricted: ((this: Window, ev: Event) => any) | null;
-    onvrdisplaypointerunrestricted: ((this: Window, ev: Event) => any) | null;
-    onvrdisplaypresentchange: ((this: Window, ev: Event) => any) | null;
-    onwaiting: ((this: Window, ev: Event) => any) | null;
     opener: any;
     readonly orientation: string | number;
     readonly outerHeight: number;
@@ -15088,10 +13087,7 @@ interface Window extends EventTarget, WindowTimers, WindowSessionStorage, Window
     webkitConvertPointFromNodeToPage(node: Node, pt: WebKitPoint): WebKitPoint;
     webkitConvertPointFromPageToNode(node: Node, pt: WebKitPoint): WebKitPoint;
     webkitRequestAnimationFrame(callback: FrameRequestCallback): number;
-    addEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var Window: {
@@ -15099,15 +13095,6 @@ declare var Window: {
     new(): Window;
 };
 
-interface WindowBase64 {
-    atob(encodedString: string): string;
-    btoa(rawString: string): string;
-}
-
-interface WindowConsole {
-    readonly console: Console;
-}
-
 interface WindowEventHandlersEventMap {
     "afterprint": Event;
     "beforeprint": Event;
@@ -15123,61 +13110,19 @@ interface WindowEventHandlersEventMap {
     "unload": Event;
 }
 
-interface WindowEventHandlers {
-    onafterprint: ((this: WindowEventHandlers, ev: Event) => any) | null;
-    onbeforeprint: ((this: WindowEventHandlers, ev: Event) => any) | null;
-    onbeforeunload: ((this: WindowEventHandlers, ev: BeforeUnloadEvent) => any) | null;
-    onhashchange: ((this: WindowEventHandlers, ev: HashChangeEvent) => any) | null;
-    onmessage: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;
-    onoffline: ((this: WindowEventHandlers, ev: Event) => any) | null;
-    ononline: ((this: WindowEventHandlers, ev: Event) => any) | null;
-    onpagehide: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;
-    onpageshow: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;
-    onpopstate: ((this: WindowEventHandlers, ev: PopStateEvent) => any) | null;
-    onstorage: ((this: WindowEventHandlers, ev: StorageEvent) => any) | null;
-    onunload: ((this: WindowEventHandlers, ev: Event) => any) | null;
-    addEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
-}
+interface WindowEventHandlers extends EventTarget<WindowEventHandlers, WindowEventHandlersEventType> {
 
-interface WindowLocalStorage {
-    readonly localStorage: Storage;
-}
-
-interface WindowSessionStorage {
-    readonly sessionStorage: Storage;
-}
-
-interface WindowTimers extends WindowTimersExtension {
-    clearInterval(handle?: number): void;
-    clearTimeout(handle?: number): void;
-    setInterval(handler: (...args: any[]) => void, timeout: number): number;
-    setInterval(handler: any, timeout?: any, ...args: any[]): number;
-    setTimeout(handler: (...args: any[]) => void, timeout: number): number;
-    setTimeout(handler: any, timeout?: any, ...args: any[]): number;
-}
-
-interface WindowTimersExtension {
-    clearImmediate(handle: number): void;
-    setImmediate(handler: (...args: any[]) => void): number;
-    setImmediate(handler: any, ...args: any[]): number;
 }
 
 interface WorkerEventMap extends AbstractWorkerEventMap {
     "message": MessageEvent;
 }
 
-interface Worker extends EventTarget, AbstractWorker {
-    onmessage: ((this: Worker, ev: MessageEvent) => any) | null;
+interface Worker extends EventTarget<Worker, WorkerEventType>, AbstractWorker {
     /** @deprecated */
     postMessage(message: any, transfer?: any[]): void;
     terminate(): void;
-    addEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var Worker: {
@@ -15220,11 +13165,8 @@ declare var WritableStreamDefaultWriter: {
     new(): WritableStreamDefaultWriter;
 };
 
-interface XMLDocument extends Document {
-    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface XMLDocument extends EventTarget<XMLDocument, DocumentEventType>, Document {
+
 }
 
 declare var XMLDocument: {
@@ -15236,9 +13178,8 @@ interface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {
     "readystatechange": Event;
 }
 
-interface XMLHttpRequest extends EventTarget, XMLHttpRequestEventTarget {
+interface XMLHttpRequest extends EventTarget<XMLHttpRequest, XMLHttpRequestEventType>, XMLHttpRequestEventTarget {
     msCaching: string;
-    onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;
     readonly readyState: number;
     readonly response: any;
     readonly responseText: string;
@@ -15258,15 +13199,7 @@ interface XMLHttpRequest extends EventTarget, XMLHttpRequestEventTarget {
     overrideMimeType(mime: string): void;
     send(data?: any): void;
     setRequestHeader(header: string, value: string): void;
-    readonly DONE: number;
-    readonly HEADERS_RECEIVED: number;
-    readonly LOADING: number;
-    readonly OPENED: number;
-    readonly UNSENT: number;
-    addEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+
 }
 
 declare var XMLHttpRequest: {
@@ -15289,25 +13222,12 @@ interface XMLHttpRequestEventTargetEventMap {
     "timeout": ProgressEvent;
 }
 
-interface XMLHttpRequestEventTarget {
-    onabort: ((this: XMLHttpRequest, ev: Event) => any) | null;
-    onerror: ((this: XMLHttpRequest, ev: ErrorEvent) => any) | null;
-    onload: ((this: XMLHttpRequest, ev: Event) => any) | null;
-    onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-    onloadstart: ((this: XMLHttpRequest, ev: Event) => any) | null;
-    onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-    ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface XMLHttpRequestEventTarget extends EventTarget<XMLHttpRequestEventTarget, XMLHttpRequestEventTargetEventType> {
+
 }
 
-interface XMLHttpRequestUpload extends EventTarget, XMLHttpRequestEventTarget {
-    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface XMLHttpRequestUpload extends EventTarget<XMLHttpRequestUpload, XMLHttpRequestEventTargetEventType>, XMLHttpRequestEventTarget {
+
 }
 
 declare var XMLHttpRequestUpload: {
@@ -15363,16 +13283,6 @@ interface XPathResult {
     readonly stringValue: string;
     iterateNext(): Node;
     snapshotItem(index: number): Node;
-    readonly ANY_TYPE: number;
-    readonly ANY_UNORDERED_NODE_TYPE: number;
-    readonly BOOLEAN_TYPE: number;
-    readonly FIRST_ORDERED_NODE_TYPE: number;
-    readonly NUMBER_TYPE: number;
-    readonly ORDERED_NODE_ITERATOR_TYPE: number;
-    readonly ORDERED_NODE_SNAPSHOT_TYPE: number;
-    readonly STRING_TYPE: number;
-    readonly UNORDERED_NODE_ITERATOR_TYPE: number;
-    readonly UNORDERED_NODE_SNAPSHOT_TYPE: number;
 }
 
 declare var XPathResult: {
@@ -15406,11 +13316,8 @@ declare var XSLTProcessor: {
     new(): XSLTProcessor;
 };
 
-interface webkitRTCPeerConnection extends RTCPeerConnection {
-    addEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: webkitRTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-    removeEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: webkitRTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+interface webkitRTCPeerConnection extends EventTarget<webkitRTCPeerConnection, RTCPeerConnectionEventType>, RTCPeerConnection {
+
 }
 
 declare var webkitRTCPeerConnection: {
@@ -15418,8 +13325,6 @@ declare var webkitRTCPeerConnection: {
     new(configuration: RTCConfiguration): webkitRTCPeerConnection;
 };
 
-declare type EventListenerOrEventListenerObject = EventListener | EventListenerObject;
-
 interface DecodeErrorCallback {
     (error: DOMException): void;
 }
@@ -15437,7 +13342,7 @@ interface EventHandlerNonNull {
 }
 
 interface ForEachCallback {
-    (keyId: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, status: MediaKeyStatus): void;
+    (keyId: BufferSource | null, status: MediaKeyStatus): void;
 }
 
 interface FrameRequestCallback {
@@ -15512,206 +13417,6 @@ interface WritableStreamErrorCallback {
     (reason: string): void;
 }
 
-interface HTMLElementTagNameMap {
-    "a": HTMLAnchorElement;
-    "abbr": HTMLElement;
-    "acronym": HTMLElement;
-    "address": HTMLElement;
-    "applet": HTMLAppletElement;
-    "area": HTMLAreaElement;
-    "article": HTMLElement;
-    "aside": HTMLElement;
-    "audio": HTMLAudioElement;
-    "b": HTMLElement;
-    "base": HTMLBaseElement;
-    "basefont": HTMLBaseFontElement;
-    "bdo": HTMLElement;
-    "big": HTMLElement;
-    "blockquote": HTMLQuoteElement;
-    "body": HTMLBodyElement;
-    "br": HTMLBRElement;
-    "button": HTMLButtonElement;
-    "canvas": HTMLCanvasElement;
-    "caption": HTMLTableCaptionElement;
-    "center": HTMLElement;
-    "cite": HTMLElement;
-    "code": HTMLElement;
-    "col": HTMLTableColElement;
-    "colgroup": HTMLTableColElement;
-    "data": HTMLDataElement;
-    "datalist": HTMLDataListElement;
-    "dd": HTMLElement;
-    "del": HTMLModElement;
-    "dfn": HTMLElement;
-    "dir": HTMLDirectoryElement;
-    "div": HTMLDivElement;
-    "dl": HTMLDListElement;
-    "dt": HTMLElement;
-    "em": HTMLElement;
-    "embed": HTMLEmbedElement;
-    "fieldset": HTMLFieldSetElement;
-    "figcaption": HTMLElement;
-    "figure": HTMLElement;
-    "font": HTMLFontElement;
-    "footer": HTMLElement;
-    "form": HTMLFormElement;
-    "frame": HTMLFrameElement;
-    "frameset": HTMLFrameSetElement;
-    "h1": HTMLHeadingElement;
-    "h2": HTMLHeadingElement;
-    "h3": HTMLHeadingElement;
-    "h4": HTMLHeadingElement;
-    "h5": HTMLHeadingElement;
-    "h6": HTMLHeadingElement;
-    "head": HTMLHeadElement;
-    "header": HTMLElement;
-    "hgroup": HTMLElement;
-    "hr": HTMLHRElement;
-    "html": HTMLHtmlElement;
-    "i": HTMLElement;
-    "iframe": HTMLIFrameElement;
-    "img": HTMLImageElement;
-    "input": HTMLInputElement;
-    "ins": HTMLModElement;
-    "isindex": HTMLUnknownElement;
-    "kbd": HTMLElement;
-    "keygen": HTMLElement;
-    "label": HTMLLabelElement;
-    "legend": HTMLLegendElement;
-    "li": HTMLLIElement;
-    "link": HTMLLinkElement;
-    "listing": HTMLPreElement;
-    "map": HTMLMapElement;
-    "mark": HTMLElement;
-    "marquee": HTMLMarqueeElement;
-    "menu": HTMLMenuElement;
-    "meta": HTMLMetaElement;
-    "meter": HTMLMeterElement;
-    "nav": HTMLElement;
-    "nextid": HTMLUnknownElement;
-    "nobr": HTMLElement;
-    "noframes": HTMLElement;
-    "noscript": HTMLElement;
-    "object": HTMLObjectElement;
-    "ol": HTMLOListElement;
-    "optgroup": HTMLOptGroupElement;
-    "option": HTMLOptionElement;
-    "output": HTMLOutputElement;
-    "p": HTMLParagraphElement;
-    "param": HTMLParamElement;
-    "picture": HTMLPictureElement;
-    "plaintext": HTMLElement;
-    "pre": HTMLPreElement;
-    "progress": HTMLProgressElement;
-    "q": HTMLQuoteElement;
-    "rt": HTMLElement;
-    "ruby": HTMLElement;
-    "s": HTMLElement;
-    "samp": HTMLElement;
-    "script": HTMLScriptElement;
-    "section": HTMLElement;
-    "select": HTMLSelectElement;
-    "slot": HTMLSlotElement;
-    "small": HTMLElement;
-    "source": HTMLSourceElement;
-    "span": HTMLSpanElement;
-    "strike": HTMLElement;
-    "strong": HTMLElement;
-    "style": HTMLStyleElement;
-    "sub": HTMLElement;
-    "sup": HTMLElement;
-    "table": HTMLTableElement;
-    "tbody": HTMLTableSectionElement;
-    "td": HTMLTableDataCellElement;
-    "template": HTMLTemplateElement;
-    "textarea": HTMLTextAreaElement;
-    "tfoot": HTMLTableSectionElement;
-    "th": HTMLTableHeaderCellElement;
-    "thead": HTMLTableSectionElement;
-    "time": HTMLTimeElement;
-    "title": HTMLTitleElement;
-    "tr": HTMLTableRowElement;
-    "track": HTMLTrackElement;
-    "tt": HTMLElement;
-    "u": HTMLElement;
-    "ul": HTMLUListElement;
-    "var": HTMLElement;
-    "video": HTMLVideoElement;
-    "wbr": HTMLElement;
-    "xmp": HTMLPreElement;
-}
-
-interface SVGElementTagNameMap {
-    "circle": SVGCircleElement;
-    "clippath": SVGClipPathElement;
-    "defs": SVGDefsElement;
-    "desc": SVGDescElement;
-    "ellipse": SVGEllipseElement;
-    "feblend": SVGFEBlendElement;
-    "fecolormatrix": SVGFEColorMatrixElement;
-    "fecomponenttransfer": SVGFEComponentTransferElement;
-    "fecomposite": SVGFECompositeElement;
-    "feconvolvematrix": SVGFEConvolveMatrixElement;
-    "fediffuselighting": SVGFEDiffuseLightingElement;
-    "fedisplacementmap": SVGFEDisplacementMapElement;
-    "fedistantlight": SVGFEDistantLightElement;
-    "feflood": SVGFEFloodElement;
-    "fefunca": SVGFEFuncAElement;
-    "fefuncb": SVGFEFuncBElement;
-    "fefuncg": SVGFEFuncGElement;
-    "fefuncr": SVGFEFuncRElement;
-    "fegaussianblur": SVGFEGaussianBlurElement;
-    "feimage": SVGFEImageElement;
-    "femerge": SVGFEMergeElement;
-    "femergenode": SVGFEMergeNodeElement;
-    "femorphology": SVGFEMorphologyElement;
-    "feoffset": SVGFEOffsetElement;
-    "fepointlight": SVGFEPointLightElement;
-    "fespecularlighting": SVGFESpecularLightingElement;
-    "fespotlight": SVGFESpotLightElement;
-    "fetile": SVGFETileElement;
-    "feturbulence": SVGFETurbulenceElement;
-    "filter": SVGFilterElement;
-    "foreignobject": SVGForeignObjectElement;
-    "g": SVGGElement;
-    "image": SVGImageElement;
-    "line": SVGLineElement;
-    "lineargradient": SVGLinearGradientElement;
-    "marker": SVGMarkerElement;
-    "mask": SVGMaskElement;
-    "metadata": SVGMetadataElement;
-    "path": SVGPathElement;
-    "pattern": SVGPatternElement;
-    "polygon": SVGPolygonElement;
-    "polyline": SVGPolylineElement;
-    "radialgradient": SVGRadialGradientElement;
-    "rect": SVGRectElement;
-    "stop": SVGStopElement;
-    "svg": SVGSVGElement;
-    "switch": SVGSwitchElement;
-    "symbol": SVGSymbolElement;
-    "text": SVGTextElement;
-    "textpath": SVGTextPathElement;
-    "tspan": SVGTSpanElement;
-    "use": SVGUseElement;
-    "view": SVGViewElement;
-}
-
-/** @deprecated Directly use HTMLElementTagNameMap or SVGElementTagNameMap as appropriate, instead. */
-interface ElementTagNameMap extends HTMLElementTagNameMap, SVGElementTagNameMap { }
-
-declare var Audio: {
-    new(src?: string): HTMLAudioElement;
-};
-declare var Image: {
-    new(width?: number, height?: number): HTMLImageElement;
-};
-declare var Option: {
-    new(text?: string, value?: string, defaultSelected?: boolean, selected?: boolean): HTMLOptionElement;
-};
-declare var Blob: typeof Blob;
-declare var URL: typeof URL;
-declare var URLSearchParams: typeof URLSearchParams;
 declare var applicationCache: ApplicationCache;
 declare var caches: CacheStorage;
 declare var clientInformation: Navigator;
@@ -15722,7 +13427,6 @@ declare var defaultStatus: string;
 declare var devicePixelRatio: number;
 declare var doNotTrack: string;
 declare var document: Document;
-declare var event: Event | undefined;
 declare var external: External;
 declare var frameElement: Element;
 declare var frames: Window;
@@ -15736,109 +13440,8 @@ declare var locationbar: BarProp;
 declare var menubar: BarProp;
 declare var msContentScript: ExtensionScriptApis;
 declare var msCredentials: MSCredentials;
-declare const name: never;
 declare var navigator: Navigator;
 declare var offscreenBuffering: string | boolean;
-declare var onabort: ((this: Window, ev: UIEvent) => any) | null;
-declare var onafterprint: ((this: Window, ev: Event) => any) | null;
-declare var onbeforeprint: ((this: Window, ev: Event) => any) | null;
-declare var onbeforeunload: ((this: Window, ev: BeforeUnloadEvent) => any) | null;
-declare var onblur: ((this: Window, ev: FocusEvent) => any) | null;
-declare var oncanplay: ((this: Window, ev: Event) => any) | null;
-declare var oncanplaythrough: ((this: Window, ev: Event) => any) | null;
-declare var onchange: ((this: Window, ev: Event) => any) | null;
-declare var onclick: ((this: Window, ev: MouseEvent) => any) | null;
-declare var oncompassneedscalibration: ((this: Window, ev: Event) => any) | null;
-declare var oncontextmenu: ((this: Window, ev: PointerEvent) => any) | null;
-declare var ondblclick: ((this: Window, ev: MouseEvent) => any) | null;
-declare var ondevicelight: ((this: Window, ev: DeviceLightEvent) => any) | null;
-declare var ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;
-declare var ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;
-declare var ondrag: ((this: Window, ev: DragEvent) => any) | null;
-declare var ondragend: ((this: Window, ev: DragEvent) => any) | null;
-declare var ondragenter: ((this: Window, ev: DragEvent) => any) | null;
-declare var ondragleave: ((this: Window, ev: DragEvent) => any) | null;
-declare var ondragover: ((this: Window, ev: DragEvent) => any) | null;
-declare var ondragstart: ((this: Window, ev: DragEvent) => any) | null;
-declare var ondrop: ((this: Window, ev: DragEvent) => any) | null;
-declare var ondurationchange: ((this: Window, ev: Event) => any) | null;
-declare var onemptied: ((this: Window, ev: Event) => any) | null;
-declare var onended: ((this: Window, ev: Event) => any) | null;
-declare var onerror: ErrorEventHandler;
-declare var onfocus: ((this: Window, ev: FocusEvent) => any) | null;
-declare var onhashchange: ((this: Window, ev: HashChangeEvent) => any) | null;
-declare var oninput: ((this: Window, ev: Event) => any) | null;
-declare var oninvalid: ((this: Window, ev: Event) => any) | null;
-declare var onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;
-declare var onkeypress: ((this: Window, ev: KeyboardEvent) => any) | null;
-declare var onkeyup: ((this: Window, ev: KeyboardEvent) => any) | null;
-declare var onload: ((this: Window, ev: Event) => any) | null;
-declare var onloadeddata: ((this: Window, ev: Event) => any) | null;
-declare var onloadedmetadata: ((this: Window, ev: Event) => any) | null;
-declare var onloadstart: ((this: Window, ev: Event) => any) | null;
-declare var onmessage: ((this: Window, ev: MessageEvent) => any) | null;
-declare var onmousedown: ((this: Window, ev: MouseEvent) => any) | null;
-declare var onmouseenter: ((this: Window, ev: MouseEvent) => any) | null;
-declare var onmouseleave: ((this: Window, ev: MouseEvent) => any) | null;
-declare var onmousemove: ((this: Window, ev: MouseEvent) => any) | null;
-declare var onmouseout: ((this: Window, ev: MouseEvent) => any) | null;
-declare var onmouseover: ((this: Window, ev: MouseEvent) => any) | null;
-declare var onmouseup: ((this: Window, ev: MouseEvent) => any) | null;
-declare var onmousewheel: ((this: Window, ev: WheelEvent) => any) | null;
-declare var onmsgesturechange: ((this: Window, ev: Event) => any) | null;
-declare var onmsgesturedoubletap: ((this: Window, ev: Event) => any) | null;
-declare var onmsgestureend: ((this: Window, ev: Event) => any) | null;
-declare var onmsgesturehold: ((this: Window, ev: Event) => any) | null;
-declare var onmsgesturestart: ((this: Window, ev: Event) => any) | null;
-declare var onmsgesturetap: ((this: Window, ev: Event) => any) | null;
-declare var onmsinertiastart: ((this: Window, ev: Event) => any) | null;
-declare var onmspointercancel: ((this: Window, ev: Event) => any) | null;
-declare var onmspointerdown: ((this: Window, ev: Event) => any) | null;
-declare var onmspointerenter: ((this: Window, ev: Event) => any) | null;
-declare var onmspointerleave: ((this: Window, ev: Event) => any) | null;
-declare var onmspointermove: ((this: Window, ev: Event) => any) | null;
-declare var onmspointerout: ((this: Window, ev: Event) => any) | null;
-declare var onmspointerover: ((this: Window, ev: Event) => any) | null;
-declare var onmspointerup: ((this: Window, ev: Event) => any) | null;
-declare var onoffline: ((this: Window, ev: Event) => any) | null;
-declare var ononline: ((this: Window, ev: Event) => any) | null;
-declare var onorientationchange: ((this: Window, ev: Event) => any) | null;
-declare var onpagehide: ((this: Window, ev: PageTransitionEvent) => any) | null;
-declare var onpageshow: ((this: Window, ev: PageTransitionEvent) => any) | null;
-declare var onpause: ((this: Window, ev: Event) => any) | null;
-declare var onplay: ((this: Window, ev: Event) => any) | null;
-declare var onplaying: ((this: Window, ev: Event) => any) | null;
-declare var onpopstate: ((this: Window, ev: PopStateEvent) => any) | null;
-declare var onprogress: ((this: Window, ev: ProgressEvent) => any) | null;
-declare var onratechange: ((this: Window, ev: Event) => any) | null;
-declare var onreadystatechange: ((this: Window, ev: ProgressEvent) => any) | null;
-declare var onreset: ((this: Window, ev: Event) => any) | null;
-declare var onresize: ((this: Window, ev: UIEvent) => any) | null;
-declare var onscroll: ((this: Window, ev: UIEvent) => any) | null;
-declare var onseeked: ((this: Window, ev: Event) => any) | null;
-declare var onseeking: ((this: Window, ev: Event) => any) | null;
-declare var onselect: ((this: Window, ev: UIEvent) => any) | null;
-declare var onstalled: ((this: Window, ev: Event) => any) | null;
-declare var onstorage: ((this: Window, ev: StorageEvent) => any) | null;
-declare var onsubmit: ((this: Window, ev: Event) => any) | null;
-declare var onsuspend: ((this: Window, ev: Event) => any) | null;
-declare var ontimeupdate: ((this: Window, ev: Event) => any) | null;
-declare var ontouchcancel: (ev: TouchEvent) => any;
-declare var ontouchend: (ev: TouchEvent) => any;
-declare var ontouchmove: (ev: TouchEvent) => any;
-declare var ontouchstart: (ev: TouchEvent) => any;
-declare var onunload: ((this: Window, ev: Event) => any) | null;
-declare var onvolumechange: ((this: Window, ev: Event) => any) | null;
-declare var onvrdisplayactivate: ((this: Window, ev: Event) => any) | null;
-declare var onvrdisplayblur: ((this: Window, ev: Event) => any) | null;
-declare var onvrdisplayconnect: ((this: Window, ev: Event) => any) | null;
-declare var onvrdisplaydeactivate: ((this: Window, ev: Event) => any) | null;
-declare var onvrdisplaydisconnect: ((this: Window, ev: Event) => any) | null;
-declare var onvrdisplayfocus: ((this: Window, ev: Event) => any) | null;
-declare var onvrdisplaypointerrestricted: ((this: Window, ev: Event) => any) | null;
-declare var onvrdisplaypointerunrestricted: ((this: Window, ev: Event) => any) | null;
-declare var onvrdisplaypresentchange: ((this: Window, ev: Event) => any) | null;
-declare var onwaiting: ((this: Window, ev: Event) => any) | null;
 declare var opener: any;
 declare var orientation: string | number;
 declare var outerHeight: number;
@@ -15889,11 +13492,11 @@ declare function releaseEvents(): void;
 declare function requestAnimationFrame(callback: FrameRequestCallback): number;
 declare function resizeBy(x?: number, y?: number): void;
 declare function resizeTo(x?: number, y?: number): void;
-declare function scroll(options?: ScrollToOptions): void;
+declare function scroll(options: ScrollToOptions): void;
 declare function scroll(x?: number, y?: number): void;
-declare function scrollBy(options?: ScrollToOptions): void;
+declare function scrollBy(options: ScrollToOptions): void;
 declare function scrollBy(x?: number, y?: number): void;
-declare function scrollTo(options?: ScrollToOptions): void;
+declare function scrollTo(options: ScrollToOptions): void;
 declare function scrollTo(x?: number, y?: number): void;
 declare function stop(): void;
 declare function webkitCancelAnimationFrame(handle: number): void;
@@ -15902,45 +13505,29 @@ declare function webkitConvertPointFromPageToNode(node: Node, pt: WebKitPoint):
 declare function webkitRequestAnimationFrame(callback: FrameRequestCallback): number;
 declare function toString(): string;
 declare function dispatchEvent(evt: Event): boolean;
-declare function clearInterval(handle?: number): void;
-declare function clearTimeout(handle?: number): void;
+declare function clearInterval(handle: number | null): void;
+declare function clearTimeout(handle: number | null): void;
 declare function setInterval(handler: (...args: any[]) => void, timeout: number): number;
-declare function setInterval(handler: any, timeout?: any, ...args: any[]): number;
 declare function setTimeout(handler: (...args: any[]) => void, timeout: number): number;
-declare function setTimeout(handler: any, timeout?: any, ...args: any[]): number;
-declare function clearImmediate(handle: number): void;
-declare function setImmediate(handler: (...args: any[]) => void): number;
-declare function setImmediate(handler: any, ...args: any[]): number;
 declare var sessionStorage: Storage;
 declare var localStorage: Storage;
 declare var console: Console;
-declare var onpointercancel: ((this: Window, ev: PointerEvent) => any) | null;
-declare var onpointerdown: ((this: Window, ev: PointerEvent) => any) | null;
-declare var onpointerenter: ((this: Window, ev: PointerEvent) => any) | null;
-declare var onpointerleave: ((this: Window, ev: PointerEvent) => any) | null;
-declare var onpointermove: ((this: Window, ev: PointerEvent) => any) | null;
-declare var onpointerout: ((this: Window, ev: PointerEvent) => any) | null;
-declare var onpointerover: ((this: Window, ev: PointerEvent) => any) | null;
-declare var onpointerup: ((this: Window, ev: PointerEvent) => any) | null;
-declare var onwheel: ((this: Window, ev: WheelEvent) => any) | null;
 declare var indexedDB: IDBFactory;
 declare function atob(encodedString: string): string;
 declare function btoa(rawString: string): string;
 declare function fetch(input?: Request | string, init?: RequestInit): Promise<Response>;
-declare function addEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
-declare function addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
-declare function removeEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
-declare function removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
+declare function addEventListener<SpecificType extends WindowEventType>(type: __Class<SpecificType>, listener: EventListener<Window, SpecificType>, options?: boolean | AddEventListenerOptions): void;
+declare function removeEventListener<SpecificType extends WindowEventType>(type: __Class<SpecificType>, listener: EventListener<Window, SpecificType>, options?: boolean | EventListenerOptions): void;
 type ScrollBehavior = "auto" | "instant" | "smooth";
 type ScrollLogicalPosition = "start" | "center" | "end" | "nearest";
 type MouseWheelEvent = WheelEvent;
 type ScrollRestoration = "auto" | "manual";
 type FormDataEntryValue = string | File;
 type InsertPosition = "beforebegin" | "afterbegin" | "beforeend" | "afterend";
-type HeadersInit = Headers | string[][] | { [key: string]: string };
+type HeadersInit = Headers | string[][] | { [key: string]: string; };
 type OrientationLockType = "any" | "natural" | "portrait" | "landscape" | "portrait-primary" | "portrait-secondary" | "landscape-primary"| "landscape-secondary";
 type IDBValidKey = number | string | Date | IDBArrayKey;
-type AlgorithmIdentifier = string | Algorithm;
+type AlgorithmIdentifier = Algorithm;
 type MutationRecordType = "attributes" | "characterData" | "childList";
 type AAGUID = string;
 type BodyInit = any;
diff --git a/dec/es2015.collection.d.ts b/dec/es2015.collection.d.ts
index 65b6759c8c..d41ec94380 100644
--- a/dec/es2015.collection.d.ts
+++ b/dec/es2015.collection.d.ts
@@ -1,27 +1,3 @@
-interface Map<K, V> {
-    clear(): void;
-    delete(key: K): boolean;
-    forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;
-    get(key: K): V | undefined;
-    has(key: K): boolean;
-    set(key: K, value: V): this;
-    readonly size: number;
-}
-
-interface MapConstructor {
-    new (): Map<any, any>;
-    new <K, V>(entries?: ReadonlyArray<[K, V]> | null): Map<K, V>;
-    readonly prototype: Map<any, any>;
-}
-declare var Map: MapConstructor;
-
-interface ReadonlyMap<K, V> {
-    forEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void;
-    get(key: K): V | undefined;
-    has(key: K): boolean;
-    readonly size: number;
-}
-
 interface WeakMap<K extends object, V> {
     delete(key: K): boolean;
     get(key: K): V | undefined;
@@ -36,28 +12,6 @@ interface WeakMapConstructor {
 }
 declare var WeakMap: WeakMapConstructor;
 
-interface Set<T> {
-    add(value: T): this;
-    clear(): void;
-    delete(value: T): boolean;
-    forEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;
-    has(value: T): boolean;
-    readonly size: number;
-}
-
-interface SetConstructor {
-    new (): Set<any>;
-    new <T>(values?: ReadonlyArray<T> | null): Set<T>;
-    readonly prototype: Set<any>;
-}
-declare var Set: SetConstructor;
-
-interface ReadonlySet<T> {
-    forEach(callbackfn: (value: T, value2: T, set: ReadonlySet<T>) => void, thisArg?: any): void;
-    has(value: T): boolean;
-    readonly size: number;
-}
-
 interface WeakSet<T extends object> {
     add(value: T): this;
     delete(value: T): boolean;
diff --git a/dec/es2015.core.d.ts b/dec/es2015.core.d.ts
index 554f13c8e6..8edf9dd390 100644
--- a/dec/es2015.core.d.ts
+++ b/dec/es2015.core.d.ts
@@ -1,351 +1,3 @@
-declare type PropertyKey = string | number | symbol;
-
-interface Array<T> {
-    /**
-     * Returns the value of the first element in the array where predicate is true, and undefined
-     * otherwise.
-     * @param predicate find calls predicate once for each element of the array, in ascending
-     * order, until it finds one where predicate returns true. If such an element is found, find
-     * immediately returns that element value. Otherwise, find returns undefined.
-     * @param thisArg If provided, it will be used as the this value for each invocation of
-     * predicate. If it is not provided, undefined is used instead.
-     */
-    find<S extends T>(predicate: (this: void, value: T, index: number, obj: T[]) => value is S, thisArg?: any): S | undefined;
-    find(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): T | undefined;
-
-    /**
-     * Returns the index of the first element in the array where predicate is true, and -1
-     * otherwise.
-     * @param predicate find calls predicate once for each element of the array, in ascending
-     * order, until it finds one where predicate returns true. If such an element is found,
-     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
-     * @param thisArg If provided, it will be used as the this value for each invocation of
-     * predicate. If it is not provided, undefined is used instead.
-     */
-    findIndex(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): number;
-
-    /**
-     * Returns the this object after filling the section identified by start and end with value
-     * @param value value to fill array section with
-     * @param start index to start filling the array at. If start is negative, it is treated as
-     * length+start where length is the length of the array.
-     * @param end index to stop filling the array at. If end is negative, it is treated as
-     * length+end.
-     */
-    fill(value: T, start?: number, end?: number): this;
-
-    /**
-     * Returns the this object after copying a section of the array identified by start and end
-     * to the same array starting at position target
-     * @param target If target is negative, it is treated as length+target where length is the
-     * length of the array.
-     * @param start If start is negative, it is treated as length+start. If end is negative, it
-     * is treated as length+end.
-     * @param end If not specified, length of the this object is used as its default value.
-     */
-    copyWithin(target: number, start: number, end?: number): this;
-}
-
-interface ArrayConstructor {
-    /**
-     * Creates an array from an array-like object.
-     * @param arrayLike An array-like object to convert to an array.
-     */
-    from<T>(arrayLike: ArrayLike<T>): T[];
-
-    /**
-     * Creates an array from an iterable object.
-     * @param arrayLike An array-like object to convert to an array.
-     * @param mapfn A mapping function to call on every element of the array.
-     * @param thisArg Value of 'this' used to invoke the mapfn.
-     */
-    from<T, U>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];
-
-    /**
-     * Returns a new array from a set of elements.
-     * @param items A set of elements to include in the new array object.
-     */
-    of<T>(...items: T[]): T[];
-}
-
-interface DateConstructor {
-    new (value: number | string | Date): Date;
-}
-
-interface Function {
-    /**
-     * Returns the name of the function. Function names are read-only and can not be changed.
-     */
-    readonly name: string;
-}
-
-interface Math {
-    /**
-     * Returns the number of leading zero bits in the 32-bit binary representation of a number.
-     * @param x A numeric expression.
-     */
-    clz32(x: number): number;
-
-    /**
-     * Returns the result of 32-bit multiplication of two numbers.
-     * @param x First number
-     * @param y Second number
-     */
-    imul(x: number, y: number): number;
-
-    /**
-     * Returns the sign of the x, indicating whether x is positive, negative or zero.
-     * @param x The numeric expression to test
-     */
-    sign(x: number): number;
-
-    /**
-     * Returns the base 10 logarithm of a number.
-     * @param x A numeric expression.
-     */
-    log10(x: number): number;
-
-    /**
-     * Returns the base 2 logarithm of a number.
-     * @param x A numeric expression.
-     */
-    log2(x: number): number;
-
-    /**
-     * Returns the natural logarithm of 1 + x.
-     * @param x A numeric expression.
-     */
-    log1p(x: number): number;
-
-    /**
-     * Returns the result of (e^x - 1), which is an implementation-dependent approximation to
-     * subtracting 1 from the exponential function of x (e raised to the power of x, where e
-     * is the base of the natural logarithms).
-     * @param x A numeric expression.
-     */
-    expm1(x: number): number;
-
-    /**
-     * Returns the hyperbolic cosine of a number.
-     * @param x A numeric expression that contains an angle measured in radians.
-     */
-    cosh(x: number): number;
-
-    /**
-     * Returns the hyperbolic sine of a number.
-     * @param x A numeric expression that contains an angle measured in radians.
-     */
-    sinh(x: number): number;
-
-    /**
-     * Returns the hyperbolic tangent of a number.
-     * @param x A numeric expression that contains an angle measured in radians.
-     */
-    tanh(x: number): number;
-
-    /**
-     * Returns the inverse hyperbolic cosine of a number.
-     * @param x A numeric expression that contains an angle measured in radians.
-     */
-    acosh(x: number): number;
-
-    /**
-     * Returns the inverse hyperbolic sine of a number.
-     * @param x A numeric expression that contains an angle measured in radians.
-     */
-    asinh(x: number): number;
-
-    /**
-     * Returns the inverse hyperbolic tangent of a number.
-     * @param x A numeric expression that contains an angle measured in radians.
-     */
-    atanh(x: number): number;
-
-    /**
-     * Returns the square root of the sum of squares of its arguments.
-     * @param values Values to compute the square root for.
-     *     If no arguments are passed, the result is +0.
-     *     If there is only one argument, the result is the absolute value.
-     *     If any argument is +Infinity or -Infinity, the result is +Infinity.
-     *     If any argument is NaN, the result is NaN.
-     *     If all arguments are either +0 or −0, the result is +0.
-     */
-    hypot(...values: number[]): number;
-
-    /**
-     * Returns the integral part of the a numeric expression, x, removing any fractional digits.
-     * If x is already an integer, the result is x.
-     * @param x A numeric expression.
-     */
-    trunc(x: number): number;
-
-    /**
-     * Returns the nearest single precision float representation of a number.
-     * @param x A numeric expression.
-     */
-    fround(x: number): number;
-
-    /**
-     * Returns an implementation-dependent approximation to the cube root of number.
-     * @param x A numeric expression.
-     */
-    cbrt(x: number): number;
-}
-
-interface NumberConstructor {
-    /**
-     * The value of Number.EPSILON is the difference between 1 and the smallest value greater than 1
-     * that is representable as a Number value, which is approximately:
-     * 2.2204460492503130808472633361816 x 10‍−‍16.
-     */
-    readonly EPSILON: number;
-
-    /**
-     * Returns true if passed value is finite.
-     * Unlike the global isFinite, Number.isFinite doesn't forcibly convert the parameter to a
-     * number. Only finite values of the type number, result in true.
-     * @param number A numeric value.
-     */
-    isFinite(number: number): boolean;
-
-    /**
-     * Returns true if the value passed is an integer, false otherwise.
-     * @param number A numeric value.
-     */
-    isInteger(number: number): boolean;
-
-    /**
-     * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a
-     * number). Unlike the global isNaN(), Number.isNaN() doesn't forcefully convert the parameter
-     * to a number. Only values of the type number, that are also NaN, result in true.
-     * @param number A numeric value.
-     */
-    isNaN(number: number): boolean;
-
-    /**
-     * Returns true if the value passed is a safe integer.
-     * @param number A numeric value.
-     */
-    isSafeInteger(number: number): boolean;
-
-    /**
-     * The value of the largest integer n such that n and n + 1 are both exactly representable as
-     * a Number value.
-     * The value of Number.MAX_SAFE_INTEGER is 9007199254740991 2^53 − 1.
-     */
-    readonly MAX_SAFE_INTEGER: number;
-
-    /**
-     * The value of the smallest integer n such that n and n − 1 are both exactly representable as
-     * a Number value.
-     * The value of Number.MIN_SAFE_INTEGER is −9007199254740991 (−(2^53 − 1)).
-     */
-    readonly MIN_SAFE_INTEGER: number;
-
-    /**
-     * Converts a string to a floating-point number.
-     * @param string A string that contains a floating-point number.
-     */
-    parseFloat(string: string): number;
-
-    /**
-     * Converts A string to an integer.
-     * @param s A string to convert into a number.
-     * @param radix A value between 2 and 36 that specifies the base of the number in numString.
-     * If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.
-     * All other strings are considered decimal.
-     */
-    parseInt(string: string, radix?: number): number;
-}
-
-interface Object {
-    /**
-     * Determines whether an object has a property with the specified name.
-     * @param v A property name.
-     */
-    hasOwnProperty(v: PropertyKey): boolean;
-
-    /**
-     * Determines whether a specified property is enumerable.
-     * @param v A property name.
-     */
-    propertyIsEnumerable(v: PropertyKey): boolean;
-}
-
-interface ObjectConstructor {
-    /**
-     * Copy the values of all of the enumerable own properties from one or more source objects to a
-     * target object. Returns the target object.
-     * @param target The target object to copy to.
-     * @param sources One or more source objects from which to copy properties
-     */
-    assign<T>(target: T, ...sources: any[]): T;
-
-    /**
-     * Returns an array of all symbol properties found directly on object o.
-     * @param o Object to retrieve the symbols from.
-     */
-    getOwnPropertySymbols(o: any): symbol[];
-
-    /**
-     * Returns true if the values are the same value, false otherwise.
-     * @param value1 The first value.
-     * @param value2 The second value.
-     */
-    is(value1: any, value2: any): boolean;
-
-    /**
-     * Sets the prototype of a specified object o to  object proto or null. Returns the object o.
-     * @param o The object to change its prototype.
-     * @param proto The value of the new prototype or null.
-     */
-    setPrototypeOf(o: any, proto: object | null): any;
-
-    /**
-     * Gets the own property descriptor of the specified object.
-     * An own property descriptor is one that is defined directly on the object and is not
-     * inherited from the object's prototype.
-     * @param o Object that contains the property.
-     * @param p Name of the property.
-     */
-    getOwnPropertyDescriptor(o: any, propertyKey: PropertyKey): PropertyDescriptor | undefined;
-
-    /**
-     * Adds a property to an object, or modifies attributes of an existing property.
-     * @param o Object on which to add or modify the property. This can be a native JavaScript
-     * object (that is, a user-defined object or a built in object) or a DOM object.
-     * @param p The property name.
-     * @param attributes Descriptor for the property. It can be for a data property or an accessor
-     *  property.
-     */
-    defineProperty(o: any, propertyKey: PropertyKey, attributes: PropertyDescriptor): any;
-}
-
-interface ReadonlyArray<T> {
-    /**
-     * Returns the value of the first element in the array where predicate is true, and undefined
-     * otherwise.
-     * @param predicate find calls predicate once for each element of the array, in ascending
-     * order, until it finds one where predicate returns true. If such an element is found, find
-     * immediately returns that element value. Otherwise, find returns undefined.
-     * @param thisArg If provided, it will be used as the this value for each invocation of
-     * predicate. If it is not provided, undefined is used instead.
-     */
-    find<S extends T>(predicate: (this: void, value: T, index: number, obj: ReadonlyArray<T>) => value is S, thisArg?: any): S | undefined;
-    find(predicate: (value: T, index: number, obj: ReadonlyArray<T>) => boolean, thisArg?: any): T | undefined;
-
-    /**
-     * Returns the index of the first element in the array where predicate is true, and -1
-     * otherwise.
-     * @param predicate find calls predicate once for each element of the array, in ascending
-     * order, until it finds one where predicate returns true. If such an element is found,
-     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
-     * @param thisArg If provided, it will be used as the this value for each invocation of
-     * predicate. If it is not provided, undefined is used instead.
-     */
-    findIndex(predicate: (value: T, index: number, obj: ReadonlyArray<T>) => boolean, thisArg?: any): number;
-}
-
 interface RegExp {
     /**
      * Returns a string indicating the flags of the regular expression in question. This field is read-only.
@@ -378,122 +30,3 @@ interface RegExpConstructor {
     new (pattern: RegExp, flags?: string): RegExp;
     (pattern: RegExp, flags?: string): RegExp;
 }
-
-interface String {
-    /**
-     * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point
-     * value of the UTF-16 encoded code point starting at the string element at position pos in
-     * the String resulting from converting this object to a String.
-     * If there is no element at that position, the result is undefined.
-     * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.
-     */
-    codePointAt(pos: number): number | undefined;
-
-    /**
-     * Returns true if searchString appears as a substring of the result of converting this
-     * object to a String, at one or more positions that are
-     * greater than or equal to position; otherwise, returns false.
-     * @param searchString search string
-     * @param position If position is undefined, 0 is assumed, so as to search all of the String.
-     */
-    includes(searchString: string, position?: number): boolean;
-
-    /**
-     * Returns true if the sequence of elements of searchString converted to a String is the
-     * same as the corresponding elements of this object (converted to a String) starting at
-     * endPosition – length(this). Otherwise returns false.
-     */
-    endsWith(searchString: string, endPosition?: number): boolean;
-
-    /**
-     * Returns the String value result of normalizing the string into the normalization form
-     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.
-     * @param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default
-     * is "NFC"
-     */
-    normalize(form: "NFC" | "NFD" | "NFKC" | "NFKD"): string;
-
-    /**
-     * Returns the String value result of normalizing the string into the normalization form
-     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.
-     * @param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default
-     * is "NFC"
-     */
-    normalize(form?: string): string;
-
-    /**
-     * Returns a String value that is made from count copies appended together. If count is 0,
-     * the empty string is returned.
-     * @param count number of copies to append
-     */
-    repeat(count: number): string;
-
-    /**
-     * Returns true if the sequence of elements of searchString converted to a String is the
-     * same as the corresponding elements of this object (converted to a String) starting at
-     * position. Otherwise returns false.
-     */
-    startsWith(searchString: string, position?: number): boolean;
-
-    /**
-     * Returns an <a> HTML anchor element and sets the name attribute to the text value
-     * @param name
-     */
-    anchor(name: string): string;
-
-    /** Returns a <big> HTML element */
-    big(): string;
-
-    /** Returns a <blink> HTML element */
-    blink(): string;
-
-    /** Returns a <b> HTML element */
-    bold(): string;
-
-    /** Returns a <tt> HTML element */
-    fixed(): string;
-
-    /** Returns a <font> HTML element and sets the color attribute value */
-    fontcolor(color: string): string;
-
-    /** Returns a <font> HTML element and sets the size attribute value */
-    fontsize(size: number): string;
-
-    /** Returns a <font> HTML element and sets the size attribute value */
-    fontsize(size: string): string;
-
-    /** Returns an <i> HTML element */
-    italics(): string;
-
-    /** Returns an <a> HTML element and sets the href attribute value */
-    link(url: string): string;
-
-    /** Returns a <small> HTML element */
-    small(): string;
-
-    /** Returns a <strike> HTML element */
-    strike(): string;
-
-    /** Returns a <sub> HTML element */
-    sub(): string;
-
-    /** Returns a <sup> HTML element */
-    sup(): string;
-}
-
-interface StringConstructor {
-    /**
-     * Return the String value whose elements are, in order, the elements in the List elements.
-     * If length is 0, the empty string is returned.
-     */
-    fromCodePoint(...codePoints: number[]): string;
-
-    /**
-     * String.raw is intended for use as a tag function of a Tagged Template String. When called
-     * as such the first argument will be a well formed template call site object and the rest
-     * parameter will contain the substitution values.
-     * @param template A well-formed template string call site representation.
-     * @param substitutions A set of substitution values.
-     */
-    raw(template: TemplateStringsArray, ...substitutions: any[]): string;
-}
diff --git a/dec/es2015.generator.d.ts b/dec/es2015.generator.d.ts
deleted file mode 100644
index 319510c10a..0000000000
--- a/dec/es2015.generator.d.ts
+++ /dev/null
@@ -1,51 +0,0 @@
-interface Generator extends Iterator<any> { }
-
-interface GeneratorFunction {
-    /**
-     * Creates a new Generator object.
-     * @param args A list of arguments the function accepts.
-     */
-    new (...args: any[]): Generator;
-    /**
-     * Creates a new Generator object.
-     * @param args A list of arguments the function accepts.
-     */
-    (...args: any[]): Generator;
-    /**
-     * The length of the arguments.
-     */
-    readonly length: number;
-    /**
-     * Returns the name of the function.
-     */
-    readonly name: string;
-    /**
-     * A reference to the prototype.
-     */
-    readonly prototype: Generator;
-}
-
-interface GeneratorFunctionConstructor {
-    /**
-     * Creates a new Generator function.
-     * @param args A list of arguments the function accepts.
-     */
-    new (...args: string[]): GeneratorFunction;
-    /**
-     * Creates a new Generator function.
-     * @param args A list of arguments the function accepts.
-     */
-    (...args: string[]): GeneratorFunction;
-    /**
-     * The length of the arguments.
-     */
-    readonly length: number;
-    /**
-     * Returns the name of the function.
-     */
-    readonly name: string;
-    /**
-     * A reference to the prototype.
-     */
-    readonly prototype: GeneratorFunction;
-}
diff --git a/dec/es2015.iterable.d.ts b/dec/es2015.iterable.d.ts
index 12c07681fc..0e0780ed53 100644
--- a/dec/es2015.iterable.d.ts
+++ b/dec/es2015.iterable.d.ts
@@ -1,185 +1,11 @@
 /// <reference path="lib.es2015.symbol.d.ts" />
 
-interface SymbolConstructor {
-    /**
-     * A method that returns the default iterator for an object. Called by the semantics of the
-     * for-of statement.
-     */
-    readonly iterator: symbol;
-}
-
-interface IteratorResult<T> {
-    done: boolean;
-    value: T;
-}
-
-interface Iterator<T> {
-    next(value?: any): IteratorResult<T>;
-    return?(value?: any): IteratorResult<T>;
-    throw?(e?: any): IteratorResult<T>;
-}
-
-interface Iterable<T> {
-    [Symbol.iterator](): Iterator<T>;
-}
-
-interface IterableIterator<T> extends Iterator<T> {
-    [Symbol.iterator](): IterableIterator<T>;
-}
-
-interface Array<T> {
-    /** Iterator */
-    [Symbol.iterator](): IterableIterator<T>;
-
-    /**
-     * Returns an iterable of key, value pairs for every entry in the array
-     */
-    entries(): IterableIterator<[number, T]>;
-
-    /**
-     * Returns an iterable of keys in the array
-     */
-    keys(): IterableIterator<number>;
-
-    /**
-     * Returns an iterable of values in the array
-     */
-    values(): IterableIterator<T>;
-}
-
-interface ArrayConstructor {
-    /**
-     * Creates an array from an iterable object.
-     * @param iterable An iterable object to convert to an array.
-     */
-    from<T>(iterable: Iterable<T> | ArrayLike<T>): T[];
-
-    /**
-     * Creates an array from an iterable object.
-     * @param iterable An iterable object to convert to an array.
-     * @param mapfn A mapping function to call on every element of the array.
-     * @param thisArg Value of 'this' used to invoke the mapfn.
-     */
-    from<T, U>(iterable: Iterable<T> | ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];
-}
-
-interface ReadonlyArray<T> {
-    /** Iterator of values in the array. */
-    [Symbol.iterator](): IterableIterator<T>;
-
-    /**
-     * Returns an iterable of key, value pairs for every entry in the array
-     */
-    entries(): IterableIterator<[number, T]>;
-
-    /**
-     * Returns an iterable of keys in the array
-     */
-    keys(): IterableIterator<number>;
-
-    /**
-     * Returns an iterable of values in the array
-     */
-    values(): IterableIterator<T>;
-}
-
-interface IArguments {
-    /** Iterator */
-    [Symbol.iterator](): IterableIterator<any>;
-}
-
-interface Map<K, V> {
-    /** Returns an iterable of entries in the map. */
-    [Symbol.iterator](): IterableIterator<[K, V]>;
-
-    /**
-     * Returns an iterable of key, value pairs for every entry in the map.
-     */
-    entries(): IterableIterator<[K, V]>;
-
-    /**
-     * Returns an iterable of keys in the map
-     */
-    keys(): IterableIterator<K>;
-
-    /**
-     * Returns an iterable of values in the map
-     */
-    values(): IterableIterator<V>;
-}
-
-interface ReadonlyMap<K, V> {
-    /** Returns an iterable of entries in the map. */
-    [Symbol.iterator](): IterableIterator<[K, V]>;
-
-    /**
-     * Returns an iterable of key, value pairs for every entry in the map.
-     */
-    entries(): IterableIterator<[K, V]>;
-
-    /**
-     * Returns an iterable of keys in the map
-     */
-    keys(): IterableIterator<K>;
-
-    /**
-     * Returns an iterable of values in the map
-     */
-    values(): IterableIterator<V>;
-}
-
-interface MapConstructor {
-    new <K, V>(iterable: Iterable<[K, V]>): Map<K, V>;
-}
-
 interface WeakMap<K extends object, V> { }
 
 interface WeakMapConstructor {
     new <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;
 }
 
-interface Set<T> {
-    /** Iterates over values in the set. */
-    [Symbol.iterator](): IterableIterator<T>;
-    /**
-     * Returns an iterable of [v,v] pairs for every value `v` in the set.
-     */
-    entries(): IterableIterator<[T, T]>;
-    /**
-     * Despite its name, returns an iterable of the values in the set,
-     */
-    keys(): IterableIterator<T>;
-
-    /**
-     * Returns an iterable of values in the set.
-     */
-    values(): IterableIterator<T>;
-}
-
-interface ReadonlySet<T> {
-    /** Iterates over values in the set. */
-    [Symbol.iterator](): IterableIterator<T>;
-
-    /**
-     * Returns an iterable of [v,v] pairs for every value `v` in the set.
-     */
-    entries(): IterableIterator<[T, T]>;
-
-    /**
-     * Despite its name, returns an iterable of the values in the set,
-     */
-    keys(): IterableIterator<T>;
-
-    /**
-     * Returns an iterable of values in the set.
-     */
-    values(): IterableIterator<T>;
-}
-
-interface SetConstructor {
-    new <T>(iterable: Iterable<T>): Set<T>;
-}
-
 interface WeakSet<T extends object> { }
 
 interface WeakSetConstructor {
@@ -195,7 +21,7 @@ interface PromiseConstructor {
      * @param values An array of Promises.
      * @returns A new Promise.
      */
-    all<TAll>(values: Iterable<TAll | PromiseLike<TAll>>): Promise<TAll[]>;
+    all<TAll>(values: Iterable<TAll | Promise<TAll>>): Promise<TAll[]>;
 
     /**
      * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved
@@ -203,271 +29,33 @@ interface PromiseConstructor {
      * @param values An array of Promises.
      * @returns A new Promise.
      */
-    race<T>(values: Iterable<T | PromiseLike<T>>): Promise<T>;
-}
-
-declare namespace Reflect {
-    function enumerate(target: object): IterableIterator<any>;
-}
-
-interface String {
-    /** Iterator */
-    [Symbol.iterator](): IterableIterator<string>;
-}
-
-interface Int8Array {
-    [Symbol.iterator](): IterableIterator<number>;
-    /**
-     * Returns an array of key, value pairs for every entry in the array
-     */
-    entries(): IterableIterator<[number, number]>;
-    /**
-     * Returns an list of keys in the array
-     */
-    keys(): IterableIterator<number>;
-    /**
-     * Returns an list of values in the array
-     */
-    values(): IterableIterator<number>;
-}
-
-interface Int8ArrayConstructor {
-    new (elements: Iterable<number>): Int8Array;
-
-    /**
-     * Creates an array from an array-like or iterable object.
-     * @param arrayLike An array-like or iterable object to convert to an array.
-     * @param mapfn A mapping function to call on every element of the array.
-     * @param thisArg Value of 'this' used to invoke the mapfn.
-     */
-    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int8Array;
-}
-
-interface Uint8Array {
-    [Symbol.iterator](): IterableIterator<number>;
-    /**
-     * Returns an array of key, value pairs for every entry in the array
-     */
-    entries(): IterableIterator<[number, number]>;
-    /**
-     * Returns an list of keys in the array
-     */
-    keys(): IterableIterator<number>;
-    /**
-     * Returns an list of values in the array
-     */
-    values(): IterableIterator<number>;
-}
-
-interface Uint8ArrayConstructor {
-    new (elements: Iterable<number>): Uint8Array;
-
-    /**
-     * Creates an array from an array-like or iterable object.
-     * @param arrayLike An array-like or iterable object to convert to an array.
-     * @param mapfn A mapping function to call on every element of the array.
-     * @param thisArg Value of 'this' used to invoke the mapfn.
-     */
-    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8Array;
-}
-
-interface Uint8ClampedArray {
-    [Symbol.iterator](): IterableIterator<number>;
-    /**
-     * Returns an array of key, value pairs for every entry in the array
-     */
-    entries(): IterableIterator<[number, number]>;
-
-    /**
-     * Returns an list of keys in the array
-     */
-    keys(): IterableIterator<number>;
-
-    /**
-     * Returns an list of values in the array
-     */
-    values(): IterableIterator<number>;
-}
-
-interface Uint8ClampedArrayConstructor {
-    new (elements: Iterable<number>): Uint8ClampedArray;
-
-
-    /**
-     * Creates an array from an array-like or iterable object.
-     * @param arrayLike An array-like or iterable object to convert to an array.
-     * @param mapfn A mapping function to call on every element of the array.
-     * @param thisArg Value of 'this' used to invoke the mapfn.
-     */
-    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8ClampedArray;
-}
-
-interface Int16Array {
-    [Symbol.iterator](): IterableIterator<number>;
-    /**
-     * Returns an array of key, value pairs for every entry in the array
-     */
-    entries(): IterableIterator<[number, number]>;
-
-    /**
-     * Returns an list of keys in the array
-     */
-    keys(): IterableIterator<number>;
-
-    /**
-     * Returns an list of values in the array
-     */
-    values(): IterableIterator<number>;
-}
-
-interface Int16ArrayConstructor {
-    new (elements: Iterable<number>): Int16Array;
-
-    /**
-     * Creates an array from an array-like or iterable object.
-     * @param arrayLike An array-like or iterable object to convert to an array.
-     * @param mapfn A mapping function to call on every element of the array.
-     * @param thisArg Value of 'this' used to invoke the mapfn.
-     */
-    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int16Array;
-}
-
-interface Uint16Array {
-    [Symbol.iterator](): IterableIterator<number>;
-    /**
-     * Returns an array of key, value pairs for every entry in the array
-     */
-    entries(): IterableIterator<[number, number]>;
-    /**
-     * Returns an list of keys in the array
-     */
-    keys(): IterableIterator<number>;
-    /**
-     * Returns an list of values in the array
-     */
-    values(): IterableIterator<number>;
-}
-
-interface Uint16ArrayConstructor {
-    new (elements: Iterable<number>): Uint16Array;
-
-    /**
-     * Creates an array from an array-like or iterable object.
-     * @param arrayLike An array-like or iterable object to convert to an array.
-     * @param mapfn A mapping function to call on every element of the array.
-     * @param thisArg Value of 'this' used to invoke the mapfn.
-     */
-    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint16Array;
-}
-
-interface Int32Array {
-    [Symbol.iterator](): IterableIterator<number>;
-    /**
-     * Returns an array of key, value pairs for every entry in the array
-     */
-    entries(): IterableIterator<[number, number]>;
-    /**
-     * Returns an list of keys in the array
-     */
-    keys(): IterableIterator<number>;
-    /**
-     * Returns an list of values in the array
-     */
-    values(): IterableIterator<number>;
-}
-
-interface Int32ArrayConstructor {
-    new (elements: Iterable<number>): Int32Array;
-
-    /**
-     * Creates an array from an array-like or iterable object.
-     * @param arrayLike An array-like or iterable object to convert to an array.
-     * @param mapfn A mapping function to call on every element of the array.
-     * @param thisArg Value of 'this' used to invoke the mapfn.
-     */
-    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int32Array;
-}
-
-interface Uint32Array {
-    [Symbol.iterator](): IterableIterator<number>;
-    /**
-     * Returns an array of key, value pairs for every entry in the array
-     */
-    entries(): IterableIterator<[number, number]>;
-    /**
-     * Returns an list of keys in the array
-     */
-    keys(): IterableIterator<number>;
-    /**
-     * Returns an list of values in the array
-     */
-    values(): IterableIterator<number>;
-}
-
-interface Uint32ArrayConstructor {
-    new (elements: Iterable<number>): Uint32Array;
-
-    /**
-     * Creates an array from an array-like or iterable object.
-     * @param arrayLike An array-like or iterable object to convert to an array.
-     * @param mapfn A mapping function to call on every element of the array.
-     * @param thisArg Value of 'this' used to invoke the mapfn.
-     */
-    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint32Array;
-}
-
-interface Float32Array {
-    [Symbol.iterator](): IterableIterator<number>;
-    /**
-     * Returns an array of key, value pairs for every entry in the array
-     */
-    entries(): IterableIterator<[number, number]>;
-    /**
-     * Returns an list of keys in the array
-     */
-    keys(): IterableIterator<number>;
-    /**
-     * Returns an list of values in the array
-     */
-    values(): IterableIterator<number>;
-}
-
-interface Float32ArrayConstructor {
-    new (elements: Iterable<number>): Float32Array;
-
-    /**
-     * Creates an array from an array-like or iterable object.
-     * @param arrayLike An array-like or iterable object to convert to an array.
-     * @param mapfn A mapping function to call on every element of the array.
-     * @param thisArg Value of 'this' used to invoke the mapfn.
-     */
-    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float32Array;
-}
-
-interface Float64Array {
-    [Symbol.iterator](): IterableIterator<number>;
-    /**
-     * Returns an array of key, value pairs for every entry in the array
-     */
-    entries(): IterableIterator<[number, number]>;
-    /**
-     * Returns an list of keys in the array
-     */
-    keys(): IterableIterator<number>;
-    /**
-     * Returns an list of values in the array
-     */
-    values(): IterableIterator<number>;
-}
-
-interface Float64ArrayConstructor {
-    new (elements: Iterable<number>): Float64Array;
-
-    /**
-     * Creates an array from an array-like or iterable object.
-     * @param arrayLike An array-like or iterable object to convert to an array.
-     * @param mapfn A mapping function to call on every element of the array.
-     * @param thisArg Value of 'this' used to invoke the mapfn.
-     */
-    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float64Array;
+    race<T>(values: Iterable<T | Promise<T>>): Promise<T>;
+}
+
+interface ArrayBufferView<T extends ArrayBufferView<T>> {
+  [Symbol.iterator](): IterableIterator<number>;
+  /**
+   * Returns an array of key, value pairs for every entry in the array
+   */
+  entries(): IterableIterator<[number, number]>;
+  /**
+   * Returns an list of keys in the array
+   */
+  keys(): IterableIterator<number>;
+  /**
+   * Returns an list of values in the array
+   */
+  values(): IterableIterator<number>;
+}
+
+interface ArrayBufferViewConstructor {
+  new (elements: Iterable<number>): T;
+
+  /**
+   * Creates an array from an array-like or iterable object.
+   * @param arrayLike An array-like or iterable object to convert to an array.
+   * @param mapfn A mapping function to call on every element of the array.
+   * @param thisArg Value of 'this' used to invoke the mapfn.
+   */
+  from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): T;
 }
diff --git a/dec/es2015.promise.d.ts b/dec/es2015.promise.d.ts
index 6bb4f26caa..d6f39ec920 100644
--- a/dec/es2015.promise.d.ts
+++ b/dec/es2015.promise.d.ts
@@ -10,7 +10,7 @@ interface PromiseConstructor {
      * a resolve callback used resolve the promise with a value or the result of another promise,
      * and a reject callback used to reject the promise with a provided reason or error.
      */
-    new <T>(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void): Promise<T>;
+    new <T>(executor: (resolve: (value?: T | Promise<T>) => void, reject: (reason?: any) => void) => void): Promise<T>;
 
     /**
      * Creates a Promise that is resolved with an array of results when all of the provided Promises
@@ -18,151 +18,7 @@ interface PromiseConstructor {
      * @param values An array of Promises.
      * @returns A new Promise.
      */
-    all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;
-
-    /**
-     * Creates a Promise that is resolved with an array of results when all of the provided Promises
-     * resolve, or rejected when any Promise is rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    all<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;
-
-    /**
-     * Creates a Promise that is resolved with an array of results when all of the provided Promises
-     * resolve, or rejected when any Promise is rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    all<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8]>;
-
-    /**
-     * Creates a Promise that is resolved with an array of results when all of the provided Promises
-     * resolve, or rejected when any Promise is rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    all<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promise<[T1, T2, T3, T4, T5, T6, T7]>;
-
-    /**
-     * Creates a Promise that is resolved with an array of results when all of the provided Promises
-     * resolve, or rejected when any Promise is rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    all<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promise<[T1, T2, T3, T4, T5, T6]>;
-
-    /**
-     * Creates a Promise that is resolved with an array of results when all of the provided Promises
-     * resolve, or rejected when any Promise is rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    all<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>]): Promise<[T1, T2, T3, T4, T5]>;
-
-    /**
-     * Creates a Promise that is resolved with an array of results when all of the provided Promises
-     * resolve, or rejected when any Promise is rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    all<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>]): Promise<[T1, T2, T3, T4]>;
-
-    /**
-     * Creates a Promise that is resolved with an array of results when all of the provided Promises
-     * resolve, or rejected when any Promise is rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    all<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promise<[T1, T2, T3]>;
-
-    /**
-     * Creates a Promise that is resolved with an array of results when all of the provided Promises
-     * resolve, or rejected when any Promise is rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    all<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promise<[T1, T2]>;
-
-    /**
-     * Creates a Promise that is resolved with an array of results when all of the provided Promises
-     * resolve, or rejected when any Promise is rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    all<T>(values: (T | PromiseLike<T>)[]): Promise<T[]>;
-
-    /**
-     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved
-     * or rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    race<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>;
-
-    /**
-     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved
-     * or rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    race<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;
-
-    /**
-     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved
-     * or rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    race<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>;
-
-    /**
-     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved
-     * or rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    race<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7>;
-
-    /**
-     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved
-     * or rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    race<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promise<T1 | T2 | T3 | T4 | T5 | T6>;
-
-    /**
-     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved
-     * or rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    race<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]): Promise<T1 | T2 | T3 | T4 | T5>;
-
-    /**
-     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved
-     * or rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    race<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]): Promise<T1 | T2 | T3 | T4>;
-
-    /**
-     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved
-     * or rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    race<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promise<T1 | T2 | T3>;
-
-    /**
-     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved
-     * or rejected.
-     * @param values An array of Promises.
-     * @returns A new Promise.
-     */
-    race<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promise<T1 | T2>;
+    all<T>(values: Promise<T>[]): Promise<T[]>;
 
     /**
      * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved
@@ -170,7 +26,7 @@ interface PromiseConstructor {
      * @param values An array of Promises.
      * @returns A new Promise.
      */
-    race<T>(values: (T | PromiseLike<T>)[]): Promise<T>;
+    race<T>(values: Promise<T>[]): Promise<T>;
 
     /**
      * Creates a new rejected promise for the provided reason.
@@ -184,7 +40,7 @@ interface PromiseConstructor {
      * @param value A promise.
      * @returns A promise whose internal state matches the provided promise.
      */
-    resolve<T>(value: T | PromiseLike<T>): Promise<T>;
+    resolve<T>(value: T | Promise<T>): Promise<T>;
 
     /**
      * Creates a new resolved promise .
@@ -193,4 +49,4 @@ interface PromiseConstructor {
     resolve(): Promise<void>;
 }
 
-declare var Promise: PromiseConstructor;
\ No newline at end of file
+declare var Promise: PromiseConstructor;
diff --git a/dec/es2015.proxy.d.ts b/dec/es2015.proxy.d.ts
deleted file mode 100644
index 552bf33c47..0000000000
--- a/dec/es2015.proxy.d.ts
+++ /dev/null
@@ -1,22 +0,0 @@
-interface ProxyHandler<T extends object> {
-    getPrototypeOf? (target: T): object | null;
-    setPrototypeOf? (target: T, v: any): boolean;
-    isExtensible? (target: T): boolean;
-    preventExtensions? (target: T): boolean;
-    getOwnPropertyDescriptor? (target: T, p: PropertyKey): PropertyDescriptor | undefined;
-    has? (target: T, p: PropertyKey): boolean;
-    get? (target: T, p: PropertyKey, receiver: any): any;
-    set? (target: T, p: PropertyKey, value: any, receiver: any): boolean;
-    deleteProperty? (target: T, p: PropertyKey): boolean;
-    defineProperty? (target: T, p: PropertyKey, attributes: PropertyDescriptor): boolean;
-    enumerate? (target: T): PropertyKey[];
-    ownKeys? (target: T): PropertyKey[];
-    apply? (target: T, thisArg: any, argArray?: any): any;
-    construct? (target: T, argArray: any, newTarget?: any): object;
-}
-
-interface ProxyConstructor {
-    revocable<T extends object>(target: T, handler: ProxyHandler<T>): { proxy: T; revoke: () => void; };
-    new <T extends object>(target: T, handler: ProxyHandler<T>): T;
-}
-declare var Proxy: ProxyConstructor;
diff --git a/dec/es2015.reflect.d.ts b/dec/es2015.reflect.d.ts
deleted file mode 100644
index 1119bc2ad8..0000000000
--- a/dec/es2015.reflect.d.ts
+++ /dev/null
@@ -1,15 +0,0 @@
-declare namespace Reflect {
-    function apply(target: Function, thisArgument: any, argumentsList: ArrayLike<any>): any;
-    function construct(target: Function, argumentsList: ArrayLike<any>, newTarget?: any): any;
-    function defineProperty(target: object, propertyKey: PropertyKey, attributes: PropertyDescriptor): boolean;
-    function deleteProperty(target: object, propertyKey: PropertyKey): boolean;
-    function get(target: object, propertyKey: PropertyKey, receiver?: any): any;
-    function getOwnPropertyDescriptor(target: object, propertyKey: PropertyKey): PropertyDescriptor | undefined;
-    function getPrototypeOf(target: object): object;
-    function has(target: object, propertyKey: PropertyKey): boolean;
-    function isExtensible(target: object): boolean;
-    function ownKeys(target: object): PropertyKey[];
-    function preventExtensions(target: object): boolean;
-    function set(target: object, propertyKey: PropertyKey, value: any, receiver?: any): boolean;
-    function setPrototypeOf(target: object, proto: any): boolean;
-}
diff --git a/dec/es2015.symbol.d.ts b/dec/es2015.symbol.d.ts
deleted file mode 100644
index 4851e7418e..0000000000
--- a/dec/es2015.symbol.d.ts
+++ /dev/null
@@ -1,36 +0,0 @@
-interface Symbol {
-    /** Returns a string representation of an object. */
-    toString(): string;
-
-    /** Returns the primitive value of the specified object. */
-    valueOf(): symbol;
-}
-
-interface SymbolConstructor {
-    /**
-     * A reference to the prototype.
-     */
-    readonly prototype: Symbol;
-
-    /**
-     * Returns a new unique Symbol value.
-     * @param  description Description of the new Symbol object.
-     */
-    (description?: string | number): symbol;
-
-    /**
-     * Returns a Symbol object from the global symbol registry matching the given key if found.
-     * Otherwise, returns a new symbol with this key.
-     * @param key key to search for.
-     */
-    for(key: string): symbol;
-
-    /**
-     * Returns a key from the global symbol registry matching the given Symbol if found.
-     * Otherwise, returns a undefined.
-     * @param sym Symbol to find the key for.
-     */
-    keyFor(sym: symbol): string | undefined;
-}
-
-declare var Symbol: SymbolConstructor;
diff --git a/dec/es2015.symbol.wellknown.d.ts b/dec/es2015.symbol.wellknown.d.ts
deleted file mode 100644
index 1d86465d51..0000000000
--- a/dec/es2015.symbol.wellknown.d.ts
+++ /dev/null
@@ -1,298 +0,0 @@
-/// <reference path="lib.es2015.symbol.d.ts" />
-
-interface SymbolConstructor {
-    /**
-     * A method that determines if a constructor object recognizes an object as one of the
-     * constructor’s instances. Called by the semantics of the instanceof operator.
-     */
-    readonly hasInstance: symbol;
-
-    /**
-     * A Boolean value that if true indicates that an object should flatten to its array elements
-     * by Array.prototype.concat.
-     */
-    readonly isConcatSpreadable: symbol;
-
-    /**
-     * A regular expression method that matches the regular expression against a string. Called
-     * by the String.prototype.match method.
-     */
-    readonly match: symbol;
-
-    /**
-     * A regular expression method that replaces matched substrings of a string. Called by the
-     * String.prototype.replace method.
-     */
-    readonly replace: symbol;
-
-    /**
-     * A regular expression method that returns the index within a string that matches the
-     * regular expression. Called by the String.prototype.search method.
-     */
-    readonly search: symbol;
-
-    /**
-     * A function valued property that is the constructor function that is used to create
-     * derived objects.
-     */
-    readonly species: symbol;
-
-    /**
-     * A regular expression method that splits a string at the indices that match the regular
-     * expression. Called by the String.prototype.split method.
-     */
-    readonly split: symbol;
-
-    /**
-     * A method that converts an object to a corresponding primitive value.
-     * Called by the ToPrimitive abstract operation.
-     */
-    readonly toPrimitive: symbol;
-
-    /**
-     * A String value that is used in the creation of the default string description of an object.
-     * Called by the built-in method Object.prototype.toString.
-     */
-    readonly toStringTag: symbol;
-
-    /**
-     * An Object whose own property names are property names that are excluded from the 'with'
-     * environment bindings of the associated objects.
-     */
-    readonly unscopables: symbol;
-}
-
-interface Symbol {
-    readonly [Symbol.toStringTag]: "Symbol";
-}
-
-interface Array<T> {
-    /**
-     * Returns an object whose properties have the value 'true'
-     * when they will be absent when used in a 'with' statement.
-     */
-    [Symbol.unscopables](): {
-        copyWithin: boolean;
-        entries: boolean;
-        fill: boolean;
-        find: boolean;
-        findIndex: boolean;
-        keys: boolean;
-        values: boolean;
-    };
-}
-
-interface Date {
-    /**
-     * Converts a Date object to a string.
-     */
-    [Symbol.toPrimitive](hint: "default"): string;
-    /**
-     * Converts a Date object to a string.
-     */
-    [Symbol.toPrimitive](hint: "string"): string;
-    /**
-     * Converts a Date object to a number.
-     */
-    [Symbol.toPrimitive](hint: "number"): number;
-    /**
-     * Converts a Date object to a string or number.
-     *
-     * @param hint The strings "number", "string", or "default" to specify what primitive to return.
-     *
-     * @throws {TypeError} If 'hint' was given something other than "number", "string", or "default".
-     * @returns A number if 'hint' was "number", a string if 'hint' was "string" or "default".
-     */
-    [Symbol.toPrimitive](hint: string): string | number;
-}
-
-interface Map<K, V> {
-    readonly [Symbol.toStringTag]: "Map";
-}
-
-interface WeakMap<K extends object, V> {
-    readonly [Symbol.toStringTag]: "WeakMap";
-}
-
-interface Set<T> {
-    readonly [Symbol.toStringTag]: "Set";
-}
-
-interface WeakSet<T extends object> {
-    readonly [Symbol.toStringTag]: "WeakSet";
-}
-
-interface JSON {
-    readonly [Symbol.toStringTag]: "JSON";
-}
-
-interface Function {
-    /**
-     * Determines whether the given value inherits from this function if this function was used
-     * as a constructor function.
-     *
-     * A constructor function can control which objects are recognized as its instances by
-     * 'instanceof' by overriding this method.
-     */
-    [Symbol.hasInstance](value: any): boolean;
-}
-
-interface GeneratorFunction {
-    readonly [Symbol.toStringTag]: "GeneratorFunction";
-}
-
-interface Math {
-    readonly [Symbol.toStringTag]: "Math";
-}
-
-interface Promise<T> {
-    readonly [Symbol.toStringTag]: "Promise";
-}
-
-interface PromiseConstructor {
-    readonly [Symbol.species]: PromiseConstructor;
-}
-
-interface RegExp {
-    /**
-     * Matches a string with this regular expression, and returns an array containing the results of
-     * that search.
-     * @param string A string to search within.
-     */
-    [Symbol.match](string: string): RegExpMatchArray | null;
-
-    /**
-     * Replaces text in a string, using this regular expression.
-     * @param string A String object or string literal whose contents matching against
-     *               this regular expression will be replaced
-     * @param replaceValue A String object or string literal containing the text to replace for every
-     *                     successful match of this regular expression.
-     */
-    [Symbol.replace](string: string, replaceValue: string): string;
-
-    /**
-     * Replaces text in a string, using this regular expression.
-     * @param string A String object or string literal whose contents matching against
-     *               this regular expression will be replaced
-     * @param replacer A function that returns the replacement text.
-     */
-    [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string;
-
-    /**
-     * Finds the position beginning first substring match in a regular expression search
-     * using this regular expression.
-     *
-     * @param string The string to search within.
-     */
-    [Symbol.search](string: string): number;
-
-    /**
-     * Returns an array of substrings that were delimited by strings in the original input that
-     * match against this regular expression.
-     *
-     * If the regular expression contains capturing parentheses, then each time this
-     * regular expression matches, the results (including any undefined results) of the
-     * capturing parentheses are spliced.
-     *
-     * @param string string value to split
-     * @param limit if not undefined, the output array is truncated so that it contains no more
-     * than 'limit' elements.
-     */
-    [Symbol.split](string: string, limit?: number): string[];
-}
-
-interface RegExpConstructor {
-    readonly [Symbol.species]: RegExpConstructor;
-}
-
-interface String {
-    /**
-     * Matches a string an object that supports being matched against, and returns an array containing the results of that search.
-     * @param matcher An object that supports being matched against.
-     */
-    match(matcher: { [Symbol.match](string: string): RegExpMatchArray | null; }): RegExpMatchArray | null;
-
-    /**
-     * Replaces text in a string, using an object that supports replacement within a string.
-     * @param searchValue A object can search for and replace matches within a string.
-     * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.
-     */
-    replace(searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string;
-
-    /**
-     * Replaces text in a string, using an object that supports replacement within a string.
-     * @param searchValue A object can search for and replace matches within a string.
-     * @param replacer A function that returns the replacement text.
-     */
-    replace(searchValue: { [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string; }, replacer: (substring: string, ...args: any[]) => string): string;
-
-    /**
-     * Finds the first substring match in a regular expression search.
-     * @param searcher An object which supports searching within a string.
-     */
-    search(searcher: { [Symbol.search](string: string): number; }): number;
-
-    /**
-     * Split a string into substrings using the specified separator and return them as an array.
-     * @param splitter An object that can split a string.
-     * @param limit A value used to limit the number of elements returned in the array.
-     */
-    split(splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[];
-}
-
-interface ArrayBuffer {
-    readonly [Symbol.toStringTag]: "ArrayBuffer";
-}
-
-interface DataView {
-    readonly [Symbol.toStringTag]: "DataView";
-}
-
-interface Int8Array {
-    readonly [Symbol.toStringTag]: "Int8Array";
-}
-
-interface Uint8Array {
-    readonly [Symbol.toStringTag]: "UInt8Array";
-}
-
-interface Uint8ClampedArray {
-    readonly [Symbol.toStringTag]: "Uint8ClampedArray";
-}
-
-interface Int16Array {
-    readonly [Symbol.toStringTag]: "Int16Array";
-}
-
-interface Uint16Array {
-    readonly [Symbol.toStringTag]: "Uint16Array";
-}
-
-interface Int32Array {
-    readonly [Symbol.toStringTag]: "Int32Array";
-}
-
-interface Uint32Array {
-    readonly [Symbol.toStringTag]: "Uint32Array";
-}
-
-interface Float32Array {
-    readonly [Symbol.toStringTag]: "Float32Array";
-}
-
-interface Float64Array {
-    readonly [Symbol.toStringTag]: "Float64Array";
-}
-
-interface ArrayConstructor {
-    readonly [Symbol.species]: ArrayConstructor;
-}
-interface MapConstructor {
-    readonly [Symbol.species]: MapConstructor;
-}
-interface SetConstructor {
-    readonly [Symbol.species]: SetConstructor;
-}
-interface ArrayBufferConstructor {
-    readonly [Symbol.species]: ArrayBufferConstructor;
-}
\ No newline at end of file
diff --git a/dec/es2016.array.include.d.ts b/dec/es2016.array.include.d.ts
index 0353d38493..4faa9b8e4e 100644
--- a/dec/es2016.array.include.d.ts
+++ b/dec/es2016.array.include.d.ts
@@ -1,40 +1,4 @@
-interface Array<T> {
-    /**
-     * Determines whether an array includes a certain element, returning true or false as appropriate.
-     * @param searchElement The element to search for.
-     * @param fromIndex The position in this array at which to begin searching for searchElement.
-     */
-    includes(searchElement: T, fromIndex?: number): boolean;
-}
-
-interface ReadonlyArray<T> {
-    /**
-     * Determines whether an array includes a certain element, returning true or false as appropriate.
-     * @param searchElement The element to search for.
-     * @param fromIndex The position in this array at which to begin searching for searchElement.
-     */
-    includes(searchElement: T, fromIndex?: number): boolean;
-}
-
-interface Int8Array {
-    /**
-     * Determines whether an array includes a certain element, returning true or false as appropriate.
-     * @param searchElement The element to search for.
-     * @param fromIndex The position in this array at which to begin searching for searchElement.
-     */
-    includes(searchElement: number, fromIndex?: number): boolean;
-}
-
-interface Uint8Array {
-    /**
-     * Determines whether an array includes a certain element, returning true or false as appropriate.
-     * @param searchElement The element to search for.
-     * @param fromIndex The position in this array at which to begin searching for searchElement.
-     */
-    includes(searchElement: number, fromIndex?: number): boolean;
-}
-
-interface Uint8ClampedArray {
+interface ArrayBufferView<T extends ArrayBufferView<T>> {
     /**
      * Determines whether an array includes a certain element, returning true or false as appropriate.
      * @param searchElement The element to search for.
@@ -42,57 +6,3 @@ interface Uint8ClampedArray {
      */
     includes(searchElement: number, fromIndex?: number): boolean;
 }
-
-interface Int16Array {
-    /**
-     * Determines whether an array includes a certain element, returning true or false as appropriate.
-     * @param searchElement The element to search for.
-     * @param fromIndex The position in this array at which to begin searching for searchElement.
-     */
-    includes(searchElement: number, fromIndex?: number): boolean;
-}
-
-interface Uint16Array {
-    /**
-     * Determines whether an array includes a certain element, returning true or false as appropriate.
-     * @param searchElement The element to search for.
-     * @param fromIndex The position in this array at which to begin searching for searchElement.
-     */
-    includes(searchElement: number, fromIndex?: number): boolean;
-}
-
-interface Int32Array {
-    /**
-     * Determines whether an array includes a certain element, returning true or false as appropriate.
-     * @param searchElement The element to search for.
-     * @param fromIndex The position in this array at which to begin searching for searchElement.
-     */
-    includes(searchElement: number, fromIndex?: number): boolean;
-}
-
-interface Uint32Array {
-    /**
-     * Determines whether an array includes a certain element, returning true or false as appropriate.
-     * @param searchElement The element to search for.
-     * @param fromIndex The position in this array at which to begin searching for searchElement.
-     */
-    includes(searchElement: number, fromIndex?: number): boolean;
-}
-
-interface Float32Array {
-    /**
-     * Determines whether an array includes a certain element, returning true or false as appropriate.
-     * @param searchElement The element to search for.
-     * @param fromIndex The position in this array at which to begin searching for searchElement.
-     */
-    includes(searchElement: number, fromIndex?: number): boolean;
-}
-
-interface Float64Array {
-    /**
-     * Determines whether an array includes a certain element, returning true or false as appropriate.
-     * @param searchElement The element to search for.
-     * @param fromIndex The position in this array at which to begin searching for searchElement.
-     */
-    includes(searchElement: number, fromIndex?: number): boolean;
-}
\ No newline at end of file
diff --git a/dec/es2017.intl.d.ts b/dec/es2017.intl.d.ts
deleted file mode 100644
index 6701f85852..0000000000
--- a/dec/es2017.intl.d.ts
+++ /dev/null
@@ -1,10 +0,0 @@
-type DateTimeFormatPartTypes = "day" | "dayPeriod" | "era" | "hour" | "literal" | "minute" | "month" | "second" | "timeZoneName" | "weekday" | "year";
-
-interface DateTimeFormatPart {
-    type: DateTimeFormatPartTypes;
-    value: string;
-}
-
-interface DateTimeFormat {
-    formatToParts(date?: Date | number): DateTimeFormatPart[];
-}
diff --git a/dec/es2017.object.d.ts b/dec/es2017.object.d.ts
deleted file mode 100644
index cda34193c5..0000000000
--- a/dec/es2017.object.d.ts
+++ /dev/null
@@ -1,31 +0,0 @@
-interface ObjectConstructor {
-    /**
-     * Returns an array of values of the enumerable properties of an object
-     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.
-     */
-    values<T>(o: { [s: string]: T } |  ArrayLike<T>): T[];
-
-    /**
-     * Returns an array of values of the enumerable properties of an object
-     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.
-     */
-    values(o: {}): any[];
-
-    /**
-     * Returns an array of key/values of the enumerable properties of an object
-     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.
-     */
-    entries<T>(o: { [s: string]: T } | ArrayLike<T>): [string, T][];
-
-    /**
-     * Returns an array of key/values of the enumerable properties of an object
-     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.
-     */
-    entries(o: {}): [string, any][];
-
-    /**
-     * Returns an object containing all own property descriptors of an object
-     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.
-     */
-    getOwnPropertyDescriptors<T>(o: T): {[P in keyof T]: TypedPropertyDescriptor<T[P]>} & { [x: string]: PropertyDescriptor };
-}
diff --git a/dec/es2017.sharedmemory.d.ts b/dec/es2017.sharedmemory.d.ts
deleted file mode 100644
index 4b171a8f85..0000000000
--- a/dec/es2017.sharedmemory.d.ts
+++ /dev/null
@@ -1,118 +0,0 @@
-/// <reference path="lib.es2015.symbol.d.ts" />
-/// <reference path="lib.es2015.symbol.wellknown.d.ts" />
-
-interface SharedArrayBuffer {
-    /**
-     * Read-only. The length of the ArrayBuffer (in bytes).
-     */
-    readonly byteLength: number;
-
-    /*
-     * The SharedArrayBuffer constructor's length property whose value is 1.
-     */
-    length: number;
-    /**
-     * Returns a section of an SharedArrayBuffer.
-     */
-    slice(begin: number, end?: number): SharedArrayBuffer;
-    readonly [Symbol.species]: SharedArrayBuffer;
-    readonly [Symbol.toStringTag]: "SharedArrayBuffer";
-}
-
-interface SharedArrayBufferConstructor {
-    readonly prototype: SharedArrayBuffer;
-    new (byteLength: number): SharedArrayBuffer;
-}
-declare var SharedArrayBuffer: SharedArrayBufferConstructor;
-
-interface ArrayBufferTypes {
-    SharedArrayBuffer: SharedArrayBuffer;
-}
-
-interface Atomics {
-    /**
-     * Adds a value to the value at the given position in the array, returning the original value.
-     * Until this atomic operation completes, any other read or write operation against the array
-     * will block.
-     */
-    add(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;
-
-    /**
-     * Stores the bitwise AND of a value with the value at the given position in the array,
-     * returning the original value. Until this atomic operation completes, any other read or
-     * write operation against the array will block.
-     */
-    and(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;
-
-    /**
-     * Replaces the value at the given position in the array if the original value equals the given
-     * expected value, returning the original value. Until this atomic operation completes, any
-     * other read or write operation against the array will block.
-     */
-    compareExchange(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, expectedValue: number, replacementValue: number): number;
-
-    /**
-     * Replaces the value at the given position in the array, returning the original value. Until
-     * this atomic operation completes, any other read or write operation against the array will
-     * block.
-     */
-    exchange(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;
-
-    /**
-     * Returns a value indicating whether high-performance algorithms can use atomic operations
-     * (`true`) or must use locks (`false`) for the given number of bytes-per-element of a typed
-     * array.
-     */
-    isLockFree(size: number): boolean;
-
-    /**
-     * Returns the value at the given position in the array. Until this atomic operation completes,
-     * any other read or write operation against the array will block.
-     */
-    load(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number): number;
-
-    /**
-     * Stores the bitwise OR of a value with the value at the given position in the array,
-     * returning the original value. Until this atomic operation completes, any other read or write
-     * operation against the array will block.
-     */
-    or(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;
-
-    /**
-     * Stores a value at the given position in the array, returning the new value. Until this
-     * atomic operation completes, any other read or write operation against the array will block.
-     */
-    store(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;
-
-    /**
-     * Subtracts a value from the value at the given position in the array, returning the original
-     * value. Until this atomic operation completes, any other read or write operation against the
-     * array will block.
-     */
-    sub(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;
-
-    /**
-     * If the value at the given position in the array is equal to the provided value, the current
-     * agent is put to sleep causing execution to suspend until the timeout expires (returning
-     * `"timed-out"`) or until the agent is awoken (returning `"ok"`); otherwise, returns
-     * `"not-equal"`.
-     */
-    wait(typedArray: Int32Array, index: number, value: number, timeout?: number): "ok" | "not-equal" | "timed-out";
-
-    /**
-     * Wakes up sleeping agents that are waiting on the given index of the array, returning the
-     * number of agents that were awoken.
-     */
-    wake(typedArray: Int32Array, index: number, count: number): number;
-
-    /**
-     * Stores the bitwise XOR of a value with the value at the given position in the array,
-     * returning the original value. Until this atomic operation completes, any other read or write
-     * operation against the array will block.
-     */
-    xor(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;
-
-    readonly [Symbol.toStringTag]: "Atomics";
-}
-
-declare var Atomics: Atomics;
\ No newline at end of file
diff --git a/dec/es2017.string.d.ts b/dec/es2017.string.d.ts
deleted file mode 100644
index 07767feb05..0000000000
--- a/dec/es2017.string.d.ts
+++ /dev/null
@@ -1,27 +0,0 @@
-interface String {
-    /**
-     * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.
-     * The padding is applied from the start (left) of the current string.
-     *
-     * @param maxLength The length of the resulting string once the current string has been padded.
-     *        If this parameter is smaller than the current string's length, the current string will be returned as it is.
-     *
-     * @param fillString The string to pad the current string with.
-     *        If this string is too long, it will be truncated and the left-most part will be applied.
-     *        The default value for this parameter is " " (U+0020).
-     */
-    padStart(maxLength: number, fillString?: string): string;
-
-    /**
-     * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.
-     * The padding is applied from the end (right) of the current string.
-     *
-     * @param maxLength The length of the resulting string once the current string has been padded.
-     *        If this parameter is smaller than the current string's length, the current string will be returned as it is.
-     *
-     * @param fillString The string to pad the current string with.
-     *        If this string is too long, it will be truncated and the left-most part will be applied.
-     *        The default value for this parameter is " " (U+0020).
-     */
-    padEnd(maxLength: number, fillString?: string): string;
-}
diff --git a/dec/es2017.typedarrays.d.ts b/dec/es2017.typedarrays.d.ts
index d4c8fdcb59..2392b5d190 100644
--- a/dec/es2017.typedarrays.d.ts
+++ b/dec/es2017.typedarrays.d.ts
@@ -1,35 +1,3 @@
-interface Int8ArrayConstructor {
-    new (): Int8Array;
-}
-
-interface Uint8ArrayConstructor {
-    new (): Uint8Array;
-}
-
-interface Uint8ClampedArrayConstructor {
-    new (): Uint8ClampedArray;
-}
-
-interface Int16ArrayConstructor {
-    new (): Int16Array;
-}
-
-interface Uint16ArrayConstructor {
-    new (): Uint16Array;
-}
-
-interface Int32ArrayConstructor {
-    new (): Int32Array;
-}
-
-interface Uint32ArrayConstructor {
-    new (): Uint32Array;
-}
-
-interface Float32ArrayConstructor {
-    new (): Float32Array;
-}
-
-interface Float64ArrayConstructor {
-    new (): Float64Array;
+interface ArrayBufferViewConstructor {
+    new (): T;
 }
diff --git a/dec/es5.d.ts b/dec/es5.d.ts
index 17fa9c075e..0430db3f1a 100644
--- a/dec/es5.d.ts
+++ b/dec/es5.d.ts
@@ -2,42 +2,12 @@
 /// ECMAScript APIs
 /////////////////////////////
 
-declare const NaN: number;
-declare const Infinity: number;
-
 /**
   * Evaluates JavaScript code and executes it.
   * @param x A String value that contains valid JavaScript code.
   */
 declare function eval(x: string): any;
 
-/**
-  * Converts A string to an integer.
-  * @param s A string to convert into a number.
-  * @param radix A value between 2 and 36 that specifies the base of the number in numString.
-  * If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.
-  * All other strings are considered decimal.
-  */
-declare function parseInt(s: string, radix?: number): number;
-
-/**
-  * Converts a string to a floating-point number.
-  * @param string A string that contains a floating-point number.
-  */
-declare function parseFloat(string: string): number;
-
-/**
-  * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).
-  * @param number A numeric value.
-  */
-declare function isNaN(number: number): boolean;
-
-/**
-  * Determines whether a supplied number is finite.
-  * @param number Any numeric value.
-  */
-declare function isFinite(number: number): boolean;
-
 /**
   * Gets the unencoded version of an encoded Uniform Resource Identifier (URI).
   * @param encodedURI A value representing an encoded URI.
@@ -74,3599 +44,370 @@ declare function escape(string: string): string;
   */
 declare function unescape(string: string): string;
 
-interface PropertyDescriptor {
-    configurable?: boolean;
-    enumerable?: boolean;
-    value?: any;
-    writable?: boolean;
-    get?(): any;
-    set?(v: any): void;
-}
-
-interface PropertyDescriptorMap {
-    [s: string]: PropertyDescriptor;
+interface RegExpMatchArray extends Array<string> {
+    index?: number;
+    input?: string;
 }
 
-interface Object {
-    /** The initial value of Object.prototype.constructor is the standard built-in Object constructor. */
-    constructor: Function;
-
-    /** Returns a string representation of an object. */
-    toString(): string;
-
-    /** Returns a date converted to a string using the current locale. */
-    toLocaleString(): string;
-
-    /** Returns the primitive value of the specified object. */
-    valueOf(): Object;
-
-    /**
-      * Determines whether an object has a property with the specified name.
-      * @param v A property name.
-      */
-    hasOwnProperty(v: string): boolean;
-
-    /**
-      * Determines whether an object exists in another object's prototype chain.
-      * @param v Another object whose prototype chain is to be checked.
-      */
-    isPrototypeOf(v: Object): boolean;
-
-    /**
-      * Determines whether a specified property is enumerable.
-      * @param v A property name.
-      */
-    propertyIsEnumerable(v: string): boolean;
+interface RegExpExecArray extends Array<string> {
+    index: number;
+    input: string;
 }
 
-interface ObjectConstructor {
-    new(value?: any): Object;
-    (): any;
-    (value: any): any;
-
-    /** A reference to the prototype for a class of objects. */
-    readonly prototype: Object;
-
-    /**
-      * Returns the prototype of an object.
-      * @param o The object that references the prototype.
-      */
-    getPrototypeOf(o: any): any;
-
-    /**
-      * Gets the own property descriptor of the specified object.
-      * An own property descriptor is one that is defined directly on the object and is not inherited from the object's prototype.
-      * @param o Object that contains the property.
-      * @param p Name of the property.
-    */
-    getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor | undefined;
-
-    /**
-      * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly
-      * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.
-      * @param o Object that contains the own properties.
-      */
-    getOwnPropertyNames(o: any): string[];
-
-    /**
-      * Creates an object that has the specified prototype or that has null prototype.
-      * @param o Object to use as a prototype. May be null.
-      */
-    create(o: object | null): any;
-
-    /**
-      * Creates an object that has the specified prototype, and that optionally contains specified properties.
-      * @param o Object to use as a prototype. May be null
-      * @param properties JavaScript object that contains one or more property descriptors.
-      */
-    create(o: object | null, properties: PropertyDescriptorMap): any;
-
-    /**
-      * Adds a property to an object, or modifies attributes of an existing property.
-      * @param o Object on which to add or modify the property. This can be a native JavaScript object (that is, a user-defined object or a built in object) or a DOM object.
-      * @param p The property name.
-      * @param attributes Descriptor for the property. It can be for a data property or an accessor property.
-      */
-    defineProperty(o: any, p: string, attributes: PropertyDescriptor): any;
-
-    /**
-      * Adds one or more properties to an object, and/or modifies attributes of existing properties.
-      * @param o Object on which to add or modify the properties. This can be a native JavaScript object or a DOM object.
-      * @param properties JavaScript object that contains one or more descriptor objects. Each descriptor object describes a data property or an accessor property.
-      */
-    defineProperties(o: any, properties: PropertyDescriptorMap): any;
-
-    /**
-      * Prevents the modification of attributes of existing properties, and prevents the addition of new properties.
-      * @param o Object on which to lock the attributes.
-      */
-    seal<T>(o: T): T;
-
+interface RegExp {
     /**
-      * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.
-      * @param o Object on which to lock the attributes.
+      * Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.
+      * @param string The String object or string literal on which to perform the search.
       */
-    freeze<T>(a: T[]): ReadonlyArray<T>;
+    exec(string: string): RegExpExecArray | null;
 
     /**
-      * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.
-      * @param o Object on which to lock the attributes.
+      * Returns a Boolean value that indicates whether or not a pattern exists in a searched string.
+      * @param string String on which to perform the search.
       */
-    freeze<T extends Function>(f: T): T;
+    test(string: string): boolean;
 
-    /**
-      * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.
-      * @param o Object on which to lock the attributes.
-      */
-    freeze<T>(o: T): Readonly<T>;
+    /** Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal. */
+    readonly source: string;
 
-    /**
-      * Prevents the addition of new properties to an object.
-      * @param o Object to make non-extensible.
-      */
-    preventExtensions<T>(o: T): T;
+    /** Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only. */
+    readonly global: boolean;
 
-    /**
-      * Returns true if existing property attributes cannot be modified in an object and new properties cannot be added to the object.
-      * @param o Object to test.
-      */
-    isSealed(o: any): boolean;
+    /** Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only. */
+    readonly ignoreCase: boolean;
 
-    /**
-      * Returns true if existing property attributes and values cannot be modified in an object, and new properties cannot be added to the object.
-      * @param o Object to test.
-      */
-    isFrozen(o: any): boolean;
+    /** Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only. */
+    readonly multiline: boolean;
 
-    /**
-      * Returns a value that indicates whether new properties can be added to an object.
-      * @param o Object to test.
-      */
-    isExtensible(o: any): boolean;
+    lastIndex: number;
 
-    /**
-      * Returns the names of the enumerable properties and methods of an object.
-      * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.
-      */
-    keys(o: {}): string[];
+    // Non-standard extensions
+    compile(): this;
 }
 
-/**
-  * Provides functionality common to all JavaScript objects.
-  */
-declare const Object: ObjectConstructor;
-
-/**
-  * Creates a new function.
-  */
-interface Function {
-    /**
-      * Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.
-      * @param thisArg The object to be used as the this object.
-      * @param argArray A set of arguments to be passed to the function.
-      */
-    apply(this: Function, thisArg: any, argArray?: any): any;
-
-    /**
-      * Calls a method of an object, substituting another object for the current object.
-      * @param thisArg The object to be used as the current object.
-      * @param argArray A list of arguments to be passed to the method.
-      */
-    call(this: Function, thisArg: any, ...argArray: any[]): any;
-
-    /**
-      * For a given function, creates a bound function that has the same body as the original function.
-      * The this object of the bound function is associated with the specified object, and has the specified initial parameters.
-      * @param thisArg An object to which the this keyword can refer inside the new function.
-      * @param argArray A list of arguments to be passed to the new function.
-      */
-    bind(this: Function, thisArg: any, ...argArray: any[]): any;
-
-    /** Returns a string representation of a function. */
-    toString(): string;
-
-    prototype: any;
-    readonly length: number;
+interface RegExpConstructor {
+    new(pattern: string | RegExp, flags?: string): RegExp;
+    readonly prototype: RegExp;
 
     // Non-standard extensions
-    arguments: any;
-    caller: Function;
-}
-
-interface FunctionConstructor {
-    /**
-      * Creates a new function.
-      * @param args A list of arguments the function accepts.
-      */
-    new(...args: string[]): Function;
-    (...args: string[]): Function;
-    readonly prototype: Function;
+    $1: string;
+    $2: string;
+    $3: string;
+    $4: string;
+    $5: string;
+    $6: string;
+    $7: string;
+    $8: string;
+    $9: string;
+    lastMatch: string;
 }
 
-declare const Function: FunctionConstructor;
+declare const RegExp: RegExpConstructor;
 
-interface IArguments {
-    [index: number]: any;
-    length: number;
-    callee: Function;
+interface Error {
+    name: string;
+    message: string;
+    stack?: string;
 }
 
-interface String {
-    /** Returns a string representation of a string. */
-    toString(): string;
-
-    /**
-      * Returns the character at the specified index.
-      * @param pos The zero-based index of the desired character.
-      */
-    charAt(pos: number): string;
-
-    /**
-      * Returns the Unicode value of the character at the specified location.
-      * @param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.
-      */
-    charCodeAt(index: number): number;
-
-    /**
-      * Returns a string that contains the concatenation of two or more strings.
-      * @param strings The strings to append to the end of the string.
-      */
-    concat(...strings: string[]): string;
-
-    /**
-      * Returns the position of the first occurrence of a substring.
-      * @param searchString The substring to search for in the string
-      * @param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.
-      */
-    indexOf(searchString: string, position?: number): number;
-
-    /**
-      * Returns the last occurrence of a substring in the string.
-      * @param searchString The substring to search for.
-      * @param position The index at which to begin searching. If omitted, the search begins at the end of the string.
-      */
-    lastIndexOf(searchString: string, position?: number): number;
-
-    /**
-      * Determines whether two strings are equivalent in the current locale.
-      * @param that String to compare to target string
-      */
-    localeCompare(that: string): number;
-
-    /**
-      * Matches a string with a regular expression, and returns an array containing the results of that search.
-      * @param regexp A variable name or string literal containing the regular expression pattern and flags.
-      */
-    match(regexp: string | RegExp): RegExpMatchArray | null;
-
-    /**
-      * Replaces text in a string, using a regular expression or search string.
-      * @param searchValue A string to search for.
-      * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.
-      */
-    replace(searchValue: string | RegExp, replaceValue: string): string;
-
-    /**
-      * Replaces text in a string, using a regular expression or search string.
-      * @param searchValue A string to search for.
-      * @param replacer A function that returns the replacement text.
-      */
-    replace(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;
-
-    /**
-      * Finds the first substring match in a regular expression search.
-      * @param regexp The regular expression pattern and applicable flags.
-      */
-    search(regexp: string | RegExp): number;
-
-    /**
-      * Returns a section of a string.
-      * @param start The index to the beginning of the specified portion of stringObj.
-      * @param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.
-      * If this value is not specified, the substring continues to the end of stringObj.
-      */
-    slice(start?: number, end?: number): string;
-
-    /**
-      * Split a string into substrings using the specified separator and return them as an array.
-      * @param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.
-      * @param limit A value used to limit the number of elements returned in the array.
-      */
-    split(separator: string | RegExp, limit?: number): string[];
-
-    /**
-      * Returns the substring at the specified location within a String object.
-      * @param start The zero-based index number indicating the beginning of the substring.
-      * @param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.
-      * If end is omitted, the characters from start through the end of the original string are returned.
-      */
-    substring(start: number, end?: number): string;
-
-    /** Converts all the alphabetic characters in a string to lowercase. */
-    toLowerCase(): string;
-
-    /** Converts all alphabetic characters to lowercase, taking into account the host environment's current locale. */
-    toLocaleLowerCase(): string;
-
-    /** Converts all the alphabetic characters in a string to uppercase. */
-    toUpperCase(): string;
-
-    /** Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale. */
-    toLocaleUpperCase(): string;
-
-    /** Removes the leading and trailing white space and line terminator characters from a string. */
-    trim(): string;
-
-    /** Returns the length of a String object. */
-    readonly length: number;
-
-    // IE extensions
-    /**
-      * Gets a substring beginning at the specified location and having the specified length.
-      * @param from The starting position of the desired substring. The index of the first character in the string is zero.
-      * @param length The number of characters to include in the returned substring.
-      */
-    substr(from: number, length?: number): string;
+interface ErrorConstructor {
+    new(message?: string): Error;
+    readonly prototype: Error;
+}
 
-    /** Returns the primitive value of the specified object. */
-    valueOf(): string;
+declare const Error: ErrorConstructor;
 
-    readonly [index: number]: string;
+interface EvalError extends Error {
 }
 
-interface StringConstructor {
-    new(value?: any): String;
-    (value?: any): string;
-    readonly prototype: String;
-    fromCharCode(...codes: number[]): string;
+interface EvalErrorConstructor {
+    new(message?: string): EvalError;
+    readonly prototype: EvalError;
 }
 
-/**
-  * Allows manipulation and formatting of text strings and determination and location of substrings within strings.
-  */
-declare const String: StringConstructor;
+declare const EvalError: EvalErrorConstructor;
 
-interface Boolean {
-    /** Returns the primitive value of the specified object. */
-    valueOf(): boolean;
+interface RangeError extends Error {
 }
 
-interface BooleanConstructor {
-    new(value?: any): Boolean;
-    (value?: any): boolean;
-    readonly prototype: Boolean;
+interface RangeErrorConstructor {
+    new(message?: string): RangeError;
+    readonly prototype: RangeError;
 }
 
-declare const Boolean: BooleanConstructor;
-
-interface Number {
-    /**
-      * Returns a string representation of an object.
-      * @param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.
-      */
-    toString(radix?: number): string;
-
-    /**
-      * Returns a string representing a number in fixed-point notation.
-      * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.
-      */
-    toFixed(fractionDigits?: number): string;
-
-    /**
-      * Returns a string containing a number represented in exponential notation.
-      * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.
-      */
-    toExponential(fractionDigits?: number): string;
+declare const RangeError: RangeErrorConstructor;
 
-    /**
-      * Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.
-      * @param precision Number of significant digits. Must be in the range 1 - 21, inclusive.
-      */
-    toPrecision(precision?: number): string;
+interface ReferenceError extends Error {
+}
 
-    /** Returns the primitive value of the specified object. */
-    valueOf(): number;
+interface ReferenceErrorConstructor {
+    new(message?: string): ReferenceError;
+    readonly prototype: ReferenceError;
 }
 
-interface NumberConstructor {
-    new(value?: any): Number;
-    (value?: any): number;
-    readonly prototype: Number;
+declare const ReferenceError: ReferenceErrorConstructor;
 
-    /** The largest number that can be represented in JavaScript. Equal to approximately 1.79E+308. */
-    readonly MAX_VALUE: number;
+interface SyntaxError extends Error {
+}
 
-    /** The closest number to zero that can be represented in JavaScript. Equal to approximately 5.00E-324. */
-    readonly MIN_VALUE: number;
+interface SyntaxErrorConstructor {
+    new(message?: string): SyntaxError;
+    readonly prototype: SyntaxError;
+}
 
-    /**
-      * A value that is not a number.
-      * In equality comparisons, NaN does not equal any value, including itself. To test whether a value is equivalent to NaN, use the isNaN function.
-      */
-    readonly NaN: number;
+declare const SyntaxError: SyntaxErrorConstructor;
 
-    /**
-      * A value that is less than the largest negative number that can be represented in JavaScript.
-      * JavaScript displays NEGATIVE_INFINITY values as -infinity.
-      */
-    readonly NEGATIVE_INFINITY: number;
+interface TypeError extends Error {
+}
 
-    /**
-      * A value greater than the largest number that can be represented in JavaScript.
-      * JavaScript displays POSITIVE_INFINITY values as infinity.
-      */
-    readonly POSITIVE_INFINITY: number;
+interface TypeErrorConstructor {
+    new(message?: string): TypeError;
+    readonly prototype: TypeError;
 }
 
-/** An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers. */
-declare const Number: NumberConstructor;
+declare const TypeError: TypeErrorConstructor;
 
-interface TemplateStringsArray extends ReadonlyArray<string> {
-    readonly raw: ReadonlyArray<string>;
-}
-
-interface Math {
-    /** The mathematical constant e. This is Euler's number, the base of natural logarithms. */
-    readonly E: number;
-    /** The natural logarithm of 10. */
-    readonly LN10: number;
-    /** The natural logarithm of 2. */
-    readonly LN2: number;
-    /** The base-2 logarithm of e. */
-    readonly LOG2E: number;
-    /** The base-10 logarithm of e. */
-    readonly LOG10E: number;
-    /** Pi. This is the ratio of the circumference of a circle to its diameter. */
-    readonly PI: number;
-    /** The square root of 0.5, or, equivalently, one divided by the square root of 2. */
-    readonly SQRT1_2: number;
-    /** The square root of 2. */
-    readonly SQRT2: number;
-    /**
-      * Returns the absolute value of a number (the value without regard to whether it is positive or negative).
-      * For example, the absolute value of -5 is the same as the absolute value of 5.
-      * @param x A numeric expression for which the absolute value is needed.
-      */
-    abs(x: number): number;
-    /**
-      * Returns the arc cosine (or inverse cosine) of a number.
-      * @param x A numeric expression.
-      */
-    acos(x: number): number;
-    /**
-      * Returns the arcsine of a number.
-      * @param x A numeric expression.
-      */
-    asin(x: number): number;
-    /**
-      * Returns the arctangent of a number.
-      * @param x A numeric expression for which the arctangent is needed.
-      */
-    atan(x: number): number;
-    /**
-      * Returns the angle (in radians) from the X axis to a point.
-      * @param y A numeric expression representing the cartesian y-coordinate.
-      * @param x A numeric expression representing the cartesian x-coordinate.
-      */
-    atan2(y: number, x: number): number;
-    /**
-      * Returns the smallest integer greater than or equal to its numeric argument.
-      * @param x A numeric expression.
-      */
-    ceil(x: number): number;
-    /**
-      * Returns the cosine of a number.
-      * @param x A numeric expression that contains an angle measured in radians.
-      */
-    cos(x: number): number;
-    /**
-      * Returns e (the base of natural logarithms) raised to a power.
-      * @param x A numeric expression representing the power of e.
-      */
-    exp(x: number): number;
-    /**
-      * Returns the greatest integer less than or equal to its numeric argument.
-      * @param x A numeric expression.
-      */
-    floor(x: number): number;
-    /**
-      * Returns the natural logarithm (base e) of a number.
-      * @param x A numeric expression.
-      */
-    log(x: number): number;
-    /**
-      * Returns the larger of a set of supplied numeric expressions.
-      * @param values Numeric expressions to be evaluated.
-      */
-    max(...values: number[]): number;
-    /**
-      * Returns the smaller of a set of supplied numeric expressions.
-      * @param values Numeric expressions to be evaluated.
-      */
-    min(...values: number[]): number;
-    /**
-      * Returns the value of a base expression taken to a specified power.
-      * @param x The base value of the expression.
-      * @param y The exponent value of the expression.
-      */
-    pow(x: number, y: number): number;
-    /** Returns a pseudorandom number between 0 and 1. */
-    random(): number;
-    /**
-      * Returns a supplied numeric expression rounded to the nearest number.
-      * @param x The value to be rounded to the nearest number.
-      */
-    round(x: number): number;
-    /**
-      * Returns the sine of a number.
-      * @param x A numeric expression that contains an angle measured in radians.
-      */
-    sin(x: number): number;
-    /**
-      * Returns the square root of a number.
-      * @param x A numeric expression.
-      */
-    sqrt(x: number): number;
-    /**
-      * Returns the tangent of a number.
-      * @param x A numeric expression that contains an angle measured in radians.
-      */
-    tan(x: number): number;
-}
-/** An intrinsic object that provides basic mathematics functionality and constants. */
-declare const Math: Math;
-
-/** Enables basic storage and retrieval of dates and times. */
-interface Date {
-    /** Returns a string representation of a date. The format of the string depends on the locale. */
-    toString(): string;
-    /** Returns a date as a string value. */
-    toDateString(): string;
-    /** Returns a time as a string value. */
-    toTimeString(): string;
-    /** Returns a value as a string value appropriate to the host environment's current locale. */
-    toLocaleString(): string;
-    /** Returns a date as a string value appropriate to the host environment's current locale. */
-    toLocaleDateString(): string;
-    /** Returns a time as a string value appropriate to the host environment's current locale. */
-    toLocaleTimeString(): string;
-    /** Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC. */
-    valueOf(): number;
-    /** Gets the time value in milliseconds. */
-    getTime(): number;
-    /** Gets the year, using local time. */
-    getFullYear(): number;
-    /** Gets the year using Universal Coordinated Time (UTC). */
-    getUTCFullYear(): number;
-    /** Gets the month, using local time. */
-    getMonth(): number;
-    /** Gets the month of a Date object using Universal Coordinated Time (UTC). */
-    getUTCMonth(): number;
-    /** Gets the day-of-the-month, using local time. */
-    getDate(): number;
-    /** Gets the day-of-the-month, using Universal Coordinated Time (UTC). */
-    getUTCDate(): number;
-    /** Gets the day of the week, using local time. */
-    getDay(): number;
-    /** Gets the day of the week using Universal Coordinated Time (UTC). */
-    getUTCDay(): number;
-    /** Gets the hours in a date, using local time. */
-    getHours(): number;
-    /** Gets the hours value in a Date object using Universal Coordinated Time (UTC). */
-    getUTCHours(): number;
-    /** Gets the minutes of a Date object, using local time. */
-    getMinutes(): number;
-    /** Gets the minutes of a Date object using Universal Coordinated Time (UTC). */
-    getUTCMinutes(): number;
-    /** Gets the seconds of a Date object, using local time. */
-    getSeconds(): number;
-    /** Gets the seconds of a Date object using Universal Coordinated Time (UTC). */
-    getUTCSeconds(): number;
-    /** Gets the milliseconds of a Date, using local time. */
-    getMilliseconds(): number;
-    /** Gets the milliseconds of a Date object using Universal Coordinated Time (UTC). */
-    getUTCMilliseconds(): number;
-    /** Gets the difference in minutes between the time on the local computer and Universal Coordinated Time (UTC). */
-    getTimezoneOffset(): number;
-    /**
-      * Sets the date and time value in the Date object.
-      * @param time A numeric value representing the number of elapsed milliseconds since midnight, January 1, 1970 GMT.
-      */
-    setTime(time: number): number;
-    /**
-      * Sets the milliseconds value in the Date object using local time.
-      * @param ms A numeric value equal to the millisecond value.
-      */
-    setMilliseconds(ms: number): number;
-    /**
-      * Sets the milliseconds value in the Date object using Universal Coordinated Time (UTC).
-      * @param ms A numeric value equal to the millisecond value.
-      */
-    setUTCMilliseconds(ms: number): number;
-
-    /**
-      * Sets the seconds value in the Date object using local time.
-      * @param sec A numeric value equal to the seconds value.
-      * @param ms A numeric value equal to the milliseconds value.
-      */
-    setSeconds(sec: number, ms?: number): number;
-    /**
-      * Sets the seconds value in the Date object using Universal Coordinated Time (UTC).
-      * @param sec A numeric value equal to the seconds value.
-      * @param ms A numeric value equal to the milliseconds value.
-      */
-    setUTCSeconds(sec: number, ms?: number): number;
-    /**
-      * Sets the minutes value in the Date object using local time.
-      * @param min A numeric value equal to the minutes value.
-      * @param sec A numeric value equal to the seconds value.
-      * @param ms A numeric value equal to the milliseconds value.
-      */
-    setMinutes(min: number, sec?: number, ms?: number): number;
-    /**
-      * Sets the minutes value in the Date object using Universal Coordinated Time (UTC).
-      * @param min A numeric value equal to the minutes value.
-      * @param sec A numeric value equal to the seconds value.
-      * @param ms A numeric value equal to the milliseconds value.
-      */
-    setUTCMinutes(min: number, sec?: number, ms?: number): number;
-    /**
-      * Sets the hour value in the Date object using local time.
-      * @param hours A numeric value equal to the hours value.
-      * @param min A numeric value equal to the minutes value.
-      * @param sec A numeric value equal to the seconds value.
-      * @param ms A numeric value equal to the milliseconds value.
-      */
-    setHours(hours: number, min?: number, sec?: number, ms?: number): number;
-    /**
-      * Sets the hours value in the Date object using Universal Coordinated Time (UTC).
-      * @param hours A numeric value equal to the hours value.
-      * @param min A numeric value equal to the minutes value.
-      * @param sec A numeric value equal to the seconds value.
-      * @param ms A numeric value equal to the milliseconds value.
-      */
-    setUTCHours(hours: number, min?: number, sec?: number, ms?: number): number;
-    /**
-      * Sets the numeric day-of-the-month value of the Date object using local time.
-      * @param date A numeric value equal to the day of the month.
-      */
-    setDate(date: number): number;
-    /**
-      * Sets the numeric day of the month in the Date object using Universal Coordinated Time (UTC).
-      * @param date A numeric value equal to the day of the month.
-      */
-    setUTCDate(date: number): number;
-    /**
-      * Sets the month value in the Date object using local time.
-      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.
-      * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.
-      */
-    setMonth(month: number, date?: number): number;
-    /**
-      * Sets the month value in the Date object using Universal Coordinated Time (UTC).
-      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.
-      * @param date A numeric value representing the day of the month. If it is not supplied, the value from a call to the getUTCDate method is used.
-      */
-    setUTCMonth(month: number, date?: number): number;
-    /**
-      * Sets the year of the Date object using local time.
-      * @param year A numeric value for the year.
-      * @param month A zero-based numeric value for the month (0 for January, 11 for December). Must be specified if numDate is specified.
-      * @param date A numeric value equal for the day of the month.
-      */
-    setFullYear(year: number, month?: number, date?: number): number;
-    /**
-      * Sets the year value in the Date object using Universal Coordinated Time (UTC).
-      * @param year A numeric value equal to the year.
-      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. Must be supplied if numDate is supplied.
-      * @param date A numeric value equal to the day of the month.
-      */
-    setUTCFullYear(year: number, month?: number, date?: number): number;
-    /** Returns a date converted to a string using Universal Coordinated Time (UTC). */
-    toUTCString(): string;
-    /** Returns a date as a string value in ISO format. */
-    toISOString(): string;
-    /** Used by the JSON.stringify method to enable the transformation of an object's data for JavaScript Object Notation (JSON) serialization. */
-    toJSON(key?: any): string;
-}
-
-interface DateConstructor {
-    new(): Date;
-    new(value: number | string): Date;
-    new(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Date;
-    (): string;
-    readonly prototype: Date;
-    /**
-      * Parses a string containing a date, and returns the number of milliseconds between that date and midnight, January 1, 1970.
-      * @param s A date string
-      */
-    parse(s: string): number;
-    /**
-      * Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.
-      * @param year The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.
-      * @param month The month as an number between 0 and 11 (January to December).
-      * @param date The date as an number between 1 and 31.
-      * @param hours Must be supplied if minutes is supplied. An number from 0 to 23 (midnight to 11pm) that specifies the hour.
-      * @param minutes Must be supplied if seconds is supplied. An number from 0 to 59 that specifies the minutes.
-      * @param seconds Must be supplied if milliseconds is supplied. An number from 0 to 59 that specifies the seconds.
-      * @param ms An number from 0 to 999 that specifies the milliseconds.
-      */
-    UTC(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number;
-    now(): number;
-}
-
-declare const Date: DateConstructor;
-
-interface RegExpMatchArray extends Array<string> {
-    index?: number;
-    input?: string;
-}
-
-interface RegExpExecArray extends Array<string> {
-    index: number;
-    input: string;
-}
-
-interface RegExp {
-    /**
-      * Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.
-      * @param string The String object or string literal on which to perform the search.
-      */
-    exec(string: string): RegExpExecArray | null;
-
-    /**
-      * Returns a Boolean value that indicates whether or not a pattern exists in a searched string.
-      * @param string String on which to perform the search.
-      */
-    test(string: string): boolean;
-
-    /** Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal. */
-    readonly source: string;
-
-    /** Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only. */
-    readonly global: boolean;
-
-    /** Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only. */
-    readonly ignoreCase: boolean;
-
-    /** Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only. */
-    readonly multiline: boolean;
-
-    lastIndex: number;
-
-    // Non-standard extensions
-    compile(): this;
-}
-
-interface RegExpConstructor {
-    new(pattern: RegExp | string): RegExp;
-    new(pattern: string, flags?: string): RegExp;
-    (pattern: RegExp | string): RegExp;
-    (pattern: string, flags?: string): RegExp;
-    readonly prototype: RegExp;
-
-    // Non-standard extensions
-    $1: string;
-    $2: string;
-    $3: string;
-    $4: string;
-    $5: string;
-    $6: string;
-    $7: string;
-    $8: string;
-    $9: string;
-    lastMatch: string;
-}
-
-declare const RegExp: RegExpConstructor;
-
-interface Error {
-    name: string;
-    message: string;
-    stack?: string;
-}
-
-interface ErrorConstructor {
-    new(message?: string): Error;
-    (message?: string): Error;
-    readonly prototype: Error;
-}
-
-declare const Error: ErrorConstructor;
-
-interface EvalError extends Error {
-}
-
-interface EvalErrorConstructor {
-    new(message?: string): EvalError;
-    (message?: string): EvalError;
-    readonly prototype: EvalError;
-}
-
-declare const EvalError: EvalErrorConstructor;
-
-interface RangeError extends Error {
-}
-
-interface RangeErrorConstructor {
-    new(message?: string): RangeError;
-    (message?: string): RangeError;
-    readonly prototype: RangeError;
-}
-
-declare const RangeError: RangeErrorConstructor;
-
-interface ReferenceError extends Error {
-}
-
-interface ReferenceErrorConstructor {
-    new(message?: string): ReferenceError;
-    (message?: string): ReferenceError;
-    readonly prototype: ReferenceError;
-}
-
-declare const ReferenceError: ReferenceErrorConstructor;
-
-interface SyntaxError extends Error {
-}
-
-interface SyntaxErrorConstructor {
-    new(message?: string): SyntaxError;
-    (message?: string): SyntaxError;
-    readonly prototype: SyntaxError;
-}
-
-declare const SyntaxError: SyntaxErrorConstructor;
-
-interface TypeError extends Error {
-}
-
-interface TypeErrorConstructor {
-    new(message?: string): TypeError;
-    (message?: string): TypeError;
-    readonly prototype: TypeError;
-}
-
-declare const TypeError: TypeErrorConstructor;
-
-interface URIError extends Error {
+interface URIError extends Error {
 }
 
 interface URIErrorConstructor {
-    new(message?: string): URIError;
-    (message?: string): URIError;
-    readonly prototype: URIError;
-}
-
-declare const URIError: URIErrorConstructor;
-
-interface JSON {
-    /**
-      * Converts a JavaScript Object Notation (JSON) string into an object.
-      * @param text A valid JSON string.
-      * @param reviver A function that transforms the results. This function is called for each member of the object.
-      * If a member contains nested objects, the nested objects are transformed before the parent object is.
-      */
-    parse(text: string, reviver?: (key: any, value: any) => any): any;
-    /**
-      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
-      * @param value A JavaScript value, usually an object or array, to be converted.
-      * @param replacer A function that transforms the results.
-      * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.
-      */
-    stringify(value: any, replacer?: (key: string, value: any) => any, space?: string | number): string;
-    /**
-      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
-      * @param value A JavaScript value, usually an object or array, to be converted.
-      * @param replacer An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.
-      * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.
-      */
-    stringify(value: any, replacer?: (number | string)[] | null, space?: string | number): string;
-}
-
-/**
-  * An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.
-  */
-declare const JSON: JSON;
-
-
-/////////////////////////////
-/// ECMAScript Array API (specially handled by compiler)
-/////////////////////////////
-
-interface ReadonlyArray<T> {
-    /**
-      * Gets the length of the array. This is a number one higher than the highest element defined in an array.
-      */
-    readonly length: number;
-    /**
-      * Returns a string representation of an array.
-      */
-    toString(): string;
-    /**
-      * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.
-      */
-    toLocaleString(): string;
-    /**
-      * Combines two or more arrays.
-      * @param items Additional items to add to the end of array1.
-      */
-    concat(...items: ConcatArray<T>[]): T[];
-    /**
-      * Combines two or more arrays.
-      * @param items Additional items to add to the end of array1.
-      */
-    concat(...items: (T | ConcatArray<T>)[]): T[];
-    /**
-      * Adds all the elements of an array separated by the specified separator string.
-      * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.
-      */
-    join(separator?: string): string;
-    /**
-      * Returns a section of an array.
-      * @param start The beginning of the specified portion of the array.
-      * @param end The end of the specified portion of the array.
-      */
-    slice(start?: number, end?: number): T[];
-    /**
-      * Returns the index of the first occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.
-      */
-    indexOf(searchElement: T, fromIndex?: number): number;
-    /**
-      * Returns the index of the last occurrence of a specified value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.
-      */
-    lastIndexOf(searchElement: T, fromIndex?: number): number;
-    /**
-      * Determines whether all the members of an array satisfy the specified test.
-      * @param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-      */
-    every(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => boolean, thisArg?: any): boolean;
-    /**
-      * Determines whether the specified callback function returns true for any element of an array.
-      * @param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-      */
-    some(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => boolean, thisArg?: any): boolean;
-    /**
-      * Performs the specified action for each element in an array.
-      * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.
-      * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-      */
-    forEach(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => void, thisArg?: any): void;
-    /**
-      * Calls a defined callback function on each element of an array, and returns an array that contains the results.
-      * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-      */
-    map<U>(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => U, thisArg?: any): U[];
-    /**
-     * Returns the elements of an array that meet the condition specified in a callback function.
-     * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.
-     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-     */
-    filter<S extends T>(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => value is S, thisArg?: any): S[];
-    /**
-      * Returns the elements of an array that meet the condition specified in a callback function.
-      * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-      */
-    filter(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => any, thisArg?: any): T[];
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.
-      */
-    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T): T;
-    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T, initialValue: T): T;
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.
-      */
-    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => U, initialValue: U): U;
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.
-      */
-    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T): T;
-    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T, initialValue: T): T;
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.
-      */
-    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => U, initialValue: U): U;
-
-    readonly [n: number]: T;
-}
-
-interface ConcatArray<T> {
-    readonly length: number;
-    readonly [n: number]: T;
-    join(separator?: string): string;
-    slice(start?: number, end?: number): T[];
-}
-
-interface Array<T> {
-    /**
-      * Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.
-      */
-    length: number;
-    /**
-      * Returns a string representation of an array.
-      */
-    toString(): string;
-    /**
-      * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.
-      */
-    toLocaleString(): string;
-    /**
-      * Appends new elements to an array, and returns the new length of the array.
-      * @param items New elements of the Array.
-      */
-    push(...items: T[]): number;
-    /**
-      * Removes the last element from an array and returns it.
-      */
-    pop(): T | undefined;
-    /**
-      * Combines two or more arrays.
-      * @param items Additional items to add to the end of array1.
-      */
-    concat(...items: ConcatArray<T>[]): T[];
-    /**
-      * Combines two or more arrays.
-      * @param items Additional items to add to the end of array1.
-      */
-    concat(...items: (T | ConcatArray<T>)[]): T[];
-    /**
-      * Adds all the elements of an array separated by the specified separator string.
-      * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.
-      */
-    join(separator?: string): string;
-    /**
-      * Reverses the elements in an Array.
-      */
-    reverse(): T[];
-    /**
-      * Removes the first element from an array and returns it.
-      */
-    shift(): T | undefined;
-    /**
-      * Returns a section of an array.
-      * @param start The beginning of the specified portion of the array.
-      * @param end The end of the specified portion of the array.
-      */
-    slice(start?: number, end?: number): T[];
-    /**
-      * Sorts an array.
-      * @param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.
-      */
-    sort(compareFn?: (a: T, b: T) => number): this;
-    /**
-      * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.
-      * @param start The zero-based location in the array from which to start removing elements.
-      * @param deleteCount The number of elements to remove.
-      */
-    splice(start: number, deleteCount?: number): T[];
-    /**
-      * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.
-      * @param start The zero-based location in the array from which to start removing elements.
-      * @param deleteCount The number of elements to remove.
-      * @param items Elements to insert into the array in place of the deleted elements.
-      */
-    splice(start: number, deleteCount: number, ...items: T[]): T[];
-    /**
-      * Inserts new elements at the start of an array.
-      * @param items  Elements to insert at the start of the Array.
-      */
-    unshift(...items: T[]): number;
-    /**
-      * Returns the index of the first occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.
-      */
-    indexOf(searchElement: T, fromIndex?: number): number;
-    /**
-      * Returns the index of the last occurrence of a specified value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.
-      */
-    lastIndexOf(searchElement: T, fromIndex?: number): number;
-    /**
-      * Determines whether all the members of an array satisfy the specified test.
-      * @param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-      */
-    every(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;
-    /**
-      * Determines whether the specified callback function returns true for any element of an array.
-      * @param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-      */
-    some(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;
-    /**
-      * Performs the specified action for each element in an array.
-      * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.
-      * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-      */
-    forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;
-    /**
-      * Calls a defined callback function on each element of an array, and returns an array that contains the results.
-      * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-      */
-    map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];
-    /**
-     * Returns the elements of an array that meet the condition specified in a callback function.
-     * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.
-     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-     */
-    filter<S extends T>(callbackfn: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[];
-    /**
-      * Returns the elements of an array that meet the condition specified in a callback function.
-      * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.
-      */
-    filter(callbackfn: (value: T, index: number, array: T[]) => any, thisArg?: any): T[];
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.
-      */
-    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;
-    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.
-      */
-    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.
-      */
-    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;
-    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.
-      */
-    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;
-
-    [n: number]: T;
-}
-
-interface ArrayConstructor {
-    new(arrayLength?: number): any[];
-    new <T>(arrayLength: number): T[];
-    new <T>(...items: T[]): T[];
-    (arrayLength?: number): any[];
-    <T>(arrayLength: number): T[];
-    <T>(...items: T[]): T[];
-    isArray(arg: any): arg is Array<any>;
-    readonly prototype: Array<any>;
-}
-
-declare const Array: ArrayConstructor;
-
-interface TypedPropertyDescriptor<T> {
-    enumerable?: boolean;
-    configurable?: boolean;
-    writable?: boolean;
-    value?: T;
-    get?: () => T;
-    set?: (value: T) => void;
-}
-
-declare type ClassDecorator = <TFunction extends Function>(target: TFunction) => TFunction | void;
-declare type PropertyDecorator = (target: Object, propertyKey: string | symbol) => void;
-declare type MethodDecorator = <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T> | void;
-declare type ParameterDecorator = (target: Object, propertyKey: string | symbol, parameterIndex: number) => void;
-
-interface PromiseLike<T> {
-    /**
-     * Attaches callbacks for the resolution and/or rejection of the Promise.
-     * @param onfulfilled The callback to execute when the Promise is resolved.
-     * @param onrejected The callback to execute when the Promise is rejected.
-     * @returns A Promise for the completion of which ever callback is executed.
-     */
-    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): PromiseLike<TResult1 | TResult2>;
-}
-
-/**
- * Represents the completion of an asynchronous operation
- */
-interface Promise<T> {
-    /**
-     * Attaches callbacks for the resolution and/or rejection of the Promise.
-     * @param onfulfilled The callback to execute when the Promise is resolved.
-     * @param onrejected The callback to execute when the Promise is rejected.
-     * @returns A Promise for the completion of which ever callback is executed.
-     */
-    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
-
-    /**
-     * Attaches a callback for only the rejection of the Promise.
-     * @param onrejected The callback to execute when the Promise is rejected.
-     * @returns A Promise for the completion of the callback.
-     */
-    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
-}
-
-interface ArrayLike<T> {
-    readonly length: number;
-    readonly [n: number]: T;
-}
-
-/**
-  * Represents a raw buffer of binary data, which is used to store data for the
-  * different typed arrays. ArrayBuffers cannot be read from or written to directly,
-  * but can be passed to a typed array or DataView Object to interpret the raw
-  * buffer as needed.
-  */
-interface ArrayBuffer {
-    /**
-      * Read-only. The length of the ArrayBuffer (in bytes).
-      */
-    readonly byteLength: number;
-
-    /**
-      * Returns a section of an ArrayBuffer.
-      */
-    slice(begin: number, end?: number): ArrayBuffer;
-}
-
-/**
- * Allowed ArrayBuffer types for the buffer of an ArrayBufferView and related Typed Arrays.
- */
-interface ArrayBufferTypes {
-    ArrayBuffer: ArrayBuffer;
-}
-type ArrayBufferLike = ArrayBufferTypes[keyof ArrayBufferTypes];
-
-interface ArrayBufferConstructor {
-    readonly prototype: ArrayBuffer;
-    new(byteLength: number): ArrayBuffer;
-    isView(arg: any): arg is ArrayBufferView;
-}
-declare const ArrayBuffer: ArrayBufferConstructor;
-
-interface ArrayBufferView {
-    /**
-      * The ArrayBuffer instance referenced by the array.
-      */
-    buffer: ArrayBufferLike;
-
-    /**
-      * The length in bytes of the array.
-      */
-    byteLength: number;
-
-    /**
-      * The offset in bytes of the array.
-      */
-    byteOffset: number;
-}
-
-interface DataView {
-    readonly buffer: ArrayBuffer;
-    readonly byteLength: number;
-    readonly byteOffset: number;
-    /**
-      * Gets the Float32 value at the specified byte offset from the start of the view. There is
-      * no alignment constraint; multi-byte values may be fetched from any offset.
-      * @param byteOffset The place in the buffer at which the value should be retrieved.
-      */
-    getFloat32(byteOffset: number, littleEndian?: boolean): number;
-
-    /**
-      * Gets the Float64 value at the specified byte offset from the start of the view. There is
-      * no alignment constraint; multi-byte values may be fetched from any offset.
-      * @param byteOffset The place in the buffer at which the value should be retrieved.
-      */
-    getFloat64(byteOffset: number, littleEndian?: boolean): number;
-
-    /**
-      * Gets the Int8 value at the specified byte offset from the start of the view. There is
-      * no alignment constraint; multi-byte values may be fetched from any offset.
-      * @param byteOffset The place in the buffer at which the value should be retrieved.
-      */
-    getInt8(byteOffset: number): number;
-
-    /**
-      * Gets the Int16 value at the specified byte offset from the start of the view. There is
-      * no alignment constraint; multi-byte values may be fetched from any offset.
-      * @param byteOffset The place in the buffer at which the value should be retrieved.
-      */
-    getInt16(byteOffset: number, littleEndian?: boolean): number;
-    /**
-      * Gets the Int32 value at the specified byte offset from the start of the view. There is
-      * no alignment constraint; multi-byte values may be fetched from any offset.
-      * @param byteOffset The place in the buffer at which the value should be retrieved.
-      */
-    getInt32(byteOffset: number, littleEndian?: boolean): number;
-
-    /**
-      * Gets the Uint8 value at the specified byte offset from the start of the view. There is
-      * no alignment constraint; multi-byte values may be fetched from any offset.
-      * @param byteOffset The place in the buffer at which the value should be retrieved.
-      */
-    getUint8(byteOffset: number): number;
-
-    /**
-      * Gets the Uint16 value at the specified byte offset from the start of the view. There is
-      * no alignment constraint; multi-byte values may be fetched from any offset.
-      * @param byteOffset The place in the buffer at which the value should be retrieved.
-      */
-    getUint16(byteOffset: number, littleEndian?: boolean): number;
-
-    /**
-      * Gets the Uint32 value at the specified byte offset from the start of the view. There is
-      * no alignment constraint; multi-byte values may be fetched from any offset.
-      * @param byteOffset The place in the buffer at which the value should be retrieved.
-      */
-    getUint32(byteOffset: number, littleEndian?: boolean): number;
-
-    /**
-      * Stores an Float32 value at the specified byte offset from the start of the view.
-      * @param byteOffset The place in the buffer at which the value should be set.
-      * @param value The value to set.
-      * @param littleEndian If false or undefined, a big-endian value should be written,
-      * otherwise a little-endian value should be written.
-      */
-    setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void;
-
-    /**
-      * Stores an Float64 value at the specified byte offset from the start of the view.
-      * @param byteOffset The place in the buffer at which the value should be set.
-      * @param value The value to set.
-      * @param littleEndian If false or undefined, a big-endian value should be written,
-      * otherwise a little-endian value should be written.
-      */
-    setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void;
-
-    /**
-      * Stores an Int8 value at the specified byte offset from the start of the view.
-      * @param byteOffset The place in the buffer at which the value should be set.
-      * @param value The value to set.
-      */
-    setInt8(byteOffset: number, value: number): void;
-
-    /**
-      * Stores an Int16 value at the specified byte offset from the start of the view.
-      * @param byteOffset The place in the buffer at which the value should be set.
-      * @param value The value to set.
-      * @param littleEndian If false or undefined, a big-endian value should be written,
-      * otherwise a little-endian value should be written.
-      */
-    setInt16(byteOffset: number, value: number, littleEndian?: boolean): void;
-
-    /**
-      * Stores an Int32 value at the specified byte offset from the start of the view.
-      * @param byteOffset The place in the buffer at which the value should be set.
-      * @param value The value to set.
-      * @param littleEndian If false or undefined, a big-endian value should be written,
-      * otherwise a little-endian value should be written.
-      */
-    setInt32(byteOffset: number, value: number, littleEndian?: boolean): void;
-
-    /**
-      * Stores an Uint8 value at the specified byte offset from the start of the view.
-      * @param byteOffset The place in the buffer at which the value should be set.
-      * @param value The value to set.
-      */
-    setUint8(byteOffset: number, value: number): void;
-
-    /**
-      * Stores an Uint16 value at the specified byte offset from the start of the view.
-      * @param byteOffset The place in the buffer at which the value should be set.
-      * @param value The value to set.
-      * @param littleEndian If false or undefined, a big-endian value should be written,
-      * otherwise a little-endian value should be written.
-      */
-    setUint16(byteOffset: number, value: number, littleEndian?: boolean): void;
-
-    /**
-      * Stores an Uint32 value at the specified byte offset from the start of the view.
-      * @param byteOffset The place in the buffer at which the value should be set.
-      * @param value The value to set.
-      * @param littleEndian If false or undefined, a big-endian value should be written,
-      * otherwise a little-endian value should be written.
-      */
-    setUint32(byteOffset: number, value: number, littleEndian?: boolean): void;
-}
-
-interface DataViewConstructor {
-    new(buffer: ArrayBufferLike, byteOffset?: number, byteLength?: number): DataView;
-}
-declare const DataView: DataViewConstructor;
-
-/**
-  * A typed array of 8-bit integer values. The contents are initialized to 0. If the requested
-  * number of bytes could not be allocated an exception is raised.
-  */
-interface Int8Array {
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * The ArrayBuffer instance referenced by the array.
-      */
-    readonly buffer: ArrayBufferLike;
-
-    /**
-      * The length in bytes of the array.
-      */
-    readonly byteLength: number;
-
-    /**
-      * The offset in bytes of the array.
-      */
-    readonly byteOffset: number;
-
-    /**
-      * Returns the this object after copying a section of the array identified by start and end
-      * to the same array starting at position target
-      * @param target If target is negative, it is treated as length+target where length is the
-      * length of the array.
-      * @param start If start is negative, it is treated as length+start. If end is negative, it
-      * is treated as length+end.
-      * @param end If not specified, length of the this object is used as its default value.
-      */
-    copyWithin(target: number, start: number, end?: number): this;
-
-    /**
-      * Determines whether all the members of an array satisfy the specified test.
-      * @param callbackfn A function that accepts up to three arguments. The every method calls
-      * the callbackfn function for each element in array1 until the callbackfn returns false,
-      * or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    every(callbackfn: (value: number, index: number, array: Int8Array) => boolean, thisArg?: any): boolean;
-
-    /**
-        * Returns the this object after filling the section identified by start and end with value
-        * @param value value to fill array section with
-        * @param start index to start filling the array at. If start is negative, it is treated as
-        * length+start where length is the length of the array.
-        * @param end index to stop filling the array at. If end is negative, it is treated as
-        * length+end.
-        */
-    fill(value: number, start?: number, end?: number): this;
-
-    /**
-      * Returns the elements of an array that meet the condition specified in a callback function.
-      * @param callbackfn A function that accepts up to three arguments. The filter method calls
-      * the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    filter(callbackfn: (value: number, index: number, array: Int8Array) => any, thisArg?: any): Int8Array;
-
-    /**
-      * Returns the value of the first element in the array where predicate is true, and undefined
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found, find
-      * immediately returns that element value. Otherwise, find returns undefined.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    find(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: any): number | undefined;
-
-    /**
-      * Returns the index of the first element in the array where predicate is true, and -1
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found,
-      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    findIndex(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: any): number;
-
-    /**
-      * Performs the specified action for each element in an array.
-      * @param callbackfn  A function that accepts up to three arguments. forEach calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    forEach(callbackfn: (value: number, index: number, array: Int8Array) => void, thisArg?: any): void;
-
-    /**
-      * Returns the index of the first occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      *  search starts at index 0.
-      */
-    indexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * Adds all the elements of an array separated by the specified separator string.
-      * @param separator A string used to separate one element of an array from the next in the
-      * resulting String. If omitted, the array elements are separated with a comma.
-      */
-    join(separator?: string): string;
-
-    /**
-      * Returns the index of the last occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      * search starts at index 0.
-      */
-    lastIndexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * The length of the array.
-      */
-    readonly length: number;
-
-    /**
-      * Calls a defined callback function on each element of an array, and returns an array that
-      * contains the results.
-      * @param callbackfn A function that accepts up to three arguments. The map method calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    map(callbackfn: (value: number, index: number, array: Int8Array) => number, thisArg?: any): Int8Array;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number): number;
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int8Array) => U, initialValue: U): U;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an
-      * argument instead of an array value.
-      */
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number): number;
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int8Array) => U, initialValue: U): U;
-
-    /**
-      * Reverses the elements in an Array.
-      */
-    reverse(): Int8Array;
-
-    /**
-      * Sets a value or an array of values.
-      * @param array A typed or untyped array of values to set.
-      * @param offset The index in the current array at which the values are to be written.
-      */
-    set(array: ArrayLike<number>, offset?: number): void;
-
-    /**
-      * Returns a section of an array.
-      * @param start The beginning of the specified portion of the array.
-      * @param end The end of the specified portion of the array.
-      */
-    slice(start?: number, end?: number): Int8Array;
-
-    /**
-      * Determines whether the specified callback function returns true for any element of an array.
-      * @param callbackfn A function that accepts up to three arguments. The some method calls the
-      * callbackfn function for each element in array1 until the callbackfn returns true, or until
-      * the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    some(callbackfn: (value: number, index: number, array: Int8Array) => boolean, thisArg?: any): boolean;
-
-    /**
-      * Sorts an array.
-      * @param compareFn The name of the function used to determine the order of the elements. If
-      * omitted, the elements are sorted in ascending, ASCII character order.
-      */
-    sort(compareFn?: (a: number, b: number) => number): this;
-
-    /**
-      * Gets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements
-      * at begin, inclusive, up to end, exclusive.
-      * @param begin The index of the beginning of the array.
-      * @param end The index of the end of the array.
-      */
-    subarray(begin: number, end?: number): Int8Array;
-
-    /**
-      * Converts a number to a string by using the current locale.
-      */
-    toLocaleString(): string;
-
-    /**
-      * Returns a string representation of an array.
-      */
-    toString(): string;
-
-    [index: number]: number;
-}
-interface Int8ArrayConstructor {
-    readonly prototype: Int8Array;
-    new(length: number): Int8Array;
-    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int8Array;
-    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int8Array;
-
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * Returns a new array from a set of elements.
-      * @param items A set of elements to include in the new array object.
-      */
-    of(...items: number[]): Int8Array;
-
-    /**
-      * Creates an array from an array-like or iterable object.
-      * @param arrayLike An array-like or iterable object to convert to an array.
-      * @param mapfn A mapping function to call on every element of the array.
-      * @param thisArg Value of 'this' used to invoke the mapfn.
-      */
-    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int8Array;
-
-
-}
-declare const Int8Array: Int8ArrayConstructor;
-
-/**
-  * A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the
-  * requested number of bytes could not be allocated an exception is raised.
-  */
-interface Uint8Array {
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * The ArrayBuffer instance referenced by the array.
-      */
-    readonly buffer: ArrayBufferLike;
-
-    /**
-      * The length in bytes of the array.
-      */
-    readonly byteLength: number;
-
-    /**
-      * The offset in bytes of the array.
-      */
-    readonly byteOffset: number;
-
-    /**
-      * Returns the this object after copying a section of the array identified by start and end
-      * to the same array starting at position target
-      * @param target If target is negative, it is treated as length+target where length is the
-      * length of the array.
-      * @param start If start is negative, it is treated as length+start. If end is negative, it
-      * is treated as length+end.
-      * @param end If not specified, length of the this object is used as its default value.
-      */
-    copyWithin(target: number, start: number, end?: number): this;
-
-    /**
-      * Determines whether all the members of an array satisfy the specified test.
-      * @param callbackfn A function that accepts up to three arguments. The every method calls
-      * the callbackfn function for each element in array1 until the callbackfn returns false,
-      * or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    every(callbackfn: (value: number, index: number, array: Uint8Array) => boolean, thisArg?: any): boolean;
-
-    /**
-        * Returns the this object after filling the section identified by start and end with value
-        * @param value value to fill array section with
-        * @param start index to start filling the array at. If start is negative, it is treated as
-        * length+start where length is the length of the array.
-        * @param end index to stop filling the array at. If end is negative, it is treated as
-        * length+end.
-        */
-    fill(value: number, start?: number, end?: number): this;
-
-    /**
-      * Returns the elements of an array that meet the condition specified in a callback function.
-      * @param callbackfn A function that accepts up to three arguments. The filter method calls
-      * the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    filter(callbackfn: (value: number, index: number, array: Uint8Array) => any, thisArg?: any): Uint8Array;
-
-    /**
-      * Returns the value of the first element in the array where predicate is true, and undefined
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found, find
-      * immediately returns that element value. Otherwise, find returns undefined.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    find(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: any): number | undefined;
-
-    /**
-      * Returns the index of the first element in the array where predicate is true, and -1
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found,
-      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    findIndex(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: any): number;
-
-    /**
-      * Performs the specified action for each element in an array.
-      * @param callbackfn  A function that accepts up to three arguments. forEach calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    forEach(callbackfn: (value: number, index: number, array: Uint8Array) => void, thisArg?: any): void;
-
-    /**
-      * Returns the index of the first occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      *  search starts at index 0.
-      */
-    indexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * Adds all the elements of an array separated by the specified separator string.
-      * @param separator A string used to separate one element of an array from the next in the
-      * resulting String. If omitted, the array elements are separated with a comma.
-      */
-    join(separator?: string): string;
-
-    /**
-      * Returns the index of the last occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      * search starts at index 0.
-      */
-    lastIndexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * The length of the array.
-      */
-    readonly length: number;
-
-    /**
-      * Calls a defined callback function on each element of an array, and returns an array that
-      * contains the results.
-      * @param callbackfn A function that accepts up to three arguments. The map method calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    map(callbackfn: (value: number, index: number, array: Uint8Array) => number, thisArg?: any): Uint8Array;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number): number;
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8Array) => U, initialValue: U): U;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an
-      * argument instead of an array value.
-      */
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number): number;
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8Array) => U, initialValue: U): U;
-
-    /**
-      * Reverses the elements in an Array.
-      */
-    reverse(): Uint8Array;
-
-    /**
-      * Sets a value or an array of values.
-      * @param array A typed or untyped array of values to set.
-      * @param offset The index in the current array at which the values are to be written.
-      */
-    set(array: ArrayLike<number>, offset?: number): void;
-
-    /**
-      * Returns a section of an array.
-      * @param start The beginning of the specified portion of the array.
-      * @param end The end of the specified portion of the array.
-      */
-    slice(start?: number, end?: number): Uint8Array;
-
-    /**
-      * Determines whether the specified callback function returns true for any element of an array.
-      * @param callbackfn A function that accepts up to three arguments. The some method calls the
-      * callbackfn function for each element in array1 until the callbackfn returns true, or until
-      * the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    some(callbackfn: (value: number, index: number, array: Uint8Array) => boolean, thisArg?: any): boolean;
-
-    /**
-      * Sorts an array.
-      * @param compareFn The name of the function used to determine the order of the elements. If
-      * omitted, the elements are sorted in ascending, ASCII character order.
-      */
-    sort(compareFn?: (a: number, b: number) => number): this;
-
-    /**
-      * Gets a new Uint8Array view of the ArrayBuffer store for this array, referencing the elements
-      * at begin, inclusive, up to end, exclusive.
-      * @param begin The index of the beginning of the array.
-      * @param end The index of the end of the array.
-      */
-    subarray(begin: number, end?: number): Uint8Array;
-
-    /**
-      * Converts a number to a string by using the current locale.
-      */
-    toLocaleString(): string;
-
-    /**
-      * Returns a string representation of an array.
-      */
-    toString(): string;
-
-    [index: number]: number;
-}
-
-interface Uint8ArrayConstructor {
-    readonly prototype: Uint8Array;
-    new(length: number): Uint8Array;
-    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint8Array;
-    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint8Array;
-
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * Returns a new array from a set of elements.
-      * @param items A set of elements to include in the new array object.
-      */
-    of(...items: number[]): Uint8Array;
-
-    /**
-      * Creates an array from an array-like or iterable object.
-      * @param arrayLike An array-like or iterable object to convert to an array.
-      * @param mapfn A mapping function to call on every element of the array.
-      * @param thisArg Value of 'this' used to invoke the mapfn.
-      */
-    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8Array;
-
-}
-declare const Uint8Array: Uint8ArrayConstructor;
-
-/**
-  * A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.
-  * If the requested number of bytes could not be allocated an exception is raised.
-  */
-interface Uint8ClampedArray {
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * The ArrayBuffer instance referenced by the array.
-      */
-    readonly buffer: ArrayBufferLike;
-
-    /**
-      * The length in bytes of the array.
-      */
-    readonly byteLength: number;
-
-    /**
-      * The offset in bytes of the array.
-      */
-    readonly byteOffset: number;
-
-    /**
-      * Returns the this object after copying a section of the array identified by start and end
-      * to the same array starting at position target
-      * @param target If target is negative, it is treated as length+target where length is the
-      * length of the array.
-      * @param start If start is negative, it is treated as length+start. If end is negative, it
-      * is treated as length+end.
-      * @param end If not specified, length of the this object is used as its default value.
-      */
-    copyWithin(target: number, start: number, end?: number): this;
-
-    /**
-      * Determines whether all the members of an array satisfy the specified test.
-      * @param callbackfn A function that accepts up to three arguments. The every method calls
-      * the callbackfn function for each element in array1 until the callbackfn returns false,
-      * or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    every(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => boolean, thisArg?: any): boolean;
-
-    /**
-        * Returns the this object after filling the section identified by start and end with value
-        * @param value value to fill array section with
-        * @param start index to start filling the array at. If start is negative, it is treated as
-        * length+start where length is the length of the array.
-        * @param end index to stop filling the array at. If end is negative, it is treated as
-        * length+end.
-        */
-    fill(value: number, start?: number, end?: number): this;
-
-    /**
-      * Returns the elements of an array that meet the condition specified in a callback function.
-      * @param callbackfn A function that accepts up to three arguments. The filter method calls
-      * the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    filter(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => any, thisArg?: any): Uint8ClampedArray;
-
-    /**
-      * Returns the value of the first element in the array where predicate is true, and undefined
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found, find
-      * immediately returns that element value. Otherwise, find returns undefined.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    find(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, thisArg?: any): number | undefined;
-
-    /**
-      * Returns the index of the first element in the array where predicate is true, and -1
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found,
-      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    findIndex(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, thisArg?: any): number;
-
-    /**
-      * Performs the specified action for each element in an array.
-      * @param callbackfn  A function that accepts up to three arguments. forEach calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    forEach(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => void, thisArg?: any): void;
-
-    /**
-      * Returns the index of the first occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      *  search starts at index 0.
-      */
-    indexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * Adds all the elements of an array separated by the specified separator string.
-      * @param separator A string used to separate one element of an array from the next in the
-      * resulting String. If omitted, the array elements are separated with a comma.
-      */
-    join(separator?: string): string;
-
-    /**
-      * Returns the index of the last occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      * search starts at index 0.
-      */
-    lastIndexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * The length of the array.
-      */
-    readonly length: number;
-
-    /**
-      * Calls a defined callback function on each element of an array, and returns an array that
-      * contains the results.
-      * @param callbackfn A function that accepts up to three arguments. The map method calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    map(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => number, thisArg?: any): Uint8ClampedArray;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number): number;
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => U, initialValue: U): U;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an
-      * argument instead of an array value.
-      */
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number): number;
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => U, initialValue: U): U;
-
-    /**
-      * Reverses the elements in an Array.
-      */
-    reverse(): Uint8ClampedArray;
-
-    /**
-      * Sets a value or an array of values.
-      * @param array A typed or untyped array of values to set.
-      * @param offset The index in the current array at which the values are to be written.
-      */
-    set(array: ArrayLike<number>, offset?: number): void;
-
-    /**
-      * Returns a section of an array.
-      * @param start The beginning of the specified portion of the array.
-      * @param end The end of the specified portion of the array.
-      */
-    slice(start?: number, end?: number): Uint8ClampedArray;
-
-    /**
-      * Determines whether the specified callback function returns true for any element of an array.
-      * @param callbackfn A function that accepts up to three arguments. The some method calls the
-      * callbackfn function for each element in array1 until the callbackfn returns true, or until
-      * the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    some(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => boolean, thisArg?: any): boolean;
-
-    /**
-      * Sorts an array.
-      * @param compareFn The name of the function used to determine the order of the elements. If
-      * omitted, the elements are sorted in ascending, ASCII character order.
-      */
-    sort(compareFn?: (a: number, b: number) => number): this;
-
-    /**
-      * Gets a new Uint8ClampedArray view of the ArrayBuffer store for this array, referencing the elements
-      * at begin, inclusive, up to end, exclusive.
-      * @param begin The index of the beginning of the array.
-      * @param end The index of the end of the array.
-      */
-    subarray(begin: number, end?: number): Uint8ClampedArray;
-
-    /**
-      * Converts a number to a string by using the current locale.
-      */
-    toLocaleString(): string;
-
-    /**
-      * Returns a string representation of an array.
-      */
-    toString(): string;
-
-    [index: number]: number;
-}
-
-interface Uint8ClampedArrayConstructor {
-    readonly prototype: Uint8ClampedArray;
-    new(length: number): Uint8ClampedArray;
-    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint8ClampedArray;
-    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint8ClampedArray;
-
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * Returns a new array from a set of elements.
-      * @param items A set of elements to include in the new array object.
-      */
-    of(...items: number[]): Uint8ClampedArray;
-
-    /**
-      * Creates an array from an array-like or iterable object.
-      * @param arrayLike An array-like or iterable object to convert to an array.
-      * @param mapfn A mapping function to call on every element of the array.
-      * @param thisArg Value of 'this' used to invoke the mapfn.
-      */
-    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8ClampedArray;
-}
-declare const Uint8ClampedArray: Uint8ClampedArrayConstructor;
-
-/**
-  * A typed array of 16-bit signed integer values. The contents are initialized to 0. If the
-  * requested number of bytes could not be allocated an exception is raised.
-  */
-interface Int16Array {
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * The ArrayBuffer instance referenced by the array.
-      */
-    readonly buffer: ArrayBufferLike;
-
-    /**
-      * The length in bytes of the array.
-      */
-    readonly byteLength: number;
-
-    /**
-      * The offset in bytes of the array.
-      */
-    readonly byteOffset: number;
-
-    /**
-      * Returns the this object after copying a section of the array identified by start and end
-      * to the same array starting at position target
-      * @param target If target is negative, it is treated as length+target where length is the
-      * length of the array.
-      * @param start If start is negative, it is treated as length+start. If end is negative, it
-      * is treated as length+end.
-      * @param end If not specified, length of the this object is used as its default value.
-      */
-    copyWithin(target: number, start: number, end?: number): this;
-
-    /**
-      * Determines whether all the members of an array satisfy the specified test.
-      * @param callbackfn A function that accepts up to three arguments. The every method calls
-      * the callbackfn function for each element in array1 until the callbackfn returns false,
-      * or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    every(callbackfn: (value: number, index: number, array: Int16Array) => boolean, thisArg?: any): boolean;
-
-    /**
-        * Returns the this object after filling the section identified by start and end with value
-        * @param value value to fill array section with
-        * @param start index to start filling the array at. If start is negative, it is treated as
-        * length+start where length is the length of the array.
-        * @param end index to stop filling the array at. If end is negative, it is treated as
-        * length+end.
-        */
-    fill(value: number, start?: number, end?: number): this;
-
-    /**
-      * Returns the elements of an array that meet the condition specified in a callback function.
-      * @param callbackfn A function that accepts up to three arguments. The filter method calls
-      * the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    filter(callbackfn: (value: number, index: number, array: Int16Array) => any, thisArg?: any): Int16Array;
-
-    /**
-      * Returns the value of the first element in the array where predicate is true, and undefined
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found, find
-      * immediately returns that element value. Otherwise, find returns undefined.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    find(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: any): number | undefined;
-
-    /**
-      * Returns the index of the first element in the array where predicate is true, and -1
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found,
-      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    findIndex(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: any): number;
-
-    /**
-      * Performs the specified action for each element in an array.
-      * @param callbackfn  A function that accepts up to three arguments. forEach calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    forEach(callbackfn: (value: number, index: number, array: Int16Array) => void, thisArg?: any): void;
-    /**
-      * Returns the index of the first occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      *  search starts at index 0.
-      */
-    indexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * Adds all the elements of an array separated by the specified separator string.
-      * @param separator A string used to separate one element of an array from the next in the
-      * resulting String. If omitted, the array elements are separated with a comma.
-      */
-    join(separator?: string): string;
-
-    /**
-      * Returns the index of the last occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      * search starts at index 0.
-      */
-    lastIndexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * The length of the array.
-      */
-    readonly length: number;
-
-    /**
-      * Calls a defined callback function on each element of an array, and returns an array that
-      * contains the results.
-      * @param callbackfn A function that accepts up to three arguments. The map method calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    map(callbackfn: (value: number, index: number, array: Int16Array) => number, thisArg?: any): Int16Array;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number): number;
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int16Array) => U, initialValue: U): U;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an
-      * argument instead of an array value.
-      */
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number): number;
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int16Array) => U, initialValue: U): U;
-
-    /**
-      * Reverses the elements in an Array.
-      */
-    reverse(): Int16Array;
-
-    /**
-      * Sets a value or an array of values.
-      * @param array A typed or untyped array of values to set.
-      * @param offset The index in the current array at which the values are to be written.
-      */
-    set(array: ArrayLike<number>, offset?: number): void;
-
-    /**
-      * Returns a section of an array.
-      * @param start The beginning of the specified portion of the array.
-      * @param end The end of the specified portion of the array.
-      */
-    slice(start?: number, end?: number): Int16Array;
-
-    /**
-      * Determines whether the specified callback function returns true for any element of an array.
-      * @param callbackfn A function that accepts up to three arguments. The some method calls the
-      * callbackfn function for each element in array1 until the callbackfn returns true, or until
-      * the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    some(callbackfn: (value: number, index: number, array: Int16Array) => boolean, thisArg?: any): boolean;
-
-    /**
-      * Sorts an array.
-      * @param compareFn The name of the function used to determine the order of the elements. If
-      * omitted, the elements are sorted in ascending, ASCII character order.
-      */
-    sort(compareFn?: (a: number, b: number) => number): this;
-
-    /**
-      * Gets a new Int16Array view of the ArrayBuffer store for this array, referencing the elements
-      * at begin, inclusive, up to end, exclusive.
-      * @param begin The index of the beginning of the array.
-      * @param end The index of the end of the array.
-      */
-    subarray(begin: number, end?: number): Int16Array;
-
-    /**
-      * Converts a number to a string by using the current locale.
-      */
-    toLocaleString(): string;
-
-    /**
-      * Returns a string representation of an array.
-      */
-    toString(): string;
-
-    [index: number]: number;
-}
-
-interface Int16ArrayConstructor {
-    readonly prototype: Int16Array;
-    new(length: number): Int16Array;
-    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int16Array;
-    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int16Array;
-
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * Returns a new array from a set of elements.
-      * @param items A set of elements to include in the new array object.
-      */
-    of(...items: number[]): Int16Array;
-
-    /**
-      * Creates an array from an array-like or iterable object.
-      * @param arrayLike An array-like or iterable object to convert to an array.
-      * @param mapfn A mapping function to call on every element of the array.
-      * @param thisArg Value of 'this' used to invoke the mapfn.
-      */
-    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int16Array;
-
-
-}
-declare const Int16Array: Int16ArrayConstructor;
-
-/**
-  * A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the
-  * requested number of bytes could not be allocated an exception is raised.
-  */
-interface Uint16Array {
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * The ArrayBuffer instance referenced by the array.
-      */
-    readonly buffer: ArrayBufferLike;
-
-    /**
-      * The length in bytes of the array.
-      */
-    readonly byteLength: number;
-
-    /**
-      * The offset in bytes of the array.
-      */
-    readonly byteOffset: number;
-
-    /**
-      * Returns the this object after copying a section of the array identified by start and end
-      * to the same array starting at position target
-      * @param target If target is negative, it is treated as length+target where length is the
-      * length of the array.
-      * @param start If start is negative, it is treated as length+start. If end is negative, it
-      * is treated as length+end.
-      * @param end If not specified, length of the this object is used as its default value.
-      */
-    copyWithin(target: number, start: number, end?: number): this;
-
-    /**
-      * Determines whether all the members of an array satisfy the specified test.
-      * @param callbackfn A function that accepts up to three arguments. The every method calls
-      * the callbackfn function for each element in array1 until the callbackfn returns false,
-      * or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    every(callbackfn: (value: number, index: number, array: Uint16Array) => boolean, thisArg?: any): boolean;
-
-    /**
-        * Returns the this object after filling the section identified by start and end with value
-        * @param value value to fill array section with
-        * @param start index to start filling the array at. If start is negative, it is treated as
-        * length+start where length is the length of the array.
-        * @param end index to stop filling the array at. If end is negative, it is treated as
-        * length+end.
-        */
-    fill(value: number, start?: number, end?: number): this;
-
-    /**
-      * Returns the elements of an array that meet the condition specified in a callback function.
-      * @param callbackfn A function that accepts up to three arguments. The filter method calls
-      * the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    filter(callbackfn: (value: number, index: number, array: Uint16Array) => any, thisArg?: any): Uint16Array;
-
-    /**
-      * Returns the value of the first element in the array where predicate is true, and undefined
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found, find
-      * immediately returns that element value. Otherwise, find returns undefined.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    find(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: any): number | undefined;
-
-    /**
-      * Returns the index of the first element in the array where predicate is true, and -1
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found,
-      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    findIndex(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: any): number;
-
-    /**
-      * Performs the specified action for each element in an array.
-      * @param callbackfn  A function that accepts up to three arguments. forEach calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    forEach(callbackfn: (value: number, index: number, array: Uint16Array) => void, thisArg?: any): void;
-
-    /**
-      * Returns the index of the first occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      *  search starts at index 0.
-      */
-    indexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * Adds all the elements of an array separated by the specified separator string.
-      * @param separator A string used to separate one element of an array from the next in the
-      * resulting String. If omitted, the array elements are separated with a comma.
-      */
-    join(separator?: string): string;
-
-    /**
-      * Returns the index of the last occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      * search starts at index 0.
-      */
-    lastIndexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * The length of the array.
-      */
-    readonly length: number;
-
-    /**
-      * Calls a defined callback function on each element of an array, and returns an array that
-      * contains the results.
-      * @param callbackfn A function that accepts up to three arguments. The map method calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    map(callbackfn: (value: number, index: number, array: Uint16Array) => number, thisArg?: any): Uint16Array;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number): number;
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint16Array) => U, initialValue: U): U;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an
-      * argument instead of an array value.
-      */
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number): number;
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint16Array) => U, initialValue: U): U;
-
-    /**
-      * Reverses the elements in an Array.
-      */
-    reverse(): Uint16Array;
-
-    /**
-      * Sets a value or an array of values.
-      * @param array A typed or untyped array of values to set.
-      * @param offset The index in the current array at which the values are to be written.
-      */
-    set(array: ArrayLike<number>, offset?: number): void;
-
-    /**
-      * Returns a section of an array.
-      * @param start The beginning of the specified portion of the array.
-      * @param end The end of the specified portion of the array.
-      */
-    slice(start?: number, end?: number): Uint16Array;
-
-    /**
-      * Determines whether the specified callback function returns true for any element of an array.
-      * @param callbackfn A function that accepts up to three arguments. The some method calls the
-      * callbackfn function for each element in array1 until the callbackfn returns true, or until
-      * the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    some(callbackfn: (value: number, index: number, array: Uint16Array) => boolean, thisArg?: any): boolean;
-
-    /**
-      * Sorts an array.
-      * @param compareFn The name of the function used to determine the order of the elements. If
-      * omitted, the elements are sorted in ascending, ASCII character order.
-      */
-    sort(compareFn?: (a: number, b: number) => number): this;
-
-    /**
-      * Gets a new Uint16Array view of the ArrayBuffer store for this array, referencing the elements
-      * at begin, inclusive, up to end, exclusive.
-      * @param begin The index of the beginning of the array.
-      * @param end The index of the end of the array.
-      */
-    subarray(begin: number, end?: number): Uint16Array;
-
-    /**
-      * Converts a number to a string by using the current locale.
-      */
-    toLocaleString(): string;
-
-    /**
-      * Returns a string representation of an array.
-      */
-    toString(): string;
-
-    [index: number]: number;
-}
-
-interface Uint16ArrayConstructor {
-    readonly prototype: Uint16Array;
-    new(length: number): Uint16Array;
-    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint16Array;
-    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint16Array;
-
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * Returns a new array from a set of elements.
-      * @param items A set of elements to include in the new array object.
-      */
-    of(...items: number[]): Uint16Array;
-
-    /**
-      * Creates an array from an array-like or iterable object.
-      * @param arrayLike An array-like or iterable object to convert to an array.
-      * @param mapfn A mapping function to call on every element of the array.
-      * @param thisArg Value of 'this' used to invoke the mapfn.
-      */
-    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint16Array;
-
-
-}
-declare const Uint16Array: Uint16ArrayConstructor;
-/**
-  * A typed array of 32-bit signed integer values. The contents are initialized to 0. If the
-  * requested number of bytes could not be allocated an exception is raised.
-  */
-interface Int32Array {
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * The ArrayBuffer instance referenced by the array.
-      */
-    readonly buffer: ArrayBufferLike;
-
-    /**
-      * The length in bytes of the array.
-      */
-    readonly byteLength: number;
-
-    /**
-      * The offset in bytes of the array.
-      */
-    readonly byteOffset: number;
-
-    /**
-      * Returns the this object after copying a section of the array identified by start and end
-      * to the same array starting at position target
-      * @param target If target is negative, it is treated as length+target where length is the
-      * length of the array.
-      * @param start If start is negative, it is treated as length+start. If end is negative, it
-      * is treated as length+end.
-      * @param end If not specified, length of the this object is used as its default value.
-      */
-    copyWithin(target: number, start: number, end?: number): this;
-
-    /**
-      * Determines whether all the members of an array satisfy the specified test.
-      * @param callbackfn A function that accepts up to three arguments. The every method calls
-      * the callbackfn function for each element in array1 until the callbackfn returns false,
-      * or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    every(callbackfn: (value: number, index: number, array: Int32Array) => boolean, thisArg?: any): boolean;
-
-    /**
-        * Returns the this object after filling the section identified by start and end with value
-        * @param value value to fill array section with
-        * @param start index to start filling the array at. If start is negative, it is treated as
-        * length+start where length is the length of the array.
-        * @param end index to stop filling the array at. If end is negative, it is treated as
-        * length+end.
-        */
-    fill(value: number, start?: number, end?: number): this;
-
-    /**
-      * Returns the elements of an array that meet the condition specified in a callback function.
-      * @param callbackfn A function that accepts up to three arguments. The filter method calls
-      * the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    filter(callbackfn: (value: number, index: number, array: Int32Array) => any, thisArg?: any): Int32Array;
-
-    /**
-      * Returns the value of the first element in the array where predicate is true, and undefined
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found, find
-      * immediately returns that element value. Otherwise, find returns undefined.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    find(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: any): number | undefined;
-
-    /**
-      * Returns the index of the first element in the array where predicate is true, and -1
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found,
-      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    findIndex(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: any): number;
-
-    /**
-      * Performs the specified action for each element in an array.
-      * @param callbackfn  A function that accepts up to three arguments. forEach calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    forEach(callbackfn: (value: number, index: number, array: Int32Array) => void, thisArg?: any): void;
-
-    /**
-      * Returns the index of the first occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      *  search starts at index 0.
-      */
-    indexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * Adds all the elements of an array separated by the specified separator string.
-      * @param separator A string used to separate one element of an array from the next in the
-      * resulting String. If omitted, the array elements are separated with a comma.
-      */
-    join(separator?: string): string;
-
-    /**
-      * Returns the index of the last occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      * search starts at index 0.
-      */
-    lastIndexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * The length of the array.
-      */
-    readonly length: number;
-
-    /**
-      * Calls a defined callback function on each element of an array, and returns an array that
-      * contains the results.
-      * @param callbackfn A function that accepts up to three arguments. The map method calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    map(callbackfn: (value: number, index: number, array: Int32Array) => number, thisArg?: any): Int32Array;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number): number;
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int32Array) => U, initialValue: U): U;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an
-      * argument instead of an array value.
-      */
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number): number;
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int32Array) => U, initialValue: U): U;
-
-    /**
-      * Reverses the elements in an Array.
-      */
-    reverse(): Int32Array;
-
-    /**
-      * Sets a value or an array of values.
-      * @param array A typed or untyped array of values to set.
-      * @param offset The index in the current array at which the values are to be written.
-      */
-    set(array: ArrayLike<number>, offset?: number): void;
-
-    /**
-      * Returns a section of an array.
-      * @param start The beginning of the specified portion of the array.
-      * @param end The end of the specified portion of the array.
-      */
-    slice(start?: number, end?: number): Int32Array;
-
-    /**
-      * Determines whether the specified callback function returns true for any element of an array.
-      * @param callbackfn A function that accepts up to three arguments. The some method calls the
-      * callbackfn function for each element in array1 until the callbackfn returns true, or until
-      * the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    some(callbackfn: (value: number, index: number, array: Int32Array) => boolean, thisArg?: any): boolean;
-
-    /**
-      * Sorts an array.
-      * @param compareFn The name of the function used to determine the order of the elements. If
-      * omitted, the elements are sorted in ascending, ASCII character order.
-      */
-    sort(compareFn?: (a: number, b: number) => number): this;
-
-    /**
-      * Gets a new Int32Array view of the ArrayBuffer store for this array, referencing the elements
-      * at begin, inclusive, up to end, exclusive.
-      * @param begin The index of the beginning of the array.
-      * @param end The index of the end of the array.
-      */
-    subarray(begin: number, end?: number): Int32Array;
-
-    /**
-      * Converts a number to a string by using the current locale.
-      */
-    toLocaleString(): string;
-
-    /**
-      * Returns a string representation of an array.
-      */
-    toString(): string;
-
-    [index: number]: number;
-}
-
-interface Int32ArrayConstructor {
-    readonly prototype: Int32Array;
-    new(length: number): Int32Array;
-    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int32Array;
-    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int32Array;
-
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * Returns a new array from a set of elements.
-      * @param items A set of elements to include in the new array object.
-      */
-    of(...items: number[]): Int32Array;
-
-    /**
-      * Creates an array from an array-like or iterable object.
-      * @param arrayLike An array-like or iterable object to convert to an array.
-      * @param mapfn A mapping function to call on every element of the array.
-      * @param thisArg Value of 'this' used to invoke the mapfn.
-      */
-    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int32Array;
-
-}
-declare const Int32Array: Int32ArrayConstructor;
-
-/**
-  * A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the
-  * requested number of bytes could not be allocated an exception is raised.
-  */
-interface Uint32Array {
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * The ArrayBuffer instance referenced by the array.
-      */
-    readonly buffer: ArrayBufferLike;
-
-    /**
-      * The length in bytes of the array.
-      */
-    readonly byteLength: number;
-
-    /**
-      * The offset in bytes of the array.
-      */
-    readonly byteOffset: number;
-
-    /**
-      * Returns the this object after copying a section of the array identified by start and end
-      * to the same array starting at position target
-      * @param target If target is negative, it is treated as length+target where length is the
-      * length of the array.
-      * @param start If start is negative, it is treated as length+start. If end is negative, it
-      * is treated as length+end.
-      * @param end If not specified, length of the this object is used as its default value.
-      */
-    copyWithin(target: number, start: number, end?: number): this;
-
-    /**
-      * Determines whether all the members of an array satisfy the specified test.
-      * @param callbackfn A function that accepts up to three arguments. The every method calls
-      * the callbackfn function for each element in array1 until the callbackfn returns false,
-      * or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    every(callbackfn: (value: number, index: number, array: Uint32Array) => boolean, thisArg?: any): boolean;
-
-    /**
-        * Returns the this object after filling the section identified by start and end with value
-        * @param value value to fill array section with
-        * @param start index to start filling the array at. If start is negative, it is treated as
-        * length+start where length is the length of the array.
-        * @param end index to stop filling the array at. If end is negative, it is treated as
-        * length+end.
-        */
-    fill(value: number, start?: number, end?: number): this;
-
-    /**
-      * Returns the elements of an array that meet the condition specified in a callback function.
-      * @param callbackfn A function that accepts up to three arguments. The filter method calls
-      * the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    filter(callbackfn: (value: number, index: number, array: Uint32Array) => any, thisArg?: any): Uint32Array;
-
-    /**
-      * Returns the value of the first element in the array where predicate is true, and undefined
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found, find
-      * immediately returns that element value. Otherwise, find returns undefined.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    find(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: any): number | undefined;
-
-    /**
-      * Returns the index of the first element in the array where predicate is true, and -1
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found,
-      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    findIndex(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: any): number;
-
-    /**
-      * Performs the specified action for each element in an array.
-      * @param callbackfn  A function that accepts up to three arguments. forEach calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    forEach(callbackfn: (value: number, index: number, array: Uint32Array) => void, thisArg?: any): void;
-    /**
-      * Returns the index of the first occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      *  search starts at index 0.
-      */
-    indexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * Adds all the elements of an array separated by the specified separator string.
-      * @param separator A string used to separate one element of an array from the next in the
-      * resulting String. If omitted, the array elements are separated with a comma.
-      */
-    join(separator?: string): string;
-
-    /**
-      * Returns the index of the last occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      * search starts at index 0.
-      */
-    lastIndexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * The length of the array.
-      */
-    readonly length: number;
-
-    /**
-      * Calls a defined callback function on each element of an array, and returns an array that
-      * contains the results.
-      * @param callbackfn A function that accepts up to three arguments. The map method calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    map(callbackfn: (value: number, index: number, array: Uint32Array) => number, thisArg?: any): Uint32Array;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number): number;
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint32Array) => U, initialValue: U): U;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an
-      * argument instead of an array value.
-      */
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number): number;
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number, initialValue: number): number;
-
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint32Array) => U, initialValue: U): U;
-
-    /**
-      * Reverses the elements in an Array.
-      */
-    reverse(): Uint32Array;
-
-    /**
-      * Sets a value or an array of values.
-      * @param array A typed or untyped array of values to set.
-      * @param offset The index in the current array at which the values are to be written.
-      */
-    set(array: ArrayLike<number>, offset?: number): void;
-
-    /**
-      * Returns a section of an array.
-      * @param start The beginning of the specified portion of the array.
-      * @param end The end of the specified portion of the array.
-      */
-    slice(start?: number, end?: number): Uint32Array;
-
-    /**
-      * Determines whether the specified callback function returns true for any element of an array.
-      * @param callbackfn A function that accepts up to three arguments. The some method calls the
-      * callbackfn function for each element in array1 until the callbackfn returns true, or until
-      * the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    some(callbackfn: (value: number, index: number, array: Uint32Array) => boolean, thisArg?: any): boolean;
-
-    /**
-      * Sorts an array.
-      * @param compareFn The name of the function used to determine the order of the elements. If
-      * omitted, the elements are sorted in ascending, ASCII character order.
-      */
-    sort(compareFn?: (a: number, b: number) => number): this;
-
-    /**
-      * Gets a new Uint32Array view of the ArrayBuffer store for this array, referencing the elements
-      * at begin, inclusive, up to end, exclusive.
-      * @param begin The index of the beginning of the array.
-      * @param end The index of the end of the array.
-      */
-    subarray(begin: number, end?: number): Uint32Array;
-
-    /**
-      * Converts a number to a string by using the current locale.
-      */
-    toLocaleString(): string;
-
-    /**
-      * Returns a string representation of an array.
-      */
-    toString(): string;
-
-    [index: number]: number;
-}
-
-interface Uint32ArrayConstructor {
-    readonly prototype: Uint32Array;
-    new(length: number): Uint32Array;
-    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint32Array;
-    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint32Array;
-
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * Returns a new array from a set of elements.
-      * @param items A set of elements to include in the new array object.
-      */
-    of(...items: number[]): Uint32Array;
-
-    /**
-      * Creates an array from an array-like or iterable object.
-      * @param arrayLike An array-like or iterable object to convert to an array.
-      * @param mapfn A mapping function to call on every element of the array.
-      * @param thisArg Value of 'this' used to invoke the mapfn.
-      */
-    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint32Array;
-
-}
-declare const Uint32Array: Uint32ArrayConstructor;
-
-/**
-  * A typed array of 32-bit float values. The contents are initialized to 0. If the requested number
-  * of bytes could not be allocated an exception is raised.
-  */
-interface Float32Array {
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * The ArrayBuffer instance referenced by the array.
-      */
-    readonly buffer: ArrayBufferLike;
-
-    /**
-      * The length in bytes of the array.
-      */
-    readonly byteLength: number;
-
-    /**
-      * The offset in bytes of the array.
-      */
-    readonly byteOffset: number;
-
-    /**
-      * Returns the this object after copying a section of the array identified by start and end
-      * to the same array starting at position target
-      * @param target If target is negative, it is treated as length+target where length is the
-      * length of the array.
-      * @param start If start is negative, it is treated as length+start. If end is negative, it
-      * is treated as length+end.
-      * @param end If not specified, length of the this object is used as its default value.
-      */
-    copyWithin(target: number, start: number, end?: number): this;
-
-    /**
-      * Determines whether all the members of an array satisfy the specified test.
-      * @param callbackfn A function that accepts up to three arguments. The every method calls
-      * the callbackfn function for each element in array1 until the callbackfn returns false,
-      * or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    every(callbackfn: (value: number, index: number, array: Float32Array) => boolean, thisArg?: any): boolean;
-
-    /**
-        * Returns the this object after filling the section identified by start and end with value
-        * @param value value to fill array section with
-        * @param start index to start filling the array at. If start is negative, it is treated as
-        * length+start where length is the length of the array.
-        * @param end index to stop filling the array at. If end is negative, it is treated as
-        * length+end.
-        */
-    fill(value: number, start?: number, end?: number): this;
-
-    /**
-      * Returns the elements of an array that meet the condition specified in a callback function.
-      * @param callbackfn A function that accepts up to three arguments. The filter method calls
-      * the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    filter(callbackfn: (value: number, index: number, array: Float32Array) => any, thisArg?: any): Float32Array;
-
-    /**
-      * Returns the value of the first element in the array where predicate is true, and undefined
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found, find
-      * immediately returns that element value. Otherwise, find returns undefined.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    find(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?: any): number | undefined;
-
-    /**
-      * Returns the index of the first element in the array where predicate is true, and -1
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found,
-      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    findIndex(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?: any): number;
-
-    /**
-      * Performs the specified action for each element in an array.
-      * @param callbackfn  A function that accepts up to three arguments. forEach calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    forEach(callbackfn: (value: number, index: number, array: Float32Array) => void, thisArg?: any): void;
-
-    /**
-      * Returns the index of the first occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      *  search starts at index 0.
-      */
-    indexOf(searchElement: number, fromIndex?: number): number;
-
-    /**
-      * Adds all the elements of an array separated by the specified separator string.
-      * @param separator A string used to separate one element of an array from the next in the
-      * resulting String. If omitted, the array elements are separated with a comma.
-      */
-    join(separator?: string): string;
+    new(message?: string): URIError;
+    readonly prototype: URIError;
+}
 
-    /**
-      * Returns the index of the last occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      * search starts at index 0.
-      */
-    lastIndexOf(searchElement: number, fromIndex?: number): number;
+declare const URIError: URIErrorConstructor;
 
+interface JSON {
     /**
-      * The length of the array.
+      * Converts a JavaScript Object Notation (JSON) string into an object.
+      * @param text A valid JSON string.
+      * @param reviver A function that transforms the results. This function is called for each member of the object.
+      * If a member contains nested objects, the nested objects are transformed before the parent object is.
       */
-    readonly length: number;
-
+    parse(text: string, reviver?: (key: any, value: any) => any): any;
     /**
-      * Calls a defined callback function on each element of an array, and returns an array that
-      * contains the results.
-      * @param callbackfn A function that accepts up to three arguments. The map method calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
+      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
+      * @param value A JavaScript value, usually an object or array, to be converted.
+      * @param replacer A function that transforms the results.
+      * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.
       */
-    map(callbackfn: (value: number, index: number, array: Float32Array) => number, thisArg?: any): Float32Array;
+    stringify(value: any, replacer?: ((key: string, value: any) => any) | string[], space?: string | number): string;
+}
 
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number): number;
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number, initialValue: number): number;
+/**
+  * An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.
+  */
+declare const JSON: JSON;
 
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float32Array) => U, initialValue: U): U;
+interface PromiseHandler<T, R> {
+  (result: T): Promise<R> | null;
+}
 
+/**
+ * Represents the completion of an asynchronous operation
+ */
+interface Promise<T> {
     /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an
-      * argument instead of an array value.
-      */
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number): number;
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number, initialValue: number): number;
+     * Attaches callbacks for the resolution and/or rejection of the Promise.
+     * @param onfulfilled The callback to execute when the Promise is resolved.
+     * @param onrejected The callback to execute when the Promise is rejected.
+     * @returns A Promise for the completion of which ever callback is executed.
+     */
+    then<R>(onfulfilled?: PromiseHandler<T, R>): Promise<R>;
 
     /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float32Array) => U, initialValue: U): U;
+     * Attaches a callback for only the rejection of the Promise.
+     * @param onrejected The callback to execute when the Promise is rejected.
+     * @returns A Promise for the completion of the callback.
+     */
+    catch<R>(onrejected?: PromiseHandler<any, R>): Promise<R>;
+}
 
-    /**
-      * Reverses the elements in an Array.
-      */
-    reverse(): Float32Array;
+/**
+  * Represents a raw buffer of binary data, which is used to store data for the
+  * different typed arrays. ArrayBuffers cannot be read from or written to directly,
+  * but can be passed to a typed array or DataView Object to interpret the raw
+  * buffer as needed.
+  */
+ interface ArrayBuffer {
+  /**
+    * Read-only. The length of the ArrayBuffer (in bytes).
+    */
+  readonly byteLength: number;
 
-    /**
-      * Sets a value or an array of values.
-      * @param array A typed or untyped array of values to set.
-      * @param offset The index in the current array at which the values are to be written.
-      */
-    set(array: ArrayLike<number>, offset?: number): void;
+  /**
+    * Returns a section of an ArrayBuffer.
+    */
+  slice(begin: number, end?: number): ArrayBuffer;
+}
 
-    /**
-      * Returns a section of an array.
-      * @param start The beginning of the specified portion of the array.
-      * @param end The end of the specified portion of the array.
-      */
-    slice(start?: number, end?: number): Float32Array;
+interface ArrayBufferConstructor {
+  readonly prototype: ArrayBuffer;
+  new(byteLength: number): ArrayBuffer;
+}
+declare const ArrayBuffer: ArrayBufferConstructor;
 
-    /**
-      * Determines whether the specified callback function returns true for any element of an array.
-      * @param callbackfn A function that accepts up to three arguments. The some method calls the
-      * callbackfn function for each element in array1 until the callbackfn returns true, or until
-      * the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    some(callbackfn: (value: number, index: number, array: Float32Array) => boolean, thisArg?: any): boolean;
+interface ArrayBufferView<T extends ArrayBufferView<T>> {
+  /**
+    * The ArrayBuffer instance referenced by the array.
+    */
+  readonly buffer: ArrayBuffer;
 
-    /**
-      * Sorts an array.
-      * @param compareFn The name of the function used to determine the order of the elements. If
-      * omitted, the elements are sorted in ascending, ASCII character order.
-      */
-    sort(compareFn?: (a: number, b: number) => number): this;
+  /**
+    * The length in bytes of the array.
+    */
+  readonly byteLength: number;
 
-    /**
-      * Gets a new Float32Array view of the ArrayBuffer store for this array, referencing the elements
-      * at begin, inclusive, up to end, exclusive.
-      * @param begin The index of the beginning of the array.
-      * @param end The index of the end of the array.
-      */
-    subarray(begin: number, end?: number): Float32Array;
+  /**
+    * The offset in bytes of the array.
+    */
+  readonly byteOffset: number;
+}
 
-    /**
-      * Converts a number to a string by using the current locale.
-      */
-    toLocaleString(): string;
+interface DataView extends ArrayBufferView<DataView> {
+  /**
+    * Gets the Float32 value at the specified byte offset from the start of the view. There is
+    * no alignment constraint; multi-byte values may be fetched from any offset.
+    * @param byteOffset The place in the buffer at which the value should be retrieved.
+    */
+  getFloat32(byteOffset: number, littleEndian?: boolean): number;
 
-    /**
-      * Returns a string representation of an array.
-      */
-    toString(): string;
+  /**
+    * Gets the Float64 value at the specified byte offset from the start of the view. There is
+    * no alignment constraint; multi-byte values may be fetched from any offset.
+    * @param byteOffset The place in the buffer at which the value should be retrieved.
+    */
+  getFloat64(byteOffset: number, littleEndian?: boolean): number;
 
-    [index: number]: number;
-}
+  /**
+    * Gets the Int8 value at the specified byte offset from the start of the view. There is
+    * no alignment constraint; multi-byte values may be fetched from any offset.
+    * @param byteOffset The place in the buffer at which the value should be retrieved.
+    */
+  getInt8(byteOffset: number): number;
 
-interface Float32ArrayConstructor {
-    readonly prototype: Float32Array;
-    new(length: number): Float32Array;
-    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Float32Array;
-    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Float32Array;
+  /**
+    * Gets the Int16 value at the specified byte offset from the start of the view. There is
+    * no alignment constraint; multi-byte values may be fetched from any offset.
+    * @param byteOffset The place in the buffer at which the value should be retrieved.
+    */
+  getInt16(byteOffset: number, littleEndian?: boolean): number;
+  /**
+    * Gets the Int32 value at the specified byte offset from the start of the view. There is
+    * no alignment constraint; multi-byte values may be fetched from any offset.
+    * @param byteOffset The place in the buffer at which the value should be retrieved.
+    */
+  getInt32(byteOffset: number, littleEndian?: boolean): number;
 
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
+  /**
+    * Gets the Uint8 value at the specified byte offset from the start of the view. There is
+    * no alignment constraint; multi-byte values may be fetched from any offset.
+    * @param byteOffset The place in the buffer at which the value should be retrieved.
+    */
+  getUint8(byteOffset: number): number;
 
-    /**
-      * Returns a new array from a set of elements.
-      * @param items A set of elements to include in the new array object.
-      */
-    of(...items: number[]): Float32Array;
+  /**
+    * Gets the Uint16 value at the specified byte offset from the start of the view. There is
+    * no alignment constraint; multi-byte values may be fetched from any offset.
+    * @param byteOffset The place in the buffer at which the value should be retrieved.
+    */
+  getUint16(byteOffset: number, littleEndian?: boolean): number;
 
-    /**
-      * Creates an array from an array-like or iterable object.
-      * @param arrayLike An array-like or iterable object to convert to an array.
-      * @param mapfn A mapping function to call on every element of the array.
-      * @param thisArg Value of 'this' used to invoke the mapfn.
-      */
-    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float32Array;
+  /**
+    * Gets the Uint32 value at the specified byte offset from the start of the view. There is
+    * no alignment constraint; multi-byte values may be fetched from any offset.
+    * @param byteOffset The place in the buffer at which the value should be retrieved.
+    */
+  getUint32(byteOffset: number, littleEndian?: boolean): number;
+
+  /**
+    * Stores an Float32 value at the specified byte offset from the start of the view.
+    * @param byteOffset The place in the buffer at which the value should be set.
+    * @param value The value to set.
+    * @param littleEndian If false or undefined, a big-endian value should be written,
+    * otherwise a little-endian value should be written.
+    */
+  setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void;
+
+  /**
+    * Stores an Float64 value at the specified byte offset from the start of the view.
+    * @param byteOffset The place in the buffer at which the value should be set.
+    * @param value The value to set.
+    * @param littleEndian If false or undefined, a big-endian value should be written,
+    * otherwise a little-endian value should be written.
+    */
+  setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void;
 
+  /**
+    * Stores an Int8 value at the specified byte offset from the start of the view.
+    * @param byteOffset The place in the buffer at which the value should be set.
+    * @param value The value to set.
+    */
+  setInt8(byteOffset: number, value: number): void;
+
+  /**
+    * Stores an Int16 value at the specified byte offset from the start of the view.
+    * @param byteOffset The place in the buffer at which the value should be set.
+    * @param value The value to set.
+    * @param littleEndian If false or undefined, a big-endian value should be written,
+    * otherwise a little-endian value should be written.
+    */
+  setInt16(byteOffset: number, value: number, littleEndian?: boolean): void;
+
+  /**
+    * Stores an Int32 value at the specified byte offset from the start of the view.
+    * @param byteOffset The place in the buffer at which the value should be set.
+    * @param value The value to set.
+    * @param littleEndian If false or undefined, a big-endian value should be written,
+    * otherwise a little-endian value should be written.
+    */
+  setInt32(byteOffset: number, value: number, littleEndian?: boolean): void;
 
+  /**
+    * Stores an Uint8 value at the specified byte offset from the start of the view.
+    * @param byteOffset The place in the buffer at which the value should be set.
+    * @param value The value to set.
+    */
+  setUint8(byteOffset: number, value: number): void;
+
+  /**
+    * Stores an Uint16 value at the specified byte offset from the start of the view.
+    * @param byteOffset The place in the buffer at which the value should be set.
+    * @param value The value to set.
+    * @param littleEndian If false or undefined, a big-endian value should be written,
+    * otherwise a little-endian value should be written.
+    */
+  setUint16(byteOffset: number, value: number, littleEndian?: boolean): void;
+
+  /**
+    * Stores an Uint32 value at the specified byte offset from the start of the view.
+    * @param byteOffset The place in the buffer at which the value should be set.
+    * @param value The value to set.
+    * @param littleEndian If false or undefined, a big-endian value should be written,
+    * otherwise a little-endian value should be written.
+    */
+  setUint32(byteOffset: number, value: number, littleEndian?: boolean): void;
 }
-declare const Float32Array: Float32ArrayConstructor;
 
-/**
-  * A typed array of 64-bit float values. The contents are initialized to 0. If the requested
-  * number of bytes could not be allocated an exception is raised.
-  */
-interface Float64Array {
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
+interface DataViewConstructor {
+  new(buffer: ArrayBuffer, byteOffset?: number, byteLength?: number): DataView;
+}
+declare const DataView: DataViewConstructor;
 
-    /**
-      * The ArrayBuffer instance referenced by the array.
-      */
-    readonly buffer: ArrayBufferLike;
+interface TypedArrayIterationCallback<T, R> {
+  (value: number, index: number, array: T): R;
+}
 
-    /**
-      * The length in bytes of the array.
-      */
-    readonly byteLength: number;
+interface TypedArrayIterationConsumer<T> {
+  (value: number, index: number, array: T): void;
+}
 
-    /**
-      * The offset in bytes of the array.
-      */
-    readonly byteOffset: number;
+interface TypedArrayIterationReducer<T, U> {
+  (previous: U, current: number, index: number, array: T): U;
+}
 
-    /**
+interface TypedArray<T extends TypedArray<T>> extends ArrayBufferView<T> {
+  /**
       * Returns the this object after copying a section of the array identified by start and end
       * to the same array starting at position target
       * @param target If target is negative, it is treated as length+target where length is the
@@ -3675,238 +416,337 @@ interface Float64Array {
       * is treated as length+end.
       * @param end If not specified, length of the this object is used as its default value.
       */
-    copyWithin(target: number, start: number, end?: number): this;
-
-    /**
-      * Determines whether all the members of an array satisfy the specified test.
-      * @param callbackfn A function that accepts up to three arguments. The every method calls
-      * the callbackfn function for each element in array1 until the callbackfn returns false,
-      * or until the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    every(callbackfn: (value: number, index: number, array: Float64Array) => boolean, thisArg?: any): boolean;
-
-    /**
-        * Returns the this object after filling the section identified by start and end with value
-        * @param value value to fill array section with
-        * @param start index to start filling the array at. If start is negative, it is treated as
-        * length+start where length is the length of the array.
-        * @param end index to stop filling the array at. If end is negative, it is treated as
-        * length+end.
-        */
-    fill(value: number, start?: number, end?: number): this;
-
-    /**
-      * Returns the elements of an array that meet the condition specified in a callback function.
-      * @param callbackfn A function that accepts up to three arguments. The filter method calls
-      * the callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    filter(callbackfn: (value: number, index: number, array: Float64Array) => any, thisArg?: any): Float64Array;
-
-    /**
-      * Returns the value of the first element in the array where predicate is true, and undefined
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found, find
-      * immediately returns that element value. Otherwise, find returns undefined.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    find(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?: any): number | undefined;
-
-    /**
-      * Returns the index of the first element in the array where predicate is true, and -1
-      * otherwise.
-      * @param predicate find calls predicate once for each element of the array, in ascending
-      * order, until it finds one where predicate returns true. If such an element is found,
-      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
-      * @param thisArg If provided, it will be used as the this value for each invocation of
-      * predicate. If it is not provided, undefined is used instead.
-      */
-    findIndex(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?: any): number;
-
-    /**
-      * Performs the specified action for each element in an array.
-      * @param callbackfn  A function that accepts up to three arguments. forEach calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    forEach(callbackfn: (value: number, index: number, array: Float64Array) => void, thisArg?: any): void;
-
-    /**
-      * Returns the index of the first occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      *  search starts at index 0.
-      */
-    indexOf(searchElement: number, fromIndex?: number): number;
+     copyWithin(target: number, start: number, end?: number): T;
+
+     /**
+       * Determines whether all the members of an array satisfy the specified test.
+       * @param callback A function that accepts up to three arguments. The every method calls
+       * the callback function for each element in array1 until the callback returns false,
+       * or until the end of the array.
+       * @param thisArg An object to which the this keyword can refer in the callback function.
+       * If thisArg is omitted, undefined is used as the this value.
+       */
+     every(callback: TypedArrayIterationCallback<T, boolean>): boolean;
+
+     /**
+         * Returns the this object after filling the section identified by start and end with value
+         * @param value value to fill array section with
+         * @param start index to start filling the array at. If start is negative, it is treated as
+         * length+start where length is the length of the array.
+         * @param end index to stop filling the array at. If end is negative, it is treated as
+         * length+end.
+         */
+     fill(value: number, start?: number, end?: number): T;
+
+     /**
+       * Returns the elements of an array that meet the condition specified in a callback function.
+       * @param callback A function that accepts up to three arguments. The filter method calls
+       * the callback function one time for each element in the array.
+       * @param thisArg An object to which the this keyword can refer in the callback function.
+       * If thisArg is omitted, undefined is used as the this value.
+       */
+     filter(callback: TypedArrayIterationCallback<T, boolean>): T;
+
+     /**
+       * Returns the value of the first element in the array where predicate is true, and undefined
+       * otherwise.
+       * @param predicate find calls predicate once for each element of the array, in ascending
+       * order, until it finds one where predicate returns true. If such an element is found, find
+       * immediately returns that element value. Otherwise, find returns undefined.
+       * @param thisArg If provided, it will be used as the this value for each invocation of
+       * predicate. If it is not provided, undefined is used instead.
+       */
+     find(predicate: TypedArrayIterationCallback<T, boolean>): number | undefined;
+
+     /**
+       * Returns the index of the first element in the array where predicate is true, and -1
+       * otherwise.
+       * @param predicate find calls predicate once for each element of the array, in ascending
+       * order, until it finds one where predicate returns true. If such an element is found,
+       * findIndex immediately returns that element index. Otherwise, findIndex returns -1.
+       * @param thisArg If provided, it will be used as the this value for each invocation of
+       * predicate. If it is not provided, undefined is used instead.
+       */
+     findIndex(predicate: TypedArrayIterationCallback<T, boolean>): number;
+
+     /**
+       * Performs the specified action for each element in an array.
+       * @param callback  A function that accepts up to three arguments. forEach calls the
+       * callback function one time for each element in the array.
+       * @param thisArg  An object to which the this keyword can refer in the callback function.
+       * If thisArg is omitted, undefined is used as the this value.
+       */
+     forEach(callback: TypedArrayIterationConsumer<T>): void;
+
+     /**
+       * Returns the index of the first occurrence of a value in an array.
+       * @param searchElement The value to locate in the array.
+       * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
+       *  search starts at index 0.
+       */
+     indexOf(searchElement: number, fromIndex?: number): number;
+
+     /**
+       * Adds all the elements of an array separated by the specified separator string.
+       * @param separator A string used to separate one element of an array from the next in the
+       * resulting String. If omitted, the array elements are separated with a comma.
+       */
+     join(separator?: string): string;
+
+     /**
+       * Returns the index of the last occurrence of a value in an array.
+       * @param searchElement The value to locate in the array.
+       * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
+       * search starts at index 0.
+       */
+     lastIndexOf(searchElement: number, fromIndex?: number): number;
+
+     /**
+       * The length of the array.
+       */
+     readonly length: number;
+
+     /**
+       * Calls a defined callback function on each element of an array, and returns an array that
+       * contains the results.
+       * @param callback A function that accepts up to three arguments. The map method calls the
+       * callback function one time for each element in the array.
+       * @param thisArg An object to which the this keyword can refer in the callback function.
+       * If thisArg is omitted, undefined is used as the this value.
+       */
+     map(callback: TypedArrayIterationCallback<T, number>): T;
+
+     /**
+       * Calls the specified callback function for all the elements in an array. The return value of
+       * the callback function is the accumulated result, and is provided as an argument in the next
+       * call to the callback function.
+       * @param callback A function that accepts up to four arguments. The reduce method calls the
+       * callback function one time for each element in the array.
+       * @param initialValue If initialValue is specified, it is used as the initial value to start
+       * the accumulation. The first call to the callback function provides this value as an argument
+       * instead of an array value.
+       */
+     reduce<U>(callback: TypedArrayIterationReducer<T, U>, initialValue?: U): U;
+
+     /**
+       * Calls the specified callback function for all the elements in an array, in descending order.
+       * The return value of the callback function is the accumulated result, and is provided as an
+       * argument in the next call to the callback function.
+       * @param callback A function that accepts up to four arguments. The reduceRight method calls
+       * the callback function one time for each element in the array.
+       * @param initialValue If initialValue is specified, it is used as the initial value to start
+       * the accumulation. The first call to the callback function provides this value as an argument
+       * instead of an array value.
+       */
+     reduceRight<U>(callback: TypedArrayIterationReducer<T, U>, initialValue?: U): U;
+
+     /**
+       * Reverses the elements in an Array.
+       */
+     reverse(): T;
+
+     /**
+       * Sets a value or an array of values.
+       * @param array A typed or untyped array of values to set.
+       * @param offset The index in the current array at which the values are to be written.
+       */
+     set(array: Array<number>, offset?: number): void;
+
+     /**
+       * Returns a section of an array.
+       * @param start The beginning of the specified portion of the array.
+       * @param end The end of the specified portion of the array.
+       */
+     slice(start?: number, end?: number): T;
+
+     /**
+       * Determines whether the specified callback function returns true for any element of an array.
+       * @param callback A function that accepts up to three arguments. The some method calls the
+       * callback function for each element in array1 until the callback returns true, or until
+       * the end of the array.
+       * @param thisArg An object to which the this keyword can refer in the callback function.
+       * If thisArg is omitted, undefined is used as the this value.
+       */
+     some(callback: TypedArrayIterationCallback<T, boolean>): boolean;
+
+     /**
+       * Sorts an array.
+       * @param compareFn The name of the function used to determine the order of the elements. If
+       * omitted, the elements are sorted in ascending, ASCII character order.
+       */
+     sort(comparator?: (a: number, b: number) => number): T;
+
+     /**
+       * Gets a new T view of the ArrayBuffer store for this array, referencing the elements
+       * at begin, inclusive, up to end, exclusive.
+       * @param begin The index of the beginning of the array.
+       * @param end The index of the end of the array.
+       */
+     subarray(begin: number, end?: number): T;
+
+     /**
+       * Converts a number to a string by using the current locale.
+       */
+     toLocaleString(): string;
+
+     /**
+       * Returns a string representation of an array.
+       */
+     toString(): string;
+
+     [index: number]: number;
+}
+
+interface TypedArrayConstructor {
+  readonly prototype: TypedArray;
+  new(length: number): T;
+  new(arrayOrArrayBuffer: Array<number> | ArrayBuffer): T;
+  new(buffer: ArrayBuffer, byteOffset: number, length?: number): T;
+
+  /**
+    * Returns a new array from a set of elements.
+    * @param items A set of elements to include in the new array object.
+    */
+  of<S extends TypedArray<S>>(...items: number[]): S;
 
-    /**
-      * Adds all the elements of an array separated by the specified separator string.
-      * @param separator A string used to separate one element of an array from the next in the
-      * resulting String. If omitted, the array elements are separated with a comma.
-      */
-    join(separator?: string): string;
+  /**
+    * Creates an array from an array-like or iterable object.
+    * @param arrayLike An array-like or iterable object to convert to an array.
+    * @param mapfn A mapping function to call on every element of the array.
+    * @param thisArg Value of 'this' used to invoke the mapfn.
+    */
+  from<S extends TypedArray<S>>(arrayLike: Array<number>, mapfn?: (v: number, k: number) => number): S;
+}
+declare const TypedArray: TypedArrayConstructor;
 
-    /**
-      * Returns the index of the last occurrence of a value in an array.
-      * @param searchElement The value to locate in the array.
-      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the
-      * search starts at index 0.
-      */
-    lastIndexOf(searchElement: number, fromIndex?: number): number;
+/**
+* A typed array of 8-bit integer values. The contents are initialized to 0. If the requested
+* number of bytes could not be allocated an exception is raised.
+*/
+interface Int8Array extends TypedArray<Int8Array> {
+}
 
-    /**
-      * The length of the array.
-      */
-    readonly length: number;
+interface Int8ArrayConstructor {
+  /**
+    * The size in bytes of each element in the array.
+    */
+  readonly BYTES_PER_ELEMENT: number;
+}
+declare const Int8Array: Int8ArrayConstructor;
 
-    /**
-      * Calls a defined callback function on each element of an array, and returns an array that
-      * contains the results.
-      * @param callbackfn A function that accepts up to three arguments. The map method calls the
-      * callbackfn function one time for each element in the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    map(callbackfn: (value: number, index: number, array: Float64Array) => number, thisArg?: any): Float64Array;
+/**
+* A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the
+* requested number of bytes could not be allocated an exception is raised.
+*/
+interface Uint8Array extends TypedArray<Uint8Array> {
+}
 
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number): number;
-    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number, initialValue: number): number;
+interface Uint8ArrayConstructor {
+  /**
+    * The size in bytes of each element in the array.
+    */
+  readonly BYTES_PER_ELEMENT: number;
+}
+declare const Uint8Array: Uint8ArrayConstructor;
 
-    /**
-      * Calls the specified callback function for all the elements in an array. The return value of
-      * the callback function is the accumulated result, and is provided as an argument in the next
-      * call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the
-      * callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float64Array) => U, initialValue: U): U;
+/**
+* A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.
+* If the requested number of bytes could not be allocated an exception is raised.
+*/
+interface Uint8ClampedArray extends TypedArray<Uint8ClampedArray> {}
 
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an
-      * argument instead of an array value.
-      */
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number): number;
-    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number, initialValue: number): number;
+interface Uint8ClampedArrayConstructor {
+  /**
+    * The size in bytes of each element in the array.
+    */
+  readonly BYTES_PER_ELEMENT: number;
+}
+declare const Uint8ClampedArray: Uint8ClampedArrayConstructor;
 
-    /**
-      * Calls the specified callback function for all the elements in an array, in descending order.
-      * The return value of the callback function is the accumulated result, and is provided as an
-      * argument in the next call to the callback function.
-      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls
-      * the callbackfn function one time for each element in the array.
-      * @param initialValue If initialValue is specified, it is used as the initial value to start
-      * the accumulation. The first call to the callbackfn function provides this value as an argument
-      * instead of an array value.
-      */
-    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float64Array) => U, initialValue: U): U;
+/**
+* A typed array of 16-bit signed integer values. The contents are initialized to 0. If the
+* requested number of bytes could not be allocated an exception is raised.
+*/
+interface Int16Array extends TypedArray<Int16Array> {}
 
-    /**
-      * Reverses the elements in an Array.
-      */
-    reverse(): Float64Array;
+interface Int16ArrayConstructor {
+  /**
+    * The size in bytes of each element in the array.
+    */
+  readonly BYTES_PER_ELEMENT: number;
+}
+declare const Int16Array: Int16ArrayConstructor;
 
-    /**
-      * Sets a value or an array of values.
-      * @param array A typed or untyped array of values to set.
-      * @param offset The index in the current array at which the values are to be written.
-      */
-    set(array: ArrayLike<number>, offset?: number): void;
+/**
+* A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the
+* requested number of bytes could not be allocated an exception is raised.
+*/
+interface Uint16Array extends TypedArray<Uint16Array> {}
 
-    /**
-      * Returns a section of an array.
-      * @param start The beginning of the specified portion of the array.
-      * @param end The end of the specified portion of the array.
-      */
-    slice(start?: number, end?: number): Float64Array;
+interface Uint16ArrayConstructor {
+  /**
+    * The size in bytes of each element in the array.
+    */
+  readonly BYTES_PER_ELEMENT: number;
+}
+declare const Uint16Array: Uint16ArrayConstructor;
+/**
+* A typed array of 32-bit signed integer values. The contents are initialized to 0. If the
+* requested number of bytes could not be allocated an exception is raised.
+*/
+interface Int32Array extends TypedArray<Int32Array> {
+}
 
-    /**
-      * Determines whether the specified callback function returns true for any element of an array.
-      * @param callbackfn A function that accepts up to three arguments. The some method calls the
-      * callbackfn function for each element in array1 until the callbackfn returns true, or until
-      * the end of the array.
-      * @param thisArg An object to which the this keyword can refer in the callbackfn function.
-      * If thisArg is omitted, undefined is used as the this value.
-      */
-    some(callbackfn: (value: number, index: number, array: Float64Array) => boolean, thisArg?: any): boolean;
+interface Int32ArrayConstructor {
+  /**
+    * The size in bytes of each element in the array.
+    */
+  readonly BYTES_PER_ELEMENT: number;
+}
+declare const Int32Array: Int32ArrayConstructor;
 
-    /**
-      * Sorts an array.
-      * @param compareFn The name of the function used to determine the order of the elements. If
-      * omitted, the elements are sorted in ascending, ASCII character order.
-      */
-    sort(compareFn?: (a: number, b: number) => number): this;
+/**
+* A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the
+* requested number of bytes could not be allocated an exception is raised.
+*/
+interface Uint32Array extends TypedArray<Uint32Array> {
+}
 
-    /**
-      * Gets a new Float64Array view of the ArrayBuffer store for this array, referencing the elements
-      * at begin, inclusive, up to end, exclusive.
-      * @param begin The index of the beginning of the array.
-      * @param end The index of the end of the array.
-      */
-    subarray(begin: number, end?: number): Float64Array;
+interface Uint32ArrayConstructor {
+  /**
+    * The size in bytes of each element in the array.
+    */
+  readonly BYTES_PER_ELEMENT: number;
+}
+declare const Uint32Array: Uint32ArrayConstructor;
 
-    /**
-      * Converts a number to a string by using the current locale.
-      */
-    toLocaleString(): string;
+/**
+* A typed array of 32-bit float values. The contents are initialized to 0. If the requested number
+* of bytes could not be allocated an exception is raised.
+*/
+interface Float32Array extends TypedArray<Float32Array> {
+}
 
-    /**
-      * Returns a string representation of an array.
-      */
-    toString(): string;
+interface Float32ArrayConstructor {
+  /**
+    * The size in bytes of each element in the array.
+    */
+   readonly BYTES_PER_ELEMENT: number;
+}
+declare const Float32Array: Float32ArrayConstructor;
 
-    [index: number]: number;
+/**
+* A typed array of 64-bit float values. The contents are initialized to 0. If the requested
+* number of bytes could not be allocated an exception is raised.
+*/
+interface Float64Array extends TypedArray<Float64Array> {
 }
 
 interface Float64ArrayConstructor {
-    readonly prototype: Float64Array;
-    new(length: number): Float64Array;
-    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Float64Array;
-    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Float64Array;
-
-    /**
-      * The size in bytes of each element in the array.
-      */
-    readonly BYTES_PER_ELEMENT: number;
-
-    /**
-      * Returns a new array from a set of elements.
-      * @param items A set of elements to include in the new array object.
-      */
-    of(...items: number[]): Float64Array;
-
-    /**
-      * Creates an array from an array-like or iterable object.
-      * @param arrayLike An array-like or iterable object to convert to an array.
-      * @param mapfn A mapping function to call on every element of the array.
-      * @param thisArg Value of 'this' used to invoke the mapfn.
-      */
-    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float64Array;
-
+  /**
+    * The size in bytes of each element in the array.
+    */
+   readonly BYTES_PER_ELEMENT: number;
 }
 declare const Float64Array: Float64ArrayConstructor;
 
@@ -3940,7 +780,6 @@ declare namespace Intl {
     }
     var Collator: {
         new(locales?: string | string[], options?: CollatorOptions): Collator;
-        (locales?: string | string[], options?: CollatorOptions): Collator;
         supportedLocalesOf(locales: string | string[], options?: CollatorOptions): string[];
     };
 
@@ -3977,91 +816,6 @@ declare namespace Intl {
     }
     var NumberFormat: {
         new(locales?: string | string[], options?: NumberFormatOptions): NumberFormat;
-        (locales?: string | string[], options?: NumberFormatOptions): NumberFormat;
         supportedLocalesOf(locales: string | string[], options?: NumberFormatOptions): string[];
     };
-
-    interface DateTimeFormatOptions {
-        localeMatcher?: string;
-        weekday?: string;
-        era?: string;
-        year?: string;
-        month?: string;
-        day?: string;
-        hour?: string;
-        minute?: string;
-        second?: string;
-        timeZoneName?: string;
-        formatMatcher?: string;
-        hour12?: boolean;
-        timeZone?: string;
-    }
-
-    interface ResolvedDateTimeFormatOptions {
-        locale: string;
-        calendar: string;
-        numberingSystem: string;
-        timeZone: string;
-        hour12?: boolean;
-        weekday?: string;
-        era?: string;
-        year?: string;
-        month?: string;
-        day?: string;
-        hour?: string;
-        minute?: string;
-        second?: string;
-        timeZoneName?: string;
-    }
-
-    interface DateTimeFormat {
-        format(date?: Date | number): string;
-        resolvedOptions(): ResolvedDateTimeFormatOptions;
-    }
-    var DateTimeFormat: {
-        new(locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;
-        (locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;
-        supportedLocalesOf(locales: string | string[], options?: DateTimeFormatOptions): string[];
-    };
-}
-
-interface String {
-    /**
-      * Determines whether two strings are equivalent in the current or specified locale.
-      * @param that String to compare to target string
-      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.
-      * @param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.
-      */
-    localeCompare(that: string, locales?: string | string[], options?: Intl.CollatorOptions): number;
-}
-
-interface Number {
-    /**
-      * Converts a number to a string by using the current or specified locale.
-      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.
-      * @param options An object that contains one or more properties that specify comparison options.
-      */
-    toLocaleString(locales?: string | string[], options?: Intl.NumberFormatOptions): string;
-}
-
-interface Date {
-    /**
-      * Converts a date and time to a string by using the current or specified locale.
-      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.
-      * @param options An object that contains one or more properties that specify comparison options.
-      */
-    toLocaleString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;
-    /**
-      * Converts a date to a string by using the current or specified locale.
-      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.
-      * @param options An object that contains one or more properties that specify comparison options.
-      */
-    toLocaleDateString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;
-
-    /**
-      * Converts a time to a string by using the current or specified locale.
-      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.
-      * @param options An object that contains one or more properties that specify comparison options.
-      */
-    toLocaleTimeString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;
 }
diff --git a/dec/esnext.array.d.ts b/dec/esnext.array.d.ts
deleted file mode 100644
index 9777890a3f..0000000000
--- a/dec/esnext.array.d.ts
+++ /dev/null
@@ -1,203 +0,0 @@
-interface ReadonlyArray<T> {
-
-    /**
-     * Calls a defined callback function on each element of an array. Then, flattens the result into
-     * a new array.
-     * This is identical to a map followed by a flatten of depth 1.
-     *
-     * @param callback A function that accepts up to three arguments. The flatMap method calls the
-     * callback function one time for each element in the array.
-     * @param thisArg An object to which the this keyword can refer in the callback function. If
-     * thisArg is omitted, undefined is used as the this value.
-     */
-    flatMap<U, This = undefined> (
-        callback: (this: This, value: T, index: number, array: T[]) => U|U[],
-        thisArg?: This
-    ): U[]
-
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this:
-        ReadonlyArray<U[][][][]> |
-
-        ReadonlyArray<ReadonlyArray<U[][][]>> |
-        ReadonlyArray<ReadonlyArray<U[][]>[]> |
-        ReadonlyArray<ReadonlyArray<U[]>[][]> |
-        ReadonlyArray<ReadonlyArray<U>[][][]> |
-
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<U[][]>>> |
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[][]>> |
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[][]> |
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>[]> |
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>[]> |
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>[]>> |
-
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>>> |
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>>> |
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[]>> |
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>[]> |
-
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>>>,
-        depth: 4): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this:
-        ReadonlyArray<U[][][]> |
-
-        ReadonlyArray<ReadonlyArray<U>[][]> |
-        ReadonlyArray<ReadonlyArray<U[]>[]> |
-        ReadonlyArray<ReadonlyArray<U[][]>> |
-
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>> |
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>> |
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[]> |
-
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>>,
-        depth: 3): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this:
-        ReadonlyArray<U[][]> |
-
-        ReadonlyArray<ReadonlyArray<U[]>> |
-        ReadonlyArray<ReadonlyArray<U>[]> |
-
-        ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>,
-        depth: 2): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this:
-        ReadonlyArray<U[]> |
-        ReadonlyArray<ReadonlyArray<U>>,
-        depth?: 1
-    ): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this:
-        ReadonlyArray<U>,
-        depth: 0
-    ): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth. If no depth is provided, flatten method defaults to the depth of 1.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(depth?: number): any[];
-  }
-
-interface Array<T> {
-
-    /**
-     * Calls a defined callback function on each element of an array. Then, flattens the result into
-     * a new array.
-     * This is identical to a map followed by a flatten of depth 1.
-     *
-     * @param callback A function that accepts up to three arguments. The flatMap method calls the
-     * callback function one time for each element in the array.
-     * @param thisArg An object to which the this keyword can refer in the callback function. If
-     * thisArg is omitted, undefined is used as the this value.
-     */
-    flatMap<U, This = undefined> (
-        callback: (this: This, value: T, index: number, array: T[]) => U|U[],
-        thisArg?: This
-    ): U[]
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this: U[][][][][][][][], depth: 7): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this: U[][][][][][][], depth: 6): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this: U[][][][][][], depth: 5): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this: U[][][][][], depth: 4): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this: U[][][][], depth: 3): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this: U[][][], depth: 2): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this: U[][], depth?: 1): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(this: U[], depth: 0): U[];
-
-    /**
-     * Returns a new array with all sub-array elements concatenated into it recursively up to the
-     * specified depth. If no depth is provided, flatten method defaults to the depth of 1.
-     *
-     * @param depth The maximum recursion depth
-     */
-    flatten<U>(depth?: number): any[];
-}
diff --git a/dec/esnext.asynciterable.d.ts b/dec/esnext.asynciterable.d.ts
deleted file mode 100644
index d17189ab4d..0000000000
--- a/dec/esnext.asynciterable.d.ts
+++ /dev/null
@@ -1,24 +0,0 @@
-/// <reference path="lib.es2015.symbol.d.ts" />
-/// <reference path="lib.es2015.iterable.d.ts" />
-
-interface SymbolConstructor {
-    /**
-     * A method that returns the default async iterator for an object. Called by the semantics of
-     * the for-await-of statement.
-     */
-    readonly asyncIterator: symbol;
-}
-
-interface AsyncIterator<T> {
-    next(value?: any): Promise<IteratorResult<T>>;
-    return?(value?: any): Promise<IteratorResult<T>>;
-    throw?(e?: any): Promise<IteratorResult<T>>;
-}
-
-interface AsyncIterable<T> {
-    [Symbol.asyncIterator](): AsyncIterator<T>;
-}
-
-interface AsyncIterableIterator<T> extends AsyncIterator<T> {
-    [Symbol.asyncIterator](): AsyncIterableIterator<T>;
-}
\ No newline at end of file
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/JSON/JSONCompiler.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/JSON/JSONCompiler.java
new file mode 100644
index 0000000000..6e6568e223
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/JSON/JSONCompiler.java
@@ -0,0 +1,10 @@
+package org.ooml.oomlc.core.env.gen.Compiling.JSON;
+
+import org.ooml.oomlc.core.env.gen.Serialising.JSONSerialiser;
+import org.ooml.oomlc.core.env.gen.Syntax.Namespace.STNamespace;
+
+public class JSONCompiler {
+  public static String compile (STNamespace st_namespace) {
+    return JSONSerialiser.serialise(st_namespace);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaBuiltin.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaBuiltin.java
new file mode 100644
index 0000000000..704ba44836
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaBuiltin.java
@@ -0,0 +1,31 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import static org.ooml.oomlc.core.env.gen.Compiling.Java.JavaCompiler.TYPE_VOID;
+
+public class JavaBuiltin {
+  public static final JavaClass[] CLASSES = new JavaClass[]{
+    new JavaClass(JavaClass.ClassType.INTERFACE, "EventType"),
+
+    new JavaClass(JavaClass.ClassType.INTERFACE, "Indexable", new JavaGenericParameter[]{
+      new JavaGenericParameter("Q"),
+      new JavaGenericParameter("R")
+    }, null),
+
+    new JavaClass(JavaClass.ClassType.INTERFACE, "GetIndexable", new JavaGenericParameter[]{
+      new JavaGenericParameter("Q"), new JavaGenericParameter("R")
+    }, new String[]{"Indexable<Q, R>"}, new JavaClassMethod[]{
+      new JavaClassMethod(false, null, new JavaType("R"), "__getIndex", new JavaClassMethodParameter[]{
+        new JavaClassMethodParameter("index", new JavaType("Q"))
+      })
+    }),
+
+    new JavaClass(JavaClass.ClassType.INTERFACE, "SetIndexable", new JavaGenericParameter[]{
+      new JavaGenericParameter("Q"), new JavaGenericParameter("R")
+    }, new String[]{"Indexable<Q, R>"}, new JavaClassMethod[]{
+      new JavaClassMethod(false, null, TYPE_VOID, "__setIndex", new JavaClassMethodParameter[]{
+        new JavaClassMethodParameter("index", new JavaType("Q")),
+        new JavaClassMethodParameter("value", new JavaType("R"))
+      })
+    }),
+  };
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClass.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClass.java
new file mode 100644
index 0000000000..e491e5a6f6
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClass.java
@@ -0,0 +1,167 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+class JavaClass {
+  ClassType classType;
+  boolean isFinal;
+  String name;
+  List<JavaGenericParameter> genericParameters = new ArrayList<>();
+  List<String> extendsClasses = new ArrayList<>();
+  List<String> implementsClasses = new ArrayList<>();
+
+  List<String> enumValues = new ArrayList<>(); // Only for enum class type
+  List<JavaClassVariable> variables = new ArrayList<>();
+  List<JavaClassConstructor> constructors = new ArrayList<>();
+  List<JavaClassMethod> methods = new ArrayList<>();
+  List<JavaClass> nestedClasses = new ArrayList<>();
+
+  JavaClass (String name) {
+    this(ClassType.REGULAR, name, null);
+  }
+
+  JavaClass (ClassType classType, String name) {
+    this(classType, name, null);
+  }
+
+  JavaClass (String name, JavaGenericParameter[] genericParameters) {
+    this(ClassType.REGULAR, name, genericParameters);
+  }
+
+  JavaClass (ClassType classType, String name, JavaGenericParameter[] genericParameters) {
+    this(classType, name, genericParameters, null);
+  }
+
+  JavaClass (ClassType classType, String name, JavaGenericParameter[] genericParameters, String[] extendsClasses) {
+    this(classType, name, genericParameters, extendsClasses, null);
+  }
+
+  JavaClass (ClassType classType, String name, JavaGenericParameter[] genericParameters, String[] extendsClasses, JavaClassMethod[] methods) {
+    this.classType = classType;
+    this.name = name;
+    if (genericParameters != null) {
+      Collections.addAll(this.genericParameters, genericParameters);
+    }
+    if (extendsClasses != null) {
+      Collections.addAll(this.extendsClasses, extendsClasses);
+    }
+    if (methods != null) {
+      Collections.addAll(this.methods, methods);
+    }
+  }
+
+  @Override
+  public String toString () {
+    return toString(false, false);
+  }
+
+  public String toString (boolean inInterface, boolean isNested) {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append(!inInterface ? "public " : "")
+      .append(!inInterface && isNested && (classType == ClassType.REGULAR || classType == ClassType.ABSTRACT) ?
+        "static " :
+        "")
+      .append(isFinal ? "final " : "")
+      .append(classType)
+      .append(' ')
+      .append(name);
+
+    if (!genericParameters.isEmpty()) {
+      syntax
+        .append("<")
+        .append(Util.join(", ", genericParameters))
+        .append(">");
+    }
+
+    if (!extendsClasses.isEmpty()) {
+      syntax
+        .append(" extends ")
+        .append(Util.join(", ", extendsClasses));
+    }
+
+    if (!implementsClasses.isEmpty()) {
+      syntax
+        .append(" implements ")
+        .append(Util.join(", ", implementsClasses));
+    }
+
+    syntax.append(" {\n");
+
+    if (!enumValues.isEmpty()) {
+      syntax
+        .append(Util.indent(Util.join(", ", Util.map(enumValues, UtilJava::safeEnum))))
+        .append(!variables.isEmpty() || !methods.isEmpty() ? ';' : "");
+    }
+
+    syntax
+      .append(Util.indent(Util.join("\n", variables)))
+      .append("\n\n")
+      .append(Util.indent(Util.join("\n", constructors)));
+
+    if (classType == ClassType.REGULAR || classType == ClassType.ABSTRACT) {
+      // Cheat `super` calls by providing no-parameter constructor
+      if (constructors.isEmpty()) {
+        // If static class, a private constructor should already exist
+        if (classType == ClassType.REGULAR) {
+          // TODO
+          /*
+           * This is tricky:
+           *  - Some classes intentionally don't want constructors (e.g. abstract and static classes).
+           *  - Some classes don't have their own (e.g. subclasses that inherit constructors).
+           *  - Some classes have implicit constructors (e.g. option bags).
+           *
+           *  For inherited and implicit constructors, a custom constructor needs to be generated.
+           */
+          syntax
+            .append("\n\tpublic ")
+            .append(name)
+            .append("() {}");
+        }
+      } else if (UtilJava.find(constructors, c -> c.parameters.isEmpty()) == null) {
+        // This still needs to be generated regardless of parents,
+        // as there may be classes that extend from this
+        syntax
+          .append("\n\tprivate ")
+          .append(name)
+          .append("() {}");
+      }
+    }
+
+    syntax
+      .append("\n\n")
+      .append(Util.indent(Util.join("\n", Util.map(methods,
+        m -> m.toString(classType == ClassType.INTERFACE)))))
+      .append("\n\n")
+      .append(Util.indent(Util.join("\n\n", Util.map(nestedClasses,
+        n -> n.toString(classType == ClassType.INTERFACE, true)
+      ))))
+      .append("\n}");
+
+    return syntax.toString()
+      .replaceAll("(?m)^\\s+$", "")
+      .replaceAll("\\n\\n+", "\n\n")
+      .replaceAll("\\n+}", "\n}")
+      .replaceAll("\\{\\n+", "{\n");
+  }
+
+  public enum ClassType {
+    REGULAR("class"), ABSTRACT("abstract class"), INTERFACE("interface"), ENUM("enum");
+
+    private final String syntax;
+
+    ClassType (String syntax) {
+      this.syntax = syntax;
+    }
+
+    @Override
+    public String toString () {
+      return syntax;
+    }
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassConstructor.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassConstructor.java
new file mode 100644
index 0000000000..aa2f6dff4a
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassConstructor.java
@@ -0,0 +1,31 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+import java.util.ArrayList;
+import java.util.List;
+
+class JavaClassConstructor {
+  boolean isPrivate;
+  String className;
+  List<JavaClassMethodParameter> parameters = new ArrayList<>();
+
+  JavaClassConstructor (boolean isPrivate, String className) {
+    this.isPrivate = isPrivate;
+    this.className = className;
+  }
+
+  JavaClassConstructor (String className) {
+    this.className = className;
+  }
+
+  @Override
+  public String toString () {
+    return (isPrivate ? "private" : "public") +
+           ' ' +
+           className +
+           "(" +
+           Util.join(", ", parameters) +
+           ") {}";
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethod.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethod.java
new file mode 100644
index 0000000000..6d40875abc
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethod.java
@@ -0,0 +1,91 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+import static org.ooml.oomlc.core.env.gen.Compiling.Java.JavaCompiler.TYPE_VOID;
+
+class JavaClassMethod {
+  boolean isStatic;
+  List<JavaGenericParameter> genericParameters = new ArrayList<>();
+  JavaType returnType;
+  String name;
+  List<JavaClassMethodParameter> parameters = new ArrayList<>();
+
+  JavaClassMethod(JavaType returnType, String name) {
+    this(false, null, returnType, name);
+  }
+
+  JavaClassMethod (JavaGenericParameter[] genericParameters, JavaType returnType, String name) {
+    this(false, genericParameters, returnType, name);
+  }
+
+  JavaClassMethod (boolean isStatic, JavaGenericParameter[] genericParameters, JavaType returnType, String name) {
+    this(isStatic, genericParameters, returnType, name, null);
+  }
+
+  JavaClassMethod (boolean isStatic, JavaGenericParameter[] genericParameters, JavaType returnType, String name, JavaClassMethodParameter[] parameters) {
+    this.isStatic = isStatic;
+    if (genericParameters != null) {
+      Collections.addAll(this.genericParameters, genericParameters);
+    }
+    this.returnType = returnType;
+    this.name = name;
+    if (parameters != null) {
+      Collections.addAll(this.parameters, parameters);
+    }
+  }
+
+  @Override
+  public String toString () {
+    return toString(false);
+  }
+
+  public String toString(boolean inInterface) {
+    return toString(inInterface, true);
+  }
+
+  public String toString (boolean inInterface, boolean isDefault) {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append(!inInterface ? "public " : "")
+      .append(inInterface && !isStatic && isDefault ? "default " : "")
+      .append(!inInterface || isStatic ? "native " : "")
+      .append(isStatic ? "static " : "");
+
+    if (!genericParameters.isEmpty()) {
+      syntax
+        .append('<')
+        .append(Util.join(", ", genericParameters))
+        .append("> ");
+    }
+
+    syntax
+      .append(returnType)
+      .append(' ')
+      .append(name);
+
+    syntax
+      .append(' ')
+      .append("(")
+      .append(Util.join(", ", parameters))
+      .append(")");
+
+    if (!inInterface || isStatic || !isDefault) {
+      syntax.append(';');
+
+    } else {
+      if (returnType == TYPE_VOID) {
+        syntax.append(" {}");
+      } else {
+        syntax.append(" { return null; }");
+      }
+    }
+
+    return syntax.toString();
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethodParameter.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethodParameter.java
new file mode 100644
index 0000000000..0ed404722c
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassMethodParameter.java
@@ -0,0 +1,33 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import java.util.HashMap;
+import java.util.Map;
+
+class JavaClassMethodParameter {
+  boolean isVariableLength;
+  String name;
+  JavaType type;
+
+  JavaClassMethodParameter (String name, JavaType type) {
+    this(false, name, type);
+  }
+
+  JavaClassMethodParameter (boolean isVariableLength, String name, JavaType type) {
+    this.isVariableLength = isVariableLength;
+    this.name = name;
+    this.type = type;
+  }
+
+  @Override
+  public String toString () {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append(type)
+      .append(' ')
+      .append(isVariableLength ? "..." : "")
+      .append(name);
+
+    return syntax.toString();
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassVariable.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassVariable.java
new file mode 100644
index 0000000000..c1d0f39cda
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaClassVariable.java
@@ -0,0 +1,49 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import java.util.HashMap;
+import java.util.Map;
+
+class JavaClassVariable {
+  private static final Map<String, String> DEFAULT_VALUES = _createDefaultValuesMap();
+
+  private static Map<String, String> _createDefaultValuesMap () {
+    Map<String, String> map = new HashMap<>();
+
+    map.put("Number", "0");
+    map.put("String", "\"\"");
+    map.put("Boolean", "false");
+
+    return map;
+  }
+
+  boolean isStatic;
+  boolean isFinal;
+  JavaType type;
+  String name;
+
+  JavaClassVariable(JavaType type, String name) {
+    this(false, false, type, name);
+  }
+
+  JavaClassVariable(boolean isFinal, JavaType type, String name) {
+    this(false, isFinal, type, name);
+  }
+
+  JavaClassVariable (boolean isStatic, boolean isFinal, JavaType type, String name) {
+    this.isStatic = isStatic;
+    this.isFinal = isFinal;
+    this.type = type;
+    this.name = name;
+  }
+
+  @Override
+  public String toString () {
+    return "public " +
+           (isStatic ? "static " : "") +
+           (isFinal ? "final " : "") +
+           type +
+           ' ' +
+           name +
+           " = " + DEFAULT_VALUES.get(type.reference) + ";";
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaCompiler.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaCompiler.java
new file mode 100644
index 0000000000..cd956d0525
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaCompiler.java
@@ -0,0 +1,749 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import org.ooml.oomlc.core.env.gen.Exception.InternalStateError;
+import org.ooml.oomlc.core.env.gen.Exception.MalformedSyntaxException;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit.STInterfaceCallSignature;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit.STInterfaceConstructor;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit.STInterfaceIndexSignature;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit.STInterfaceMethod;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit.STInterfaceProperty;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterfaceBody;
+import org.ooml.oomlc.core.env.gen.Syntax.Namespace.STNamespace;
+import org.ooml.oomlc.core.env.gen.Syntax.STAnnotation;
+import org.ooml.oomlc.core.env.gen.Syntax.STCallable;
+import org.ooml.oomlc.core.env.gen.Syntax.STCallableOverloads;
+import org.ooml.oomlc.core.env.gen.Syntax.STCallableParameter;
+import org.ooml.oomlc.core.env.gen.Syntax.STGenericParameter;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STInterfaceStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STArrayType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STCallableType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STGenericType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STInlineInterfaceType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STPrimitiveType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STReferenceType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STStringLiteralType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STUnionType;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.regex.Pattern;
+
+import static java.lang.String.format;
+import static org.ooml.oomlc.core.env.gen.Compiling.Java.JavaClass.ClassType.ABSTRACT;
+import static org.ooml.oomlc.core.env.gen.Compiling.Java.JavaClass.ClassType.ENUM;
+import static org.ooml.oomlc.core.env.gen.Compiling.Java.JavaClass.ClassType.INTERFACE;
+import static org.ooml.oomlc.core.env.gen.Compiling.Java.JavaClass.ClassType.REGULAR;
+
+public class JavaCompiler {
+  static final Map<STPrimitiveType.Primitive, String> PRIMITIVE_TYPES = _createPrimitiveTypesMap();
+  static final JavaType TYPE_ANY = new JavaType("Object");
+  static final JavaType TYPE_VOID = new JavaType("void");
+
+  private final STNamespace stNamespace;
+  private final JavaCompiler parent; // Can be null
+  private final JavaClass namespace;
+  private final List<String> interfacesQueue;
+  private final Map<String, JavaType> compiledTypeAliases = new HashMap<>();
+  private boolean compiled = false;
+
+  private JavaCompiler (JavaCompiler parent, JavaClass namespace, STNamespace stNamespace) {
+    this.parent = parent;
+    this.stNamespace = stNamespace;
+    this.namespace = namespace;
+    this.interfacesQueue = new ArrayList<>(stNamespace.getInterfaces().keySet());
+  }
+
+  private static Map<STPrimitiveType.Primitive, String> _createPrimitiveTypesMap () {
+    Map<STPrimitiveType.Primitive, String> map = new HashMap<>();
+
+    // NULL and UNDEFINED not implemented here
+    map.put(STPrimitiveType.Primitive.OBJECT, "Object");
+    map.put(STPrimitiveType.Primitive.BOOLEAN, "Boolean");
+    map.put(STPrimitiveType.Primitive.NUMBER, "Number");
+    map.put(STPrimitiveType.Primitive.STRING, "String");
+
+    return map;
+  }
+
+  public static String compileTopLevel (STNamespace namespace) {
+    JavaClass window = new JavaClass(REGULAR, "window");
+    window.isFinal = true;
+
+    window.nestedClasses.addAll(Arrays.asList(JavaBuiltin.CLASSES));
+
+    new JavaCompiler(null, window, namespace)
+      .compile();
+    String code = window.toString(false, false);
+
+    return "package org.ooml.oomlc.env;" +
+           "\n\n" +
+           "import java.util.ArrayList;\n" +
+           "import java.util.Optional;\n" +
+           '\n' +
+           code;
+  }
+
+  private void compile () {
+    if (compiled) {
+      throw new InternalStateError("Namespace already compiled to Java");
+    }
+    compiled = true;
+
+    // Compile type aliases first as they are directly substitued into where they're used
+    for (Map.Entry<String, STType> stTypeAlias : stNamespace.getTypeAliases().entrySet()) {
+      String name = stTypeAlias.getKey();
+      STType stType = stTypeAlias.getValue();
+      JavaType type;
+
+      if (stType.getTypeType() == STType.TypeType.STRING_LITERAL) {
+        // Single string literal
+        type = createEnumType(false, name, UtilJava.listFrom(((STStringLiteralType) stType).getValue()));
+      } else {
+        type = compileType(stType, name);
+      }
+
+      compiledTypeAliases.put(name, type);
+    }
+
+    // Compile functions
+    for (Map.Entry<String, STCallableOverloads> stOverloads : stNamespace.getFunctions().entrySet()) {
+      String name = stOverloads.getKey();
+      STCallableOverloads stCallables = stOverloads.getValue();
+
+      for (STCallable stCallable : stCallables.getSignatures()) {
+        for (JavaClassMethod method : compileCallable(name, stCallable, null)) {
+          method.isStatic = true;
+          namespace.methods.add(method);
+        }
+      }
+    }
+
+    // Compile interfaces
+    while (!interfacesQueue.isEmpty()) {
+      String name = interfacesQueue.get(0);
+      processInterface(name);
+    }
+
+    // TODO
+
+    // Compile namespaces
+    for (Map.Entry<String, STNamespace> stNestedNs : stNamespace.getNestedNamespaces().entrySet()) {
+      String name = stNestedNs.getKey();
+      STNamespace stNs = stNestedNs.getValue();
+
+      JavaClass namespace = new JavaClass(ABSTRACT, name);
+      new JavaCompiler(this, namespace, stNs).compile();
+      this.namespace.nestedClasses.add(namespace);
+    }
+
+    // Compile variables last as some will export interfaces that need to be already compiled
+    for (Map.Entry<String, STType> stVar : stNamespace.getVariables().entrySet()) {
+      String name = stVar.getKey();
+      STType stType = stVar.getValue();
+      Position position = stType.getPosition();
+
+      if (stType.getTypeType() == STType.TypeType.REFERENCE) {
+        String reference = ((STReferenceType) stType).getReference();
+        if (Pattern.compile("^" + Pattern.quote(name) + "(Constructor)?$").matcher(reference).matches()) {
+          processInterfaceExport(
+            position,
+            UtilJava.find(namespace.nestedClasses, compiled -> compiled.name.equals(reference)));
+          continue;
+        }
+      }
+
+      if (stType.getTypeType() == STType.TypeType.INLINE_INTERFACE) {
+        JavaClass compiled = compileInterfaceBody(((STInlineInterfaceType) stType).getInterfaceBody(), name);
+        processInterfaceExport(position, compiled);
+        continue;
+      }
+
+      JavaClassVariable variable = new JavaClassVariable(true, true, compileType(stType, name), name);
+      namespace.variables.add(variable);
+    }
+  }
+
+  private void processInterface (String name) {
+    if (!interfacesQueue.contains(name)) {
+      return;
+    }
+    interfacesQueue.remove(name);
+
+    STInterfaceStatement stIntfStmt = stNamespace.getInterfaces().get(name);
+    STInterfaceBody stIntfBody = stIntfStmt.getInterfaceBody();
+
+    if (name.endsWith("EventMap")) {
+      processEventMap(stIntfStmt);
+
+    } else if (stIntfBody.getConstructors().isEmpty() &&
+        stIntfBody.getIndexSignature() == null &&
+        stIntfBody.getProperties().isEmpty() &&
+        stIntfBody.getMethods().isEmpty() &&
+        stIntfBody.getCallSignatures().size() == 1) {
+      processFunctionalInterface(stIntfStmt);
+
+    } else {
+      JavaClass intface = compileInterfaceBody(stIntfBody, name);
+
+      intface.genericParameters.addAll(Util.map(stIntfStmt.getGenericParameters(), this::compileGenericParameter));
+
+      for (STType stParent : stIntfStmt.getParents()) {
+        String parent = compileParentDeclaration(stParent);
+
+        STType parentClassReferenceType = stParent;
+        if (stParent.getTypeType() == STType.TypeType.GENERIC) {
+          parentClassReferenceType = ((STGenericType) parentClassReferenceType).getReferenceType();
+        }
+
+        String parentClassName = compileParentDeclaration(parentClassReferenceType);
+        processInterface(parentClassName);
+
+        JavaClass parentClass = UtilJava.find(namespace.nestedClasses, c -> c.name.equals(parentClassName));
+
+        if (intface.classType != INTERFACE && parentClass != null && parentClass.classType == INTERFACE) {
+          intface.implementsClasses.add(parent);
+        } else {
+          intface.extendsClasses.add(parent);
+        }
+      }
+
+      namespace.nestedClasses.add(intface);
+    }
+  }
+
+  private void processFunctionalInterface(STInterfaceStatement stIntfStmt) {
+    String name = stIntfStmt.getName();
+
+    if (!stIntfStmt.getParents().isEmpty()) {
+      throw new MalformedSyntaxException("Functional interface has parents", stIntfStmt.getPosition());
+    }
+
+    STInterfaceBody stIntfBody = stIntfStmt.getInterfaceBody();
+
+    List<JavaClassMethod> overloads = compileCallable("apply", stIntfBody
+      .getCallSignatures()
+      .get(0)
+      .getCallable(), name);
+
+    if (overloads.size() != 1) {
+      throw new MalformedSyntaxException("Functional interface overloads to more than one method", stIntfStmt.getPosition());
+    }
+
+    JavaClassMethod signature = overloads.get(0);
+
+    JavaFunctionalInterface functionalInterface = new JavaFunctionalInterface(name, signature);
+    functionalInterface.genericParameters = Util.map(stIntfStmt.getGenericParameters(), this::compileGenericParameter);
+
+    namespace.nestedClasses.add(functionalInterface);
+  }
+
+  private void processInterfaceExport (Position position, JavaClass staticClass) {
+    JavaClassVariable prototype = UtilJava.findAndRemove(staticClass.variables, v -> v.name.equals("prototype"));
+    String baseClassName = prototype == null ? null : prototype.type.reference;
+
+    if (!staticClass.genericParameters.isEmpty()) {
+      throw new MalformedSyntaxException("Static-side interface has generic parameters", position);
+    }
+
+    if (!staticClass.extendsClasses.isEmpty() || !staticClass.implementsClasses.isEmpty()) {
+      throw new MalformedSyntaxException("Static-side interface has parents", position);
+    }
+
+    for (JavaClassVariable variable : staticClass.variables) {
+      variable.isStatic = true;
+    }
+
+    for (JavaClassMethod method : staticClass.methods) {
+      method.isStatic = true;
+    }
+
+    if (baseClassName != null) {
+      JavaClass baseClass = UtilJava.find(namespace.nestedClasses, compiled -> compiled.name.equals(baseClassName));
+
+      if (baseClass == null) {
+        throw new MalformedSyntaxException(
+          format("Static-side interface with prototype does not point to compiled interface \"%s\"", baseClassName),
+          position);
+      }
+
+      // Static class will be merged, so remove it if it isn't inline
+      namespace.nestedClasses.remove(staticClass);
+
+      if (!baseClass.constructors.isEmpty()) {
+        throw new MalformedSyntaxException(
+          "Prototype interface has constructors",
+          position);
+      }
+
+      for (JavaClassConstructor constructor : staticClass.constructors) {
+        constructor.className = baseClass.name;
+        baseClass.constructors.add(constructor);
+      }
+
+      baseClass.variables.addAll(staticClass.variables);
+
+      baseClass.methods.addAll(staticClass.methods);
+    }
+  }
+
+  private void processEventMap (STInterfaceStatement stIntfStmt) {
+    String eventTypeName = stIntfStmt.getName().replace("Map", "Type");
+    JavaClass eventTypeClass = new JavaClass(INTERFACE, eventTypeName);
+    if (stIntfStmt.getParents().isEmpty()) {
+      eventTypeClass.extendsClasses.add("EventType");
+    } else {
+      for (STType stParent : stIntfStmt.getParents()) {
+        if (stParent.getTypeType() != STType.TypeType.REFERENCE) {
+          throw new MalformedSyntaxException("Invalid event map parent", stParent.getPosition());
+        }
+        String parentName = ((STReferenceType) stParent).getReference().replace("Map", "Type");
+        eventTypeClass.extendsClasses.add(parentName);
+      }
+    }
+
+    for (Map.Entry<String, STInterfaceProperty> map : stIntfStmt.getInterfaceBody().getProperties().entrySet()) {
+      String specificEventName = map.getKey();
+      String eventClass = ((STReferenceType) map.getValue().getType()).getReference();
+
+      JavaClass specificEvent = new JavaClass(ABSTRACT, specificEventName);
+      specificEvent.extendsClasses.add(eventClass);
+      specificEvent.implementsClasses.add(eventTypeName);
+      eventTypeClass.nestedClasses.add(specificEvent);
+    }
+
+    namespace.nestedClasses.add(eventTypeClass);
+  }
+
+  private String compileParentDeclaration (STType stParent) {
+    JavaType compiled;
+    if (stParent.getTypeType() == STType.TypeType.REFERENCE) {
+      compiled = compileReferenceType((STReferenceType) stParent);
+    } else {
+      compiled = compileGenericType((STGenericType) stParent);
+    }
+    return compiled.toString();
+  }
+
+  private JavaClass compileInterfaceBody (STInterfaceBody stIntf, String forName) {
+    JavaClass i = new JavaClass(forName);
+
+    boolean isJavaAbstract = stIntf.hasAnnotation(STAnnotation.ABSTRACT);
+    boolean isJavaInterface = stIntf.hasAnnotation(STAnnotation.INTERFACE);
+    boolean isJavaStatic = stIntf.hasAnnotation(STAnnotation.STATIC);
+
+    i.classType = isJavaAbstract ? ABSTRACT : isJavaInterface ? INTERFACE : REGULAR;
+
+    for (STInterfaceCallSignature stCall : stIntf.getCallSignatures()) {
+      i.methods.addAll(compileCallable("__call", stCall.getCallable(), forName));
+    }
+
+    // Compile index signature
+    STInterfaceIndexSignature stIndexSig = stIntf.getIndexSignature();
+    if (stIndexSig != null) {
+      JavaType paramType = compileType(stIndexSig.getType(), forName + "IndexQuery");
+      JavaType returnType = compileType(stIndexSig.getReturnType(), forName + "IndexReturn");
+      i.implementsClasses.add("GetIndexable<" + paramType + ", " + returnType + ">");
+      if (stIndexSig.isReadOnly()) {
+        i.implementsClasses.add("SetIndexable<" + paramType + ", " + returnType + ">");
+      }
+    }
+
+    // Compile constructors
+    if (isJavaStatic) {
+      if (!stIntf.getConstructors().isEmpty()) {
+        throw new MalformedSyntaxException("Static-annotated interface body has constructor", stIntf.getPosition());
+      }
+      i.constructors.add(new JavaClassConstructor(true, forName));
+    }
+    for (STInterfaceConstructor stConstructor : stIntf.getConstructors()) {
+      for (List<JavaClassMethodParameter> overloadSignature : compileSignature(stConstructor.getCallable().getParameters(),
+        forName + "Constructor")) {
+        JavaClassConstructor constructor = new JavaClassConstructor(forName);
+        constructor.parameters = overloadSignature;
+        i.constructors.add(constructor);
+      }
+    }
+
+    // Compile properties
+    for (Map.Entry<String, STInterfaceProperty> stPropEntry : stIntf.getProperties().entrySet()) {
+      String name = stPropEntry.getKey();
+      STInterfaceProperty stProp = stPropEntry.getValue();
+
+      boolean isReadOnly = stProp.isReadOnly();
+
+      JavaType type = compileType(stProp.getType(), forName + UtilJava.capitalise(name) + "Property");
+      type.isNullable = stProp.isOptional();
+
+
+      JavaClassVariable variable = new JavaClassVariable(
+        isReadOnly,
+        type,
+        UtilJava.safeIdentifier(name)
+      );
+
+      // Don't just set isStatic = isJavaStatic as property may have own annotation
+      if (isJavaStatic) {
+        variable.isStatic = true;
+      }
+
+      if (variable.isStatic || !isJavaInterface) {
+        i.variables.add(variable);
+      } else {
+        JavaClassMethod getter = new JavaClassMethod(type, "get" + UtilJava.capitalise(name));
+        i.methods.add(getter);
+
+        if (!variable.isFinal) {
+          JavaClassMethod setter = new JavaClassMethod(TYPE_VOID, "set" + UtilJava.capitalise(name));
+          setter.parameters.add(new JavaClassMethodParameter("value", type));
+          i.methods.add(setter);
+        }
+      }
+    }
+
+    // Compile methods
+    for (STInterfaceMethod stMethod : stIntf.getMethods()) {
+      String name = stMethod.getName();
+
+      for (JavaClassMethod method : compileCallable(name, stMethod.getCallable(), forName)){
+        // Don't just set isStatic = isJavaStatic as method may have own annotation
+        if (isJavaStatic) {
+          method.isStatic = true;
+        }
+
+        i.methods.add(method);
+      }
+    }
+
+    return i;
+  }
+
+  private List<JavaClassMethod> compileCallable (String name, STCallable stCall, String forName /* Can be null */) {
+    List<JavaClassMethod> overloads = new ArrayList<>();
+
+    forName = (forName == null ? "" : forName) + UtilJava.capitalise(name);
+
+    List<JavaGenericParameter> genericParameters = new ArrayList<>();
+    for (STGenericParameter stGenParam : stCall.getGenericParameters()) {
+      genericParameters.add(this.compileGenericParameter(stGenParam));
+    }
+
+    STType stRetType = stCall.getReturnType();
+    JavaType returnType = compileType(stRetType, forName + "Return");
+
+    List<STCallableParameter> stParameters = stCall.getParameters();
+
+    if (stParameters.isEmpty()) {
+      JavaClassMethod overload = new JavaClassMethod(
+        returnType,
+        UtilJava.safeIdentifier(name)
+      );
+      overload.genericParameters = genericParameters;
+      overloads.add(overload);
+
+    } else {
+      for (List<JavaClassMethodParameter> overloadSignature : compileSignature(stCall.getParameters(), forName)) {
+        JavaClassMethod overload = new JavaClassMethod(
+          returnType,
+          UtilJava.safeIdentifier(name)
+        );
+        overload.genericParameters = genericParameters;
+        overload.parameters = overloadSignature;
+        overloads.add(overload);
+      }
+    }
+
+    return overloads;
+  }
+
+  private JavaGenericParameter compileGenericParameter (STGenericParameter stGenParam) {
+    JavaGenericParameter genericParameter = new JavaGenericParameter(
+      stGenParam.getName()
+    );
+
+    for (STType stBound : stGenParam.getBounds()) {
+      genericParameter.upperBounds.add(compileGenericParameterBoundOrArgument(stBound));
+    }
+
+    return genericParameter;
+  }
+
+  private JavaType compileGenericParameterBoundOrArgument (STType stType) {
+    switch (stType.getTypeType()) {
+    case ANY:
+      return TYPE_ANY;
+
+    case PRIMITIVE:
+      return compilePrimitiveType((STPrimitiveType) stType);
+
+    case REFERENCE:
+      return compileReferenceType((STReferenceType) stType);
+
+    case GENERIC:
+      return compileGenericType((STGenericType) stType);
+
+    case ARRAY:
+      return compileArrayType((STArrayType) stType, null);
+
+    case UNION:
+      return compileUnionType((STUnionType) stType, null);
+
+    default:
+      throw new MalformedSyntaxException(
+        "Invalid generic parameter bound or argument",
+        stType.getPosition());
+    }
+  }
+
+  private List<List<JavaClassMethodParameter>> compileSignature (List<STCallableParameter> signature, String forNamePrefix) {
+    if (signature.isEmpty()) {
+      return new ArrayList<>();
+    }
+
+    STCallableParameter stFirstParam = signature.get(0);
+    STType stFirstType = stFirstParam.getType();
+
+    String name = stFirstParam.getName();
+    String forName = forNamePrefix + UtilJava.capitalise(name);
+
+    boolean variableLength = stFirstParam.isVariableLength();
+    boolean optional = stFirstParam.isOptional();
+
+    if (variableLength) {
+      if (stFirstType.getTypeType() != STType.TypeType.ARRAY) {
+        throw new MalformedSyntaxException("Variable length argument does not have array type", stFirstParam.getPosition());
+      }
+      stFirstType = ((STArrayType) stFirstType).getElementType();
+    }
+
+    List<JavaClassMethodParameter> firstParamOverloads = new ArrayList<>();
+
+    switch (stFirstType.getTypeType()) {
+    case UNION:
+      STNormalisedUnionType stNormalUnion = STNormalisedUnionType.from((STUnionType) stFirstType);
+
+      for (STType stFirstTypeUnrolled : stNormalUnion.getSubtypes()) {
+        JavaClassMethodParameter firstParamOverload = new JavaClassMethodParameter(
+          variableLength,
+          name,
+          // This will make sure it's a compatible type
+          compileType(stFirstTypeUnrolled, forName)
+        );
+        if (stNormalUnion.isNullable()) {
+          firstParamOverload.type.isNullable = true;
+        }
+        firstParamOverloads.add(firstParamOverload);
+      }
+
+      if (!stNormalUnion.getLiterals().isEmpty()) {
+        JavaClass enumClass = new JavaClass(ENUM, forName + "Value");
+        enumClass.enumValues = stNormalUnion.getLiterals();
+        namespace.nestedClasses.add(enumClass);
+
+        firstParamOverloads.add(new JavaClassMethodParameter(name, new JavaType(enumClass.name)));
+      }
+      break;
+
+    default:
+      JavaClassMethodParameter firstParamOverload = new JavaClassMethodParameter(
+        variableLength,
+        name,
+        // This will make sure it's a compatible type
+        compileType(stFirstType, forName)
+      );
+      firstParamOverloads.add(firstParamOverload);
+    }
+
+    List<List<JavaClassMethodParameter>> overloads = new ArrayList<>();
+    for (JavaClassMethodParameter firstParamOverload : firstParamOverloads) {
+      if (signature.size() > 1) {
+        for (List<JavaClassMethodParameter> otherParamsSubsets : compileSignature(signature.subList(1, signature.size()), forNamePrefix)) {
+          List<JavaClassMethodParameter> overload = new ArrayList<>();
+          overload.add(firstParamOverload);
+          overload.addAll(otherParamsSubsets);
+          overloads.add(overload);
+        }
+
+      } else {
+        List<JavaClassMethodParameter> overload = new ArrayList<>();
+        overload.add(firstParamOverload);
+        overloads.add(overload);
+      }
+    }
+
+    if (optional) {
+      overloads.add(new ArrayList<>());
+    }
+
+    return overloads;
+  }
+
+  private JavaType compileType (STType stType, String forName /* Can be null */) {
+    STType.TypeType typeType = stType.getTypeType();
+    Position position = stType.getPosition();
+
+    switch (typeType) {
+    case ARRAY:
+      return compileArrayType((STArrayType) stType, forName);
+
+    case CALLABLE:
+      return compileCallableType((STCallableType) stType, forName);
+
+    case INLINE_INTERFACE:
+      return compileInlineInterfaceType((STInlineInterfaceType) stType, forName);
+
+    case PRIMITIVE:
+      return compilePrimitiveType((STPrimitiveType) stType);
+
+    case REFERENCE:
+      return compileReferenceType((STReferenceType) stType);
+
+    case GENERIC:
+      return compileGenericType((STGenericType) stType);
+
+    case ANY:
+      return TYPE_ANY;
+
+    case UNION:
+      return compileUnionType((STUnionType) stType, forName);
+
+    case PREDICATE:
+      return new JavaType(PRIMITIVE_TYPES.get(STPrimitiveType.Primitive.BOOLEAN));
+
+    case VOID:
+      return TYPE_VOID;
+
+    default:
+      throw new MalformedSyntaxException(format("Unsupported type \"%s\"", typeType), position);
+    }
+  }
+
+  private JavaType compileCallableType (STCallableType stCallType, String forName) {
+    List<JavaClassMethod> overloads = compileCallable("apply", stCallType.getCallable(), forName);
+
+    if (overloads.size() != 1) {
+      throw new MalformedSyntaxException("Callable type overloads to more than one method", stCallType.getPosition());
+    }
+
+    JavaClassMethod signature = overloads.get(0);
+
+    JavaFunctionalInterface functionalInterface = new JavaFunctionalInterface(forName, signature);
+
+    namespace.nestedClasses.add(functionalInterface);
+
+    return new JavaType(functionalInterface.name);
+  }
+
+  private JavaType compileArrayType (STArrayType stArrayType, String forName /* Could be null, let exception throw */) {
+    STType stElemType = stArrayType.getElementType();
+
+    JavaType elementType;
+
+    switch (stElemType.getTypeType()) {
+    case ANY:
+    case ARRAY:
+    case CALLABLE:
+    case PRIMITIVE:
+    case REFERENCE:
+    case UNION:
+      elementType = compileType(stElemType, forName + "Element");
+      break;
+
+    default:
+      throw new MalformedSyntaxException(format("Unsupported array type element type \"%s\"", stElemType.getTypeType()), stArrayType
+        .getPosition());
+    }
+
+    return UtilJava.wrapType("ArrayList", elementType);
+  }
+
+  private JavaType compileInlineInterfaceType (STInlineInterfaceType stInlineType, String forName) {
+    JavaClass inlineInterface = compileInterfaceBody(stInlineType.getInterfaceBody(), forName);
+
+    namespace.nestedClasses.add(inlineInterface);
+
+    return new JavaType(inlineInterface.name);
+  }
+
+  private JavaType compileReferenceType (STReferenceType stRefType) {
+    String reference = stRefType.getReference();
+
+    switch (reference) {
+    case "ReadonlyArray":
+    case "Array":
+      reference = "ArrayList";
+      break;
+
+    case "__Class":
+      reference = "Class";
+      break;
+
+    default:
+      if (compiledTypeAliases.containsKey(reference)) {
+        return compiledTypeAliases.get(reference);
+      }
+    }
+
+    return new JavaType(reference);
+  }
+
+  private JavaType compileGenericType (STGenericType stGenericType) {
+    JavaType type = compileReferenceType(stGenericType.getReferenceType());
+
+    type.genericArguments = Util.map(
+      stGenericType.getGenericArguments(),
+      stGenArg -> {
+        if (stGenArg.getTypeType() == STType.TypeType.VOID) {
+          return new JavaType("Void");
+        }
+        return compileGenericParameterBoundOrArgument(stGenArg);
+      });
+
+    return type;
+  }
+
+  private JavaType compilePrimitiveType (STPrimitiveType stPrimType) {
+    String syntax = PRIMITIVE_TYPES.get(stPrimType.getPrimitive());
+
+    if (syntax == null) {
+      throw new MalformedSyntaxException(
+        format("Unknown primitive type \"%s\"", stPrimType.getPrimitive()),
+        stPrimType.getPosition());
+    }
+
+    return new JavaType(syntax);
+  }
+
+  private JavaType compileUnionType (STUnionType stUnionType, String forName /* Can be null */) {
+    STNormalisedUnionType stNormalUnion = STNormalisedUnionType.from(stUnionType);
+    boolean nullable = stNormalUnion.isNullable();
+    List<STType> stSubtypes = stNormalUnion.getSubtypes();
+    List<String> literalSubtypes = stNormalUnion.getLiterals();
+
+    if (stSubtypes.size() == 1) {
+      JavaType onlyType = compileType(stSubtypes.get(0), forName);
+      onlyType.isNullable = nullable;
+      return onlyType;
+    }
+
+    if (forName != null && stSubtypes.isEmpty() && !literalSubtypes.isEmpty()) {
+      return createEnumType(nullable, forName, literalSubtypes);
+    }
+
+    // TODO Reasearch transformation method where common interface is created and implemented on subtype classes
+
+    return TYPE_ANY;
+  }
+
+  private JavaType createEnumType (boolean nullable, String name, List<String> values) {
+    JavaClass enumClass = new JavaClass(ENUM, name);
+    enumClass.enumValues = values;
+    namespace.nestedClasses.add(enumClass);
+    return new JavaType(nullable, enumClass.name);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaFunctionalInterface.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaFunctionalInterface.java
new file mode 100644
index 0000000000..6bfc9d5162
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaFunctionalInterface.java
@@ -0,0 +1,48 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+class JavaFunctionalInterface extends JavaClass {
+  JavaFunctionalInterface (String name, JavaClassMethod signature) {
+    this(name, null, signature);
+  }
+
+  JavaFunctionalInterface (String name, JavaGenericParameter[] genericParameters, JavaClassMethod signature) {
+    super(ClassType.INTERFACE, name, genericParameters);
+    methods.add(signature);
+  }
+
+  @Override
+  public String toString () {
+    return toString(false);
+  }
+
+  @Override
+  public String toString (boolean inInterface, boolean isNested) {
+    return toString(inInterface);
+  }
+
+  public String toString (boolean inInterface) {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append("@FunctionalInterface\n")
+      .append(!inInterface ? "public " : "")
+      .append("interface ")
+      .append(name);
+
+    if (!genericParameters.isEmpty()) {
+      syntax
+        .append("<")
+        .append(Util.join(", ", genericParameters))
+        .append(">");
+    }
+
+    syntax
+      .append(" {\n\t")
+      .append(methods.get(0).toString(true, false))
+      .append("\n}");
+
+    return syntax.toString();
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaGenericParameter.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaGenericParameter.java
new file mode 100644
index 0000000000..779e61e369
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaGenericParameter.java
@@ -0,0 +1,45 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+class JavaGenericParameter {
+  String name;
+  List<JavaType> upperBounds = new ArrayList<>();
+  List<JavaType> lowerBounds = new ArrayList<>();
+
+  JavaGenericParameter (String name) {
+    this(name, null);
+  }
+
+  JavaGenericParameter (String name, JavaType[] upperBounds) {
+    this.name = name;
+    if (upperBounds != null) {
+      Collections.addAll(this.upperBounds, upperBounds);
+    }
+  }
+
+  @Override
+  public String toString () {
+    StringBuilder syntax = new StringBuilder();
+
+    syntax
+      .append(name);
+
+    if (!upperBounds.isEmpty()) {
+      syntax
+        .append(" extends ")
+        .append(Util.join(" & ", upperBounds));
+
+    } else if (!lowerBounds.isEmpty()) {
+      syntax
+        .append(" super ")
+        .append(Util.join(" & ", lowerBounds));
+    }
+
+    return syntax.toString();
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaType.java
new file mode 100644
index 0000000000..973b7e218a
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/JavaType.java
@@ -0,0 +1,42 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import org.ooml.oomlc.core.env.gen.Utils.Util;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+class JavaType {
+  Boolean isNullable; // Can be null (i.e. don't add notation)
+  String reference;
+  List<JavaType> genericArguments = new ArrayList<>();
+
+  JavaType (String reference) {
+    this(null, reference, null);
+  }
+
+  JavaType (Boolean isNullable, String reference) {
+    this(isNullable, reference, null);
+  }
+
+  JavaType (String reference, JavaType[] genericArguments) {
+    this(null, reference, genericArguments);
+  }
+
+  JavaType (Boolean isNullable, String reference, JavaType[] genericArguments) {
+    this.isNullable = isNullable;
+    this.reference = reference;
+    if (genericArguments != null) {
+      Collections.addAll(this.genericArguments, genericArguments);
+    }
+  }
+
+  @Override
+  public String toString () {
+    String type = reference;
+    if (!genericArguments.isEmpty()) {
+      type += '<' + Util.join(", ", genericArguments) + '>';
+    }
+    return type;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/STNormalisedUnionType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/STNormalisedUnionType.java
new file mode 100644
index 0000000000..3550667c0c
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/STNormalisedUnionType.java
@@ -0,0 +1,64 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STPrimitiveType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STStringLiteralType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STUnionType;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class STNormalisedUnionType {
+  private final boolean nullable;
+  private final List<STType> subtypes;
+  private final List<String> literals;
+
+  private STNormalisedUnionType (boolean nullable, List<STType> subtypes, List<String> literals) {
+    this.nullable = nullable;
+    this.subtypes = subtypes;
+    this.literals = literals;
+  }
+
+  public static STNormalisedUnionType from(STUnionType st_union_type) {
+    boolean nullable = false;
+    List<STType> subtypes = new ArrayList<>();
+    List<String> literals = new ArrayList<>();
+
+    for (STType st_subtype : ((STUnionType) st_union_type).getSubtypes()) {
+      switch (st_subtype.getTypeType()) {
+      case PRIMITIVE:
+        switch (((STPrimitiveType) st_subtype).getPrimitive()) {
+        case NULL:
+        case UNDEFINED:
+          nullable = true;
+          break;
+
+        default:
+          subtypes.add(st_subtype);
+        }
+        break;
+
+      case STRING_LITERAL:
+        literals.add(((STStringLiteralType) st_subtype).getValue());
+        break;
+
+      default:
+        subtypes.add(st_subtype);
+      }
+    }
+
+    return new STNormalisedUnionType(nullable, subtypes, literals);
+  }
+
+  public boolean isNullable () {
+    return nullable;
+  }
+
+  public List<STType> getSubtypes () {
+    return subtypes;
+  }
+
+  public List<String> getLiterals () {
+    return literals;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/UtilJava.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/UtilJava.java
new file mode 100644
index 0000000000..8ef65bd1c9
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Compiling/Java/UtilJava.java
@@ -0,0 +1,78 @@
+package org.ooml.oomlc.core.env.gen.Compiling.Java;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Optional;
+import java.util.Set;
+import java.util.function.Predicate;
+
+public class UtilJava {
+  private static final Set<String> RESERVED_JAVA_KEYWORDS = _createReservedJavaKeywordsSet();
+
+  private UtilJava () {
+  }
+
+  private static Set<String> _createReservedJavaKeywordsSet () {
+    Set<String> set = new HashSet<>();
+
+    set.add("assert");
+    set.add("catch");
+    set.add("continue");
+    set.add("default");
+    set.add("extends");
+    set.add("import");
+    set.add("public");
+
+    return set;
+  }
+
+  public static JavaType wrapType (String wrapper, JavaType wrapped) {
+    return new JavaType(wrapper, new JavaType[]{wrapped});
+  }
+
+  public static JavaType wrapOptionalType (JavaType nonOptionalType) {
+    return wrapType("Optional", nonOptionalType);
+  }
+
+  public static <T> T find(List<T> from, Predicate<T> predicate) {
+    Optional<T> value = from.stream().filter(predicate).findFirst();
+    return value.orElse(null);
+  }
+
+  public static <T> T findAndRemove(List<T> from, Predicate<T> predicate) {
+    T found = find(from, predicate);
+    if (found != null) {
+      from.remove(found);
+      return found;
+    }
+    return null;
+  }
+
+  public static <T> List<T> listFrom(T... elements) {
+    return new ArrayList<>(Arrays.asList(elements));
+  }
+
+  public static String safeIdentifier (String identifier) {
+    if (RESERVED_JAVA_KEYWORDS.contains(identifier)) {
+      return '_' + identifier;
+    }
+    return identifier;
+  }
+
+  public static String safeEnum (String identifier) {
+    if (identifier.isEmpty()) {
+      return "__NONE";
+    }
+
+    if (Character.isDigit(identifier.charAt(0))) {
+      identifier = '_' + identifier;
+    }
+    return identifier.replaceAll("-", "_").toUpperCase();
+  }
+
+  public static String capitalise (String str) {
+    return str.substring(0, 1).toUpperCase() + str.substring(1);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Lexer.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Lexer.java
index 8edff09214..ffec9776b1 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Lexer.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Lexing/Lexer.java
@@ -16,21 +16,30 @@ public class Lexer {
   private static final AcceptableChars IDENTIFIER = new AcceptableChars("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$0123456789");
 
   private static final Map<String, TokenType> SPECIAL_IDENTIFIER = _createSpecialIdentifierMap();
+  private static final Map<String, TokenType> OOML_ANNOTATION = _createOomlAnnotationMap();
   private static final OperatorTreeNode OPERATOR_TREE_ROOT_NODE = _createOperatorTreeRootNode();
-
   private final Code code;
 
   public Lexer (Code code) {
     this.code = code;
   }
 
+  private static Map<String, TokenType> _createOomlAnnotationMap () {
+    Map<String, TokenType> map = new HashMap<>();
+
+    map.put("abstract", T_OOML_ANNOTATION_ABSTRACT);
+    map.put("interface", T_OOML_ANNOTATION_INTERFACE);
+    map.put("static", T_OOML_ANNOTATION_STATIC);
+
+    return map;
+  }
+
   private static OperatorTreeNode _createOperatorTreeRootNode () {
     Map<String, TokenType> sequences = new HashMap<>();
 
     sequences.put("...", T_ELLIPSIS);
     sequences.put("(", T_LEFT_PARENTHESIS);
     sequences.put(")", T_RIGHT_PARENTHESIS);
-    sequences.put("?(", T_QUESTION_AND_LEFT_PARENTHESIS);
     sequences.put("[", T_LEFT_SQUARE_BRACKET);
     sequences.put("]", T_RIGHT_SQUARE_BRACKET);
     sequences.put("<", T_LEFT_CHEVRON);
@@ -65,6 +74,7 @@ public class Lexer {
   private static Map<String, TokenType> _createSpecialIdentifierMap () {
     Map<String, TokenType> map = new HashMap<>();
 
+    map.put("any", T_KEYWORD_ANY);
     map.put("const", T_KEYWORD_CONST);
     map.put("declare", T_KEYWORD_DECLARE);
     map.put("extends", T_KEYWORD_EXTENDS);
@@ -73,10 +83,13 @@ public class Lexer {
     map.put("is", T_KEYWORD_IS);
     map.put("keyof", T_KEYWORD_KEYOF);
     map.put("namespace", T_KEYWORD_NAMESPACE);
+    map.put("never", T_KEYWORD_NEVER);
     map.put("new", T_KEYWORD_NEW);
     map.put("readonly", T_KEYWORD_READONLY);
     map.put("type", T_KEYWORD_TYPE);
+    map.put("typeof", T_KEYWORD_TYPEOF);
     map.put("var", T_KEYWORD_VAR);
+    map.put("void", T_KEYWORD_VOID);
 
     return map;
   }
@@ -92,15 +105,18 @@ public class Lexer {
   public Token lex () {
     char nextChar = code.peek();
 
-    Token t;
+    Token t = null;
 
     if (nextChar == '/') {
       if (code.peek(2) == '*') {
-        lexMLComment();
+        if (code.peek(3) == '!') {
+          t = lexOomlAnnotation();
+        } else {
+          lexMLComment();
+        }
       } else {
         lexSLComment();
       }
-      t = null;
 
     } else if (OPERATOR_TREE_ROOT_NODE.hasChild(nextChar)) {
       TokenType tokenType = OPERATOR_TREE_ROOT_NODE.match(code);
@@ -117,7 +133,6 @@ public class Lexer {
 
     } else if (WHITESPACE.has(nextChar)) {
       code.skipGreedyBeforeEnd(WHITESPACE);
-      t = null;
 
     } else {
       throw code.constructMalformedSyntaxException("Unknown syntax");
@@ -130,6 +145,7 @@ public class Lexer {
   private Token lexLiteralString () {
     code.skip();
     String value = code.acceptUntil('"');
+    code.skip();
     return constructToken(T_LITERAL_STRING, value);
   }
 
@@ -165,4 +181,25 @@ public class Lexer {
       }
     }
   }
+
+  // Called when next char is '/*!'
+  private Token lexOomlAnnotation () {
+    code.skip();
+    code.skip();
+    code.skip();
+
+    String raw = code.acceptUntil('*').trim();
+    if (!raw.startsWith("@ooml-")) {
+      throw code.constructMalformedSyntaxException("Invalid ooml annotation");
+    }
+    TokenType t = OOML_ANNOTATION.get(raw.substring(6));
+    if (t == null) {
+      throw code.constructMalformedSyntaxException("Invalid ooml annotation");
+    }
+
+    code.skip();
+    code.skip();
+
+    return constructToken(t);
+  }
 }
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java
index 527c5c0437..7b535fc544 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Main.java
@@ -1,18 +1,24 @@
 package org.ooml.oomlc.core.env.gen;
 
+import org.ooml.oomlc.core.env.gen.Compiling.Java.JavaCompiler;
 import org.ooml.oomlc.core.env.gen.Lexing.Code;
 import org.ooml.oomlc.core.env.gen.Lexing.Lexer;
+import org.ooml.oomlc.core.env.gen.Parsing.Parser;
 import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Serialising.JSONSerialiser;
-import org.ooml.oomlc.core.env.gen.Syntax.Statement.Statement;
+import org.ooml.oomlc.core.env.gen.Syntax.Namespace.STNamespace;
 
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
-import java.util.List;
+import java.io.IOException;
+import java.nio.charset.Charset;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+import java.util.Collections;
 
 public class Main {
-  private static List<Statement> parseFile (String filePath) throws FileNotFoundException {
+  private static STNamespace parseFile (String filePath) throws FileNotFoundException {
     File file = new File(filePath);
 
     FileInputStream sourceFile = new FileInputStream(file);
@@ -21,17 +27,18 @@ public class Main {
     Lexer lexer = new Lexer(code);
     Tokens tokens = new Tokens(lexer);
 
-    return Statement.parseStatements(tokens, null);
+    return Parser.parse(tokens);
   }
 
-  public static void main (String[] args) throws FileNotFoundException {
-    if (args.length != 1) {
+  public static void main (String[] args) throws IOException {
+    if (args.length < 1) {
       throw new IllegalArgumentException("Malformed arguments");
     }
 
-    List<Statement> statements = parseFile(args[0]);
+    STNamespace namespace = parseFile(args[0]);
+    Path outputPath = Paths.get(args[1]);
 
-    String serialised = JSONSerialiser.serialise(statements);
-    System.out.println(serialised);
+    String java = JavaCompiler.compileTopLevel(namespace);
+    Files.write(outputPath, Collections.singleton(java), Charset.forName("UTF-8"));
   }
 }
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/Parser.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/Parser.java
new file mode 100644
index 0000000000..d3d7e1c41c
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/Parser.java
@@ -0,0 +1,9 @@
+package org.ooml.oomlc.core.env.gen.Parsing;
+
+import org.ooml.oomlc.core.env.gen.Syntax.Namespace.STNamespace;
+
+public class Parser {
+  public static STNamespace parse (Tokens tokens) {
+    return STNamespace.parseNamespace(tokens, null);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/TokenType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/TokenType.java
index 8bc97f247d..4f921b45d2 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/TokenType.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Parsing/TokenType.java
@@ -16,13 +16,13 @@ public enum TokenType {
   T_PIPE,
   T_QUESTION_AND_COLON,
   T_QUESTION_AND_DOT,
-  T_QUESTION_AND_LEFT_PARENTHESIS,
   T_RIGHT_BRACE,
   T_RIGHT_CHEVRON,
   T_RIGHT_PARENTHESIS,
   T_RIGHT_SQUARE_BRACKET,
   T_SEMICOLON,
 
+  T_KEYWORD_ANY,
   T_KEYWORD_CONST,
   T_KEYWORD_DECLARE,
   T_KEYWORD_EXTENDS,
@@ -31,10 +31,17 @@ public enum TokenType {
   T_KEYWORD_IS,
   T_KEYWORD_KEYOF,
   T_KEYWORD_NAMESPACE,
+  T_KEYWORD_NEVER,
   T_KEYWORD_NEW,
   T_KEYWORD_READONLY,
   T_KEYWORD_TYPE,
+  T_KEYWORD_TYPEOF,
   T_KEYWORD_VAR,
+  T_KEYWORD_VOID,
+
+  T_OOML_ANNOTATION_ABSTRACT,
+  T_OOML_ANNOTATION_INTERFACE,
+  T_OOML_ANNOTATION_STATIC,
 
   T_LITERAL_STRING,
 
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Serialising/IdentifierSerialiser.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Serialising/IdentifierSerialiser.java
deleted file mode 100644
index 1cc525fa5b..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Serialising/IdentifierSerialiser.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Serialising;
-
-import com.google.gson.JsonElement;
-import com.google.gson.JsonPrimitive;
-import com.google.gson.JsonSerializationContext;
-import com.google.gson.JsonSerializer;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
-
-import java.lang.reflect.Type;
-
-public class IdentifierSerialiser implements JsonSerializer<Identifier> {
-  @Override
-  public JsonElement serialize (Identifier src, Type typeOfSrc, JsonSerializationContext context) {
-    return new JsonPrimitive(src.getName());
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Serialising/JSONSerialiser.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Serialising/JSONSerialiser.java
index 6f82fe65e2..d9e165c0d1 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Serialising/JSONSerialiser.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Serialising/JSONSerialiser.java
@@ -2,11 +2,9 @@ package org.ooml.oomlc.core.env.gen.Serialising;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
 
 public class JSONSerialiser {
   private static final Gson gson = new GsonBuilder()
-    .registerTypeAdapter(Identifier.class, new IdentifierSerialiser())
     .setExclusionStrategies(new JSONExclusionStrategy())
     .setPrettyPrinting()
     .create();
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Callable.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Callable.java
deleted file mode 100644
index 995b5ec347..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Callable.java
+++ /dev/null
@@ -1,44 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.Type;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class Callable {
-  private final List<GenericParameter> genericParameters;
-  private final boolean isOptional;
-  private final List<Parameter> parameters;
-  private final Type returnType;
-
-  private Callable (List<GenericParameter> genericParameters, boolean isOptional, List<Parameter> parameters, Type returnType) {
-    this.genericParameters = genericParameters;
-    this.isOptional = isOptional;
-    this.parameters = parameters;
-    this.returnType = returnType;
-  }
-
-  public static Callable parseCallable (Tokens tokens, TokenType returnTypeDelimiter, boolean canBeOptional) {
-    List<GenericParameter> genericParameters = new ArrayList<>(0);
-    if (tokens.peekType() == TokenType.T_LEFT_CHEVRON) {
-      genericParameters = GenericParameter.parseGenericParameters(tokens);
-    }
-
-    boolean optional = canBeOptional && tokens.skipIfNext(TokenType.T_QUESTION_AND_LEFT_PARENTHESIS);
-    if (!optional) {
-      tokens.require(TokenType.T_LEFT_PARENTHESIS);
-    }
-
-    List<Parameter> parameters = Parameter.parseParametersList(tokens);
-
-    tokens.require(TokenType.T_RIGHT_PARENTHESIS);
-
-    tokens.require(returnTypeDelimiter);
-
-    Type returnType = Type.parseType(tokens);
-
-    return new Callable(genericParameters, optional, parameters, returnType);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/GenericParameter.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/GenericParameter.java
deleted file mode 100644
index ca50d2435d..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/GenericParameter.java
+++ /dev/null
@@ -1,53 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.Type;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class GenericParameter {
-  private final Identifier name;
-  private final List<Type> bounds;
-  private final Type defaultValue; // Can be null
-
-  private GenericParameter (Identifier name, List<Type> bounds, Type defaultValue) {
-    this.name = name;
-    this.bounds = bounds;
-    this.defaultValue = defaultValue;
-  }
-
-  public static List<GenericParameter> parseGenericParameters (Tokens tokens) {
-    tokens.require(TokenType.T_LEFT_CHEVRON);
-
-    List<GenericParameter> genericParameters = new ArrayList<>();
-
-    do {
-      if (tokens.peekType() == TokenType.T_RIGHT_CHEVRON) {
-        break;
-      }
-
-      Identifier name = Identifier.requireIdentifier(tokens);
-
-      List<Type> bounds = new ArrayList<>();
-
-      if (tokens.skipIfNext(TokenType.T_KEYWORD_EXTENDS)) {
-        do {
-          bounds.add(Type.parseType(tokens));
-        } while (tokens.skipIfNext(TokenType.T_AMPERSAND));
-      }
-
-      Type defaultValue = null;
-      if (tokens.skipIfNext(TokenType.T_EQUALS)) {
-        defaultValue = Type.parseType(tokens);
-      }
-
-      genericParameters.add(new GenericParameter(name, bounds, defaultValue));
-    } while (tokens.skipIfNext(TokenType.T_COMMA));
-
-    tokens.require(TokenType.T_RIGHT_CHEVRON);
-
-    return genericParameters;
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Identifier.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Identifier.java
deleted file mode 100755
index 7418662943..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Identifier.java
+++ /dev/null
@@ -1,53 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax;
-
-import org.ooml.oomlc.core.env.gen.Parsing.Token;
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Serialising.JSONExc;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-public class Identifier {
-  private final String name;
-  @JSONExc private final Position position;
-
-  public Identifier (Position position, String name) {
-    this.position = position;
-    this.name = name;
-  }
-
-  public static Identifier requireIdentifier (Tokens tokens) {
-    Token value = tokens.require(TokenType.T_IDENTIFIER);
-    return new Identifier(value.getPosition(), value.getValue());
-  }
-
-  public static Identifier acceptIdentifier (Tokens tokens) {
-    Token token = tokens.acceptOptional(TokenType.T_IDENTIFIER);
-    if (token == null) {
-      return null;
-    }
-    return new Identifier(token.getPosition(), token.getValue());
-  }
-
-  public String getName () {
-    return name;
-  }
-
-  @Override
-  public String toString () {
-    return getName();
-  }
-
-  @Override
-  public int hashCode () {
-    return getName().hashCode();
-  }
-
-  @Override
-  public boolean equals (Object o) {
-    return o instanceof Identifier && getName().equals(((Identifier) o).getName());
-  }
-
-  public Position getPosition () {
-    return position;
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceBodyUnit.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceBodyUnit.java
new file mode 100644
index 0000000000..fea00958cc
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceBodyUnit.java
@@ -0,0 +1,10 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit;
+
+import org.ooml.oomlc.core.env.gen.Syntax.STSyntax;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public abstract class STInterfaceBodyUnit extends STSyntax {
+  protected STInterfaceBodyUnit (Position position) {
+    super(position);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceCallSignature.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceCallSignature.java
new file mode 100644
index 0000000000..0c40587471
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceCallSignature.java
@@ -0,0 +1,25 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.STCallable;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STInterfaceCallSignature extends STInterfaceBodyUnit {
+  private final STCallable callable;
+
+  private STInterfaceCallSignature (Position position, STCallable callable) {
+    super(position);
+    this.callable = callable;
+  }
+
+  public static STInterfaceCallSignature parseCallSignature (Tokens tokens) {
+    STCallable callable = STCallable.parseCallable(tokens, TokenType.T_COLON);
+
+    return new STInterfaceCallSignature(callable.getPosition(), callable);
+  }
+
+  public STCallable getCallable () {
+    return callable;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceConstructor.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceConstructor.java
new file mode 100644
index 0000000000..33fa6e260d
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceConstructor.java
@@ -0,0 +1,29 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit;
+
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.STCallable;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_COLON;
+import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_KEYWORD_NEW;
+
+public class STInterfaceConstructor extends STInterfaceBodyUnit {
+  private final STCallable callable;
+
+  private STInterfaceConstructor (Position position, STCallable callable) {
+    super(position);
+    this.callable = callable;
+  }
+
+  public static STInterfaceConstructor parseConstructor (Tokens tokens) {
+    Position position = tokens.require(T_KEYWORD_NEW).getPosition();
+
+    STCallable callable = STCallable.parseCallable(tokens, T_COLON);
+
+    return new STInterfaceConstructor(position, callable);
+  }
+
+  public STCallable getCallable () {
+    return callable;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceIndexSignature.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceIndexSignature.java
new file mode 100644
index 0000000000..6645ac9974
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceIndexSignature.java
@@ -0,0 +1,60 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STInterfaceIndexSignature extends STInterfaceBodyUnit {
+  private final boolean isReadOnly;
+  private final String name;
+  private final STType type;
+  private final STType returnType;
+
+  private STInterfaceIndexSignature (Position position, boolean isReadOnly, String name, STType type, STType returnType) {
+    super(position);
+    this.isReadOnly = isReadOnly;
+    this.name = name;
+    this.type = type;
+    this.returnType = returnType;
+  }
+
+  public static STInterfaceIndexSignature parseIndexSignature (Tokens tokens) {
+    Position position = tokens.peek().getPosition();
+
+    boolean isReadOnly = tokens.skipIfNext(TokenType.T_KEYWORD_READONLY);
+
+    tokens.require(TokenType.T_LEFT_SQUARE_BRACKET);
+
+    String name = STIdentifier.requireIdentifier(tokens);
+
+    tokens.require(TokenType.T_COLON);
+
+    STType type = STType.parseType(tokens);
+
+    tokens.require(TokenType.T_RIGHT_SQUARE_BRACKET);
+
+    tokens.require(TokenType.T_COLON);
+
+    STType returnType = STType.parseType(tokens);
+
+    return new STInterfaceIndexSignature(position, isReadOnly, name, type, returnType);
+  }
+
+  public boolean isReadOnly () {
+    return isReadOnly;
+  }
+
+  public String getName () {
+    return name;
+  }
+
+  public STType getType () {
+    return type;
+  }
+
+  public STType getReturnType () {
+    return returnType;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceMethod.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceMethod.java
new file mode 100644
index 0000000000..578734a107
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceMethod.java
@@ -0,0 +1,37 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit;
+
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.STCallable;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_COLON;
+
+public class STInterfaceMethod extends STInterfaceBodyUnit {
+  private final String name;
+  private final STCallable callable;
+
+  private STInterfaceMethod (Position position, String name, STCallable callable) {
+    super(position);
+    this.name = name;
+    this.callable = callable;
+  }
+
+  public static STInterfaceMethod parseMethod (Tokens tokens) {
+    Position position = tokens.peek().getPosition();
+
+    String name = STIdentifier.requireIdentifier(tokens, true);
+
+    STCallable callable = STCallable.parseCallable(tokens, T_COLON);
+
+    return new STInterfaceMethod(position, name, callable);
+  }
+
+  public String getName () {
+    return name;
+  }
+
+  public STCallable getCallable () {
+    return callable;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceProperty.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceProperty.java
new file mode 100644
index 0000000000..74b3eeca42
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/BodyUnit/STInterfaceProperty.java
@@ -0,0 +1,55 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STInterfaceProperty extends STInterfaceBodyUnit {
+  private final String name;
+  private final STType type;
+  private final boolean isReadOnly;
+  private final boolean isOptional;
+
+  private STInterfaceProperty (Position position, String name, STType type, boolean isReadOnly, boolean isOptional) {
+    super(position);
+    this.name = name;
+    this.type = type;
+    this.isReadOnly = isReadOnly;
+    this.isOptional = isOptional;
+  }
+
+  public static STInterfaceProperty parseProperty (Tokens tokens) {
+    Position position = tokens.peek().getPosition();
+
+    boolean isReadOnly = tokens.skipIfNext(TokenType.T_KEYWORD_READONLY);
+
+    String name = STIdentifier.requireIdentifier(tokens, true);
+
+    boolean isOptional = tokens.skipIfNext(TokenType.T_QUESTION_AND_COLON);
+    if (!isOptional) {
+      tokens.require(TokenType.T_COLON);
+    }
+
+    STType type = STType.parseType(tokens);
+
+    return new STInterfaceProperty(position, name, type, isReadOnly, isOptional);
+  }
+
+  public String getName () {
+    return name;
+  }
+
+  public STType getType () {
+    return type;
+  }
+
+  public boolean isReadOnly () {
+    return isReadOnly;
+  }
+
+  public boolean isOptional () {
+    return isOptional;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/Interface.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/Interface.java
deleted file mode 100644
index 6ee998c6b4..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/Interface.java
+++ /dev/null
@@ -1,92 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Interface;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Serialising.JSONExc;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.*;
-
-public class Interface {
-  @JSONExc private final Position position;
-  private final List<InterfaceCallSignature> callSignatures;
-  private final List<InterfaceIndexSignature> indexSignatures;
-  private final List<InterfaceConstructor> constructors;
-  private final List<InterfaceProperty> properties;
-  private final List<InterfaceMethod> methods;
-
-  private Interface (Position position, List<InterfaceCallSignature> callSignatures, List<InterfaceIndexSignature> indexSignatures, List<InterfaceConstructor> constructors, List<InterfaceProperty> properties, List<InterfaceMethod> methods) {
-    this.position = position;
-    this.callSignatures = callSignatures;
-    this.indexSignatures = indexSignatures;
-    this.constructors = constructors;
-    this.properties = properties;
-    this.methods = methods;
-  }
-
-  public static Interface parseInterface (Tokens tokens) {
-    Position position = tokens.require(T_LEFT_BRACE).getPosition();
-
-    List<InterfaceCallSignature> callSignatures = new ArrayList<>();
-    List<InterfaceIndexSignature> indexSignatures = new ArrayList<>();
-    List<InterfaceConstructor> constructors = new ArrayList<>();
-    List<InterfaceProperty> properties = new ArrayList<>();
-    List<InterfaceMethod> methods = new ArrayList<>();
-
-    TokenType nextTokenType;
-    while ((nextTokenType = tokens.peekType()) != T_RIGHT_BRACE) {
-      switch (nextTokenType) {
-      case T_KEYWORD_READONLY:
-        if (tokens.peekType(2) == T_LEFT_SQUARE_BRACKET) {
-          indexSignatures.add(InterfaceIndexSignature.parseIndexSignature(tokens));
-        } else {
-          properties.add(InterfaceProperty.parseProperty(tokens));
-        }
-        break;
-
-      case T_LEFT_CHEVRON:
-        callSignatures.add(InterfaceCallSignature.parseCallSignature(tokens));
-        break;
-
-      case T_IDENTIFIER:
-      case T_LITERAL_STRING:
-        if (tokens.peekType(2) == T_LEFT_PARENTHESIS ||
-            tokens.peekType(2) == T_QUESTION_AND_LEFT_PARENTHESIS ||
-            tokens.peekType(2) == T_LEFT_CHEVRON) {
-          methods.add(InterfaceMethod.parseMethod(tokens));
-        } else {
-          properties.add(InterfaceProperty.parseProperty(tokens));
-        }
-        break;
-
-      case T_KEYWORD_NEW:
-        constructors.add(InterfaceConstructor.parseConstructor(tokens));
-        break;
-
-      case T_LEFT_PARENTHESIS:
-        callSignatures.add(InterfaceCallSignature.parseCallSignature(tokens));
-        break;
-
-      case T_LEFT_SQUARE_BRACKET:
-        indexSignatures.add(InterfaceIndexSignature.parseIndexSignature(tokens));
-        break;
-
-      default:
-        throw tokens.constructMalformedSyntaxException("Expected an interface body unit, got " + nextTokenType);
-      }
-
-      tokens.require(T_SEMICOLON);
-    }
-
-    tokens.require(T_RIGHT_BRACE);
-
-    return new Interface(position, callSignatures, indexSignatures, constructors, properties, methods);
-  }
-
-  public Position getPosition () {
-    return position;
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceCallSignature.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceCallSignature.java
deleted file mode 100644
index 3a1e5a6fd2..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceCallSignature.java
+++ /dev/null
@@ -1,19 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Interface;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Callable;
-
-public class InterfaceCallSignature {
-  private final Callable callable;
-
-  private InterfaceCallSignature (Callable callable) {
-    this.callable = callable;
-  }
-
-  public static InterfaceCallSignature parseCallSignature (Tokens tokens) {
-    Callable callable = Callable.parseCallable(tokens, TokenType.T_COLON, false);
-
-    return new InterfaceCallSignature(callable);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceConstructor.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceConstructor.java
deleted file mode 100644
index 2ac0cdc206..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceConstructor.java
+++ /dev/null
@@ -1,23 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Interface;
-
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Callable;
-
-import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_COLON;
-import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_KEYWORD_NEW;
-
-public class InterfaceConstructor {
-  private final Callable callable;
-
-  private InterfaceConstructor (Callable callable) {
-    this.callable = callable;
-  }
-
-  public static InterfaceConstructor parseConstructor (Tokens tokens) {
-    tokens.require(T_KEYWORD_NEW);
-
-    Callable callable = Callable.parseCallable(tokens, T_COLON, false);
-
-    return new InterfaceConstructor(callable);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceIndexSignature.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceIndexSignature.java
deleted file mode 100644
index 12015212f8..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceIndexSignature.java
+++ /dev/null
@@ -1,40 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Interface;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.Type;
-
-public class InterfaceIndexSignature {
-  private final boolean isReadOnly;
-  private final Identifier name;
-  private final Type type;
-  private final Type returnType;
-
-  private InterfaceIndexSignature (boolean isReadOnly, Identifier name, Type type, Type returnType) {
-    this.isReadOnly = isReadOnly;
-    this.name = name;
-    this.type = type;
-    this.returnType = returnType;
-  }
-
-  public static InterfaceIndexSignature parseIndexSignature (Tokens tokens) {
-    boolean isReadOnly = tokens.skipIfNext(TokenType.T_KEYWORD_READONLY);
-
-    tokens.require(TokenType.T_LEFT_SQUARE_BRACKET);
-
-    Identifier name = Identifier.requireIdentifier(tokens);
-
-    tokens.require(TokenType.T_COLON);
-
-    Type type = Type.parseType(tokens);
-
-    tokens.require(TokenType.T_RIGHT_SQUARE_BRACKET);
-
-    tokens.require(TokenType.T_COLON);
-
-    Type returnType = Type.parseType(tokens);
-
-    return new InterfaceIndexSignature(isReadOnly, name, type, returnType);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceMethod.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceMethod.java
deleted file mode 100644
index 0bb3351958..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceMethod.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Interface;
-
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Callable;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
-
-import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_COLON;
-
-public class InterfaceMethod {
-  private final Identifier name;
-  private final Callable callable;
-
-  private InterfaceMethod (Identifier name, Callable callable) {
-    this.name = name;
-    this.callable = callable;
-  }
-
-  public static InterfaceMethod parseMethod (Tokens tokens) {
-    Identifier name = Identifier.requireIdentifier(tokens);
-
-    Callable callable = Callable.parseCallable(tokens, T_COLON, true);
-
-    return new InterfaceMethod(name, callable);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceProperty.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceProperty.java
deleted file mode 100644
index b0949454ac..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/InterfaceProperty.java
+++ /dev/null
@@ -1,50 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Interface;
-
-import org.ooml.oomlc.core.env.gen.Parsing.Token;
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.Type;
-
-public class InterfaceProperty {
-  private final Identifier name;
-  private final Type type;
-  private final boolean isReadOnly;
-  private final boolean isOptional;
-
-  private InterfaceProperty (Identifier name, Type type, boolean isReadOnly, boolean isOptional) {
-    this.name = name;
-    this.type = type;
-    this.isReadOnly = isReadOnly;
-    this.isOptional = isOptional;
-  }
-
-  public static InterfaceProperty parseProperty (Tokens tokens) {
-    boolean isReadOnly = tokens.skipIfNext(TokenType.T_KEYWORD_READONLY);
-
-    Identifier name;
-
-    switch (tokens.peekType()) {
-    case T_IDENTIFIER:
-      name = Identifier.requireIdentifier(tokens);
-      break;
-
-    case T_LITERAL_STRING:
-      Token strtok = tokens.accept();
-      name = new Identifier(strtok.getPosition(), strtok.getValue());
-      break;
-
-    default:
-      throw tokens.constructRequiredSyntaxNotFoundException("Expected interface property name");
-    }
-
-    boolean isOptional = tokens.skipIfNext(TokenType.T_QUESTION_AND_COLON);
-    if (!isOptional) {
-      tokens.require(TokenType.T_COLON);
-    }
-
-    Type type = Type.parseType(tokens);
-
-    return new InterfaceProperty(name, type, isReadOnly, isOptional);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/STInterfaceBody.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/STInterfaceBody.java
new file mode 100644
index 0000000000..23d398c052
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Interface/STInterfaceBody.java
@@ -0,0 +1,139 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Interface;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit.STInterfaceCallSignature;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit.STInterfaceConstructor;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit.STInterfaceIndexSignature;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit.STInterfaceMethod;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.BodyUnit.STInterfaceProperty;
+import org.ooml.oomlc.core.env.gen.Syntax.STAnnotation;
+import org.ooml.oomlc.core.env.gen.Syntax.STSyntax;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.*;
+
+public class STInterfaceBody extends STSyntax {
+  private final List<STInterfaceCallSignature> callSignatures;
+  private final STInterfaceIndexSignature indexSignature; // Can be null
+  private final List<STInterfaceConstructor> constructors;
+  private final Map<String, STInterfaceProperty> properties;
+  private final List<STInterfaceMethod> methods;
+
+  private STInterfaceBody (Position position, List<STInterfaceCallSignature> callSignatures, STInterfaceIndexSignature indexSignature, List<STInterfaceConstructor> constructors, Map<String, STInterfaceProperty> properties, List<STInterfaceMethod> methods) {
+    super(position);
+    this.callSignatures = callSignatures;
+    this.indexSignature = indexSignature;
+    this.constructors = constructors;
+    this.properties = properties;
+    this.methods = methods;
+  }
+
+  public static STInterfaceBody parseInterfaceBody (Tokens tokens) {
+    Collection<STAnnotation> interfaceAnnotations = STAnnotation.acceptAnnotations(tokens);
+
+    Position position = tokens.require(T_LEFT_BRACE).getPosition();
+
+    List<STInterfaceCallSignature> callSignatures = new ArrayList<>();
+    STInterfaceIndexSignature indexSignature = null;
+    List<STInterfaceConstructor> constructors = new ArrayList<>();
+    Map<String, STInterfaceProperty> properties = new HashMap<>();
+    List<STInterfaceMethod> methods = new ArrayList<>();
+
+    TokenType nextTokenType;
+    while ((nextTokenType = tokens.peekType()) != T_RIGHT_BRACE) {
+      STInterfaceProperty property = null;
+
+      Collection<STAnnotation> bodyUnitAnnotations = STAnnotation.acceptAnnotations(tokens);
+
+      Collection destination = null;
+      STSyntax unit;
+
+      switch (nextTokenType) {
+      case T_KEYWORD_READONLY:
+        if (tokens.peekType(2) == T_LEFT_SQUARE_BRACKET) {
+          unit = indexSignature = STInterfaceIndexSignature.parseIndexSignature(tokens);
+        } else {
+          unit = property = STInterfaceProperty.parseProperty(tokens);
+        }
+        break;
+
+      case T_LEFT_CHEVRON:
+        destination = callSignatures;
+        unit = STInterfaceCallSignature.parseCallSignature(tokens);
+        break;
+
+      case T_KEYWORD_NEW:
+        destination = constructors;
+        unit = STInterfaceConstructor.parseConstructor(tokens);
+        break;
+
+      case T_LEFT_PARENTHESIS:
+        destination = callSignatures;
+        unit = STInterfaceCallSignature.parseCallSignature(tokens);
+        break;
+
+      case T_LEFT_SQUARE_BRACKET:
+        unit = indexSignature = STInterfaceIndexSignature.parseIndexSignature(tokens);
+        break;
+
+      default:
+        // Both branches will throw exception if not valid
+        if (tokens.peekType(2) == T_LEFT_PARENTHESIS ||
+            tokens.peekType(2) == T_LEFT_CHEVRON) {
+          destination = methods;
+          unit = STInterfaceMethod.parseMethod(tokens);
+
+        } else {
+          unit = property = STInterfaceProperty.parseProperty(tokens);
+        }
+      }
+
+      tokens.require(T_SEMICOLON);
+
+      STSyntax.addAllAnnotations(unit, bodyUnitAnnotations);
+
+      if (destination != null) {
+        destination.add(unit);
+
+      } else if (property != null) {
+        if (properties.containsKey(property.getName())) {
+          throw tokens.constructMalformedSyntaxException("Duplicate interface property");
+        }
+        properties.put(property.getName(), property);
+      }
+    }
+
+    tokens.require(T_RIGHT_BRACE);
+
+    return STSyntax.addAllAnnotations(
+      new STInterfaceBody(position, callSignatures, indexSignature, constructors, properties, methods),
+      interfaceAnnotations);
+  }
+
+  public List<STInterfaceCallSignature> getCallSignatures () {
+    return callSignatures;
+  }
+
+  public STInterfaceIndexSignature getIndexSignature () {
+    return indexSignature;
+  }
+
+  public List<STInterfaceConstructor> getConstructors () {
+    return constructors;
+  }
+
+  public Map<String, STInterfaceProperty> getProperties () {
+    return properties;
+  }
+
+  public List<STInterfaceMethod> getMethods () {
+    return methods;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Namespace/STNamespace.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Namespace/STNamespace.java
new file mode 100644
index 0000000000..6f31168d4d
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Namespace/STNamespace.java
@@ -0,0 +1,122 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Namespace;
+
+import org.ooml.oomlc.core.env.gen.Exception.InternalStateError;
+import org.ooml.oomlc.core.env.gen.Exception.MalformedSyntaxException;
+import org.ooml.oomlc.core.env.gen.Exception.UnexpectedEndOfCodeException;
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Syntax.STCallableOverloads;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STFunctionStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STInterfaceStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STNamespaceStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STTypeAliasStatement;
+import org.ooml.oomlc.core.env.gen.Syntax.Statement.STVariableStatement;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import static java.lang.String.format;
+
+public class STNamespace {
+  private final Map<String, STType> variables;
+  private final Map<String, STCallableOverloads> functions;
+  private final Map<String, STType> typeAliases;
+  private final Map<String, STInterfaceStatement> interfaces;
+  private final Map<String, STNamespace> nestedNamespaces;
+
+  private STNamespace (Map<String, STType> variables, Map<String, STCallableOverloads> functions, Map<String, STType> typeAliases, Map<String, STInterfaceStatement> interfaces, Map<String, STNamespace> nestedNamespaces) {
+    this.variables = variables;
+    this.functions = functions;
+    this.typeAliases = typeAliases;
+    this.interfaces = interfaces;
+    this.nestedNamespaces = nestedNamespaces;
+  }
+
+  public static STNamespace parseNamespace (Tokens tokens, TokenType breakOn) {
+    Map<String, STType> variables = new HashMap<>();
+    Map<String, STCallableOverloads> functions = new HashMap<>();
+    Map<String, STInterfaceStatement> interfaces = new HashMap<>();
+    Map<String, STType> typeAliases = new HashMap<>();
+    Map<String, STNamespace> nestedNamespaces = new HashMap<>();
+
+    while (true) {
+      try {
+        if (tokens.peekType() == breakOn) {
+          break;
+        }
+      } catch (UnexpectedEndOfCodeException ueoce) {
+        if (breakOn == null) {
+          break;
+        }
+        throw ueoce;
+      }
+
+      tokens.skipIfNext(TokenType.T_KEYWORD_DECLARE);
+
+      STStatement statement = STStatement.parseStatement(tokens);
+      String name = statement.getName();
+      Position position = statement.getPosition();
+
+      tokens.skipIfNext(TokenType.T_SEMICOLON);
+
+      if (statement instanceof STFunctionStatement) {
+        if (!functions.containsKey(name)) {
+          functions.put(name, new STCallableOverloads());
+        }
+        functions.get(name).addSignature(((STFunctionStatement) statement).getCallable());
+
+      } else if (statement instanceof STVariableStatement) {
+        if (variables.containsKey(name)) {
+          throw new MalformedSyntaxException(format("Duplicate variable \"%s\"", name), position);
+        }
+        variables.put(name, ((STVariableStatement) statement).getType());
+
+      } else if (statement instanceof STInterfaceStatement) {
+        if (interfaces.containsKey(name)) {
+          throw new MalformedSyntaxException(format("Duplicate interface \"%s\"", name), position);
+        }
+        interfaces.put(name, (STInterfaceStatement) statement);
+
+      } else if (statement instanceof STTypeAliasStatement) {
+        if (typeAliases.containsKey(name)) {
+          throw new MalformedSyntaxException(format("Duplicate type alias \"%s\"", name), position);
+        }
+        typeAliases.put(name, ((STTypeAliasStatement) statement).getType());
+
+      } else if (statement instanceof STNamespaceStatement) {
+        if (nestedNamespaces.containsKey(name)) {
+          throw new MalformedSyntaxException(format("Duplicate namespace \"%s\"", name), position);
+        }
+        nestedNamespaces.put(name, ((STNamespaceStatement) statement).getNamespace());
+
+      } else {
+        throw new InternalStateError("Unrecognised statement type to add to namespace");
+      }
+    }
+
+    return new STNamespace(variables, functions, typeAliases, interfaces, nestedNamespaces);
+  }
+
+  public Map<String, STType> getVariables () {
+    return variables;
+  }
+
+  public Map<String, STCallableOverloads> getFunctions () {
+    return functions;
+  }
+
+  public Map<String, STType> getTypeAliases () {
+    return typeAliases;
+  }
+
+  public Map<String, STInterfaceStatement> getInterfaces () {
+    return interfaces;
+  }
+
+  public Map<String, STNamespace> getNestedNamespaces () {
+    return nestedNamespaces;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Parameter.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Parameter.java
deleted file mode 100644
index 9c908b28c4..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Parameter.java
+++ /dev/null
@@ -1,62 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax;
-
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.Type;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.*;
-
-public class Parameter {
-  private final Identifier name;
-  private final Type type;
-  private final boolean optional;
-  private final boolean variableLength;
-  private final String defaultValue; // Can be null
-
-  private Parameter (Identifier name, Type type, boolean optional, boolean variableLength, String defaultValue) {
-    this.name = name;
-    this.type = type;
-    this.optional = optional;
-    this.variableLength = variableLength;
-    this.defaultValue = defaultValue;
-  }
-
-  private static Parameter parseParameter (Tokens tokens) {
-    boolean variableLength = tokens.skipIfNext(T_ELLIPSIS);
-    Identifier name = Identifier.requireIdentifier(tokens);
-
-    boolean optional = tokens.skipIfNext(T_QUESTION_AND_COLON);
-    if (!optional) {
-      tokens.require(T_COLON);
-    }
-
-    Type type = Type.parseType(tokens);
-
-    String defaultValue = null;
-    if (tokens.skipIfNext(T_EQUALS)) {
-      defaultValue = tokens.require(T_LITERAL_STRING).getValue();
-    }
-
-    return new Parameter(name, type, optional, variableLength, defaultValue);
-  }
-
-  public static List<Parameter> parseParametersList (Tokens tokens) {
-    List<Parameter> parameters = new ArrayList<>();
-
-    // Don't consume parenthesis as opening may be "?("
-
-    do {
-      // Allow parameters to end with comma
-      // No arguments is valid
-      if (tokens.peekType() == T_RIGHT_PARENTHESIS) {
-        break;
-      }
-
-      parameters.add(parseParameter(tokens));
-    } while (tokens.skipIfNext(T_COMMA));
-
-    return parameters;
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STAnnotation.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STAnnotation.java
new file mode 100644
index 0000000000..ed099bb9ab
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STAnnotation.java
@@ -0,0 +1,34 @@
+package org.ooml.oomlc.core.env.gen.Syntax;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+public enum STAnnotation {
+  ABSTRACT, INTERFACE, STATIC;
+
+  public static final Map<TokenType, STAnnotation> ANNOTATION_TOKEN_MAP = _createAnnotationTokenMap();
+
+  private static Map<TokenType, STAnnotation> _createAnnotationTokenMap () {
+    Map<TokenType, STAnnotation> map = new HashMap<>();
+
+    map.put(TokenType.T_OOML_ANNOTATION_ABSTRACT, ABSTRACT);
+    map.put(TokenType.T_OOML_ANNOTATION_INTERFACE, INTERFACE);
+    map.put(TokenType.T_OOML_ANNOTATION_STATIC, STATIC);
+
+    return map;
+  }
+
+  public static Collection<STAnnotation> acceptAnnotations (Tokens tokens) {
+    List<STAnnotation> annotations = new ArrayList<>();
+    while (ANNOTATION_TOKEN_MAP.containsKey(tokens.peekType())) {
+      annotations.add(ANNOTATION_TOKEN_MAP.get(tokens.accept().getType()));
+    }
+    return annotations;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallable.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallable.java
new file mode 100644
index 0000000000..2c9804c36e
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallable.java
@@ -0,0 +1,51 @@
+package org.ooml.oomlc.core.env.gen.Syntax;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class STCallable extends STSyntax {
+  private final List<STGenericParameter> genericParameters;
+  private final List<STCallableParameter> parameters;
+  private final STType returnType;
+
+  private STCallable (Position position, List<STGenericParameter> genericParameters, List<STCallableParameter> parameters, STType returnType) {
+    super(position);
+    this.genericParameters = genericParameters;
+    this.parameters = parameters;
+    this.returnType = returnType;
+  }
+
+  public static STCallable parseCallable (Tokens tokens, TokenType returnTypeDelimiter) {
+    Position position = tokens.peek().getPosition();
+
+    List<STGenericParameter> genericParameters = new ArrayList<>(0);
+    if (tokens.peekType() == TokenType.T_LEFT_CHEVRON) {
+      genericParameters = STGenericParameter.parseGenericParameters(tokens);
+    }
+
+    List<STCallableParameter> parameters = STCallableParameter.parseParametersList(tokens);
+
+    tokens.require(returnTypeDelimiter);
+
+    STType returnType = STType.parseType(tokens);
+
+    return new STCallable(position, genericParameters, parameters, returnType);
+  }
+
+  public List<STGenericParameter> getGenericParameters () {
+    return genericParameters;
+  }
+
+  public List<STCallableParameter> getParameters () {
+    return parameters;
+  }
+
+  public STType getReturnType () {
+    return returnType;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallableOverloads.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallableOverloads.java
new file mode 100644
index 0000000000..42036bfb2e
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallableOverloads.java
@@ -0,0 +1,16 @@
+package org.ooml.oomlc.core.env.gen.Syntax;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class STCallableOverloads {
+  private final List<STCallable> signatures = new ArrayList<>();
+
+  public void addSignature (STCallable st_callable) {
+    signatures.add(st_callable);
+  }
+
+  public List<STCallable> getSignatures () {
+    return signatures;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallableParameter.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallableParameter.java
new file mode 100644
index 0000000000..6e74a0199e
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STCallableParameter.java
@@ -0,0 +1,77 @@
+package org.ooml.oomlc.core.env.gen.Syntax;
+
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.*;
+
+public class STCallableParameter extends STSyntax {
+  private final String name;
+  private final STType type;
+  private final boolean optional;
+  private final boolean variableLength;
+
+  public STCallableParameter (Position position, String name, STType type, boolean optional, boolean variableLength) {
+    super(position);
+    this.name = name;
+    this.type = type;
+    this.optional = optional;
+    this.variableLength = variableLength;
+  }
+
+  private static STCallableParameter parseParameter (Tokens tokens) {
+    Position position = tokens.peek().getPosition();
+
+    boolean variableLength = tokens.skipIfNext(T_ELLIPSIS);
+    String name = STIdentifier.requireIdentifier(tokens);
+
+    boolean optional = tokens.skipIfNext(T_QUESTION_AND_COLON);
+    if (!optional) {
+      tokens.require(T_COLON);
+    }
+
+    STType type = STType.parseType(tokens);
+
+    return new STCallableParameter(position, name, type, optional, variableLength);
+  }
+
+  public static List<STCallableParameter> parseParametersList (Tokens tokens) {
+    List<STCallableParameter> parameters = new ArrayList<>();
+
+    tokens.require(T_LEFT_PARENTHESIS);
+
+    do {
+      // Allow parameters to end with comma
+      // No arguments is valid
+      if (tokens.peekType() == T_RIGHT_PARENTHESIS) {
+        break;
+      }
+
+      parameters.add(parseParameter(tokens));
+    } while (tokens.skipIfNext(T_COMMA));
+
+    tokens.require(T_RIGHT_PARENTHESIS);
+
+    return parameters;
+  }
+
+  public String getName () {
+    return name;
+  }
+
+  public STType getType () {
+    return type;
+  }
+
+  public boolean isOptional () {
+    return optional;
+  }
+
+  public boolean isVariableLength () {
+    return variableLength;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STGenericParameter.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STGenericParameter.java
new file mode 100644
index 0000000000..9aa40750bb
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STGenericParameter.java
@@ -0,0 +1,67 @@
+package org.ooml.oomlc.core.env.gen.Syntax;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class STGenericParameter extends STSyntax {
+  private final String name;
+  private final List<STType> bounds;
+  private final STType defaultValue; // Can be null
+
+  private STGenericParameter (Position position, String name, List<STType> bounds, STType defaultValue) {
+    super(position);
+    this.name = name;
+    this.bounds = bounds;
+    this.defaultValue = defaultValue;
+  }
+
+  public static List<STGenericParameter> parseGenericParameters (Tokens tokens) {
+    Position position = tokens.require(TokenType.T_LEFT_CHEVRON).getPosition();
+
+    List<STGenericParameter> genericParameters = new ArrayList<>();
+
+    do {
+      if (tokens.peekType() == TokenType.T_RIGHT_CHEVRON) {
+        break;
+      }
+
+      String name = STIdentifier.requireIdentifier(tokens);
+
+      List<STType> bounds = new ArrayList<>();
+
+      if (tokens.skipIfNext(TokenType.T_KEYWORD_EXTENDS)) {
+        do {
+          bounds.add(STType.parseType(tokens));
+        } while (tokens.skipIfNext(TokenType.T_AMPERSAND));
+      }
+
+      STType defaultValue = null;
+      if (tokens.skipIfNext(TokenType.T_EQUALS)) {
+        defaultValue = STType.parseType(tokens);
+      }
+
+      genericParameters.add(new STGenericParameter(position, name, bounds, defaultValue));
+    } while (tokens.skipIfNext(TokenType.T_COMMA));
+
+    tokens.require(TokenType.T_RIGHT_CHEVRON);
+
+    return genericParameters;
+  }
+
+  public String getName () {
+    return name;
+  }
+
+  public List<STType> getBounds () {
+    return bounds;
+  }
+
+  public STType getDefaultValue () {
+    return defaultValue;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STIdentifier.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STIdentifier.java
new file mode 100755
index 0000000000..40cc186ddf
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STIdentifier.java
@@ -0,0 +1,67 @@
+package org.ooml.oomlc.core.env.gen.Syntax;
+
+import org.ooml.oomlc.core.env.gen.Exception.RequiredSyntaxNotFoundException;
+import org.ooml.oomlc.core.env.gen.Parsing.Token;
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.*;
+
+public class STIdentifier {
+  private static final Map<TokenType, String> RESERVED_KEYWORD_AS_IDENTIFIER = _createReservedKeywordAsIdentifierMap();
+
+  private STIdentifier () {
+  }
+
+  private static Map<TokenType, String> _createReservedKeywordAsIdentifierMap () {
+    Map<TokenType, String> map = new HashMap<>();
+
+    map.put(T_KEYWORD_TYPE, "type");
+    map.put(T_KEYWORD_IS, "is");
+    map.put(T_KEYWORD_EXTENDS, "extends");
+    map.put(T_KEYWORD_DECLARE, "declare");
+    map.put(T_KEYWORD_READONLY, "readonly");
+    map.put(T_KEYWORD_NAMESPACE, "namespace");
+
+    return map;
+  }
+
+  public static String requireReference (Tokens tokens) {
+    StringBuilder value = new StringBuilder();
+
+    do {
+      value
+        .append(requireIdentifier(tokens))
+        .append('.');
+    } while (tokens.skipIfNext(T_DOT));
+
+    return value.deleteCharAt(value.length() - 1).toString();
+  }
+
+  public static String requireIdentifier (Tokens tokens, boolean canBeString) {
+    Token nextToken = tokens.accept();
+    String value;
+
+    if (RESERVED_KEYWORD_AS_IDENTIFIER.containsKey(nextToken.getType())) {
+      value = RESERVED_KEYWORD_AS_IDENTIFIER.get(nextToken.getType());
+
+    } else if (nextToken.getType() == T_IDENTIFIER) {
+      value = nextToken.getValue();
+
+    } else if (nextToken.getType() == T_LITERAL_STRING && canBeString) {
+      value = nextToken.getValue();
+
+    } else {
+      throw new RequiredSyntaxNotFoundException("Required identifier", nextToken.getPosition());
+    }
+
+    return value;
+  }
+
+  public static String requireIdentifier (Tokens tokens) {
+    return requireIdentifier(tokens, false);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STSyntax.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STSyntax.java
new file mode 100644
index 0000000000..5410634382
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/STSyntax.java
@@ -0,0 +1,31 @@
+package org.ooml.oomlc.core.env.gen.Syntax;
+
+import org.ooml.oomlc.core.env.gen.Serialising.JSONExc;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Set;
+
+public abstract class STSyntax {
+  @JSONExc
+  private final Position position;
+  private final Set<STAnnotation> annotations = new HashSet<>(0);
+
+  public STSyntax (Position position) {
+    this.position = position;
+  }
+
+  public final Position getPosition () {
+    return position;
+  }
+
+  protected static <K extends STSyntax> K addAllAnnotations (K syntax, Collection<STAnnotation> annotation) {
+    ((STSyntax) syntax).annotations.addAll(annotation);
+    return syntax;
+  }
+
+  public final boolean hasAnnotation (STAnnotation annotation) {
+    return annotations.contains(annotation);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/DeclarableStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/DeclarableStatement.java
deleted file mode 100644
index a9cdc8430c..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/DeclarableStatement.java
+++ /dev/null
@@ -1,15 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Statement;
-
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-
-public interface DeclarableStatement {
-  static DeclarableStatement parseDeclarableStatement (Tokens tokens) {
-    Statement statement = Statement.parseStatement(tokens);
-
-    if (!(statement instanceof DeclarableStatement)) {
-      throw tokens.constructRequiredSyntaxNotFoundException("Statement is not declarable");
-    }
-
-    return (DeclarableStatement) statement;
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/DeclarationStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/DeclarationStatement.java
deleted file mode 100644
index 87a3dafe96..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/DeclarationStatement.java
+++ /dev/null
@@ -1,21 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Statement;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-public class DeclarationStatement extends Statement {
-  private final DeclarableStatement declarable;
-
-  private DeclarationStatement (Position position, DeclarableStatement declarable) {
-    super(position);
-    this.declarable = declarable;
-  }
-
-  public static DeclarationStatement parseDeclarationStatement(Tokens tokens) {
-    Position position = tokens.require(TokenType.T_KEYWORD_DECLARE).getPosition();
-    DeclarableStatement declarableStatement = DeclarableStatement.parseDeclarableStatement(tokens);
-
-    return new DeclarationStatement(position, declarableStatement);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/FunctionStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/FunctionStatement.java
deleted file mode 100644
index 356c2f61a8..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/FunctionStatement.java
+++ /dev/null
@@ -1,28 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Statement;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Callable;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-public class FunctionStatement extends Statement implements DeclarableStatement {
-  private final Identifier name;
-  private final Callable callable;
-
-  private FunctionStatement (Position position, Identifier name, Callable callable) {
-    super(position);
-    this.name = name;
-    this.callable = callable;
-  }
-
-  public static FunctionStatement parseFunctionStatement (Tokens tokens) {
-    Position position = tokens.require(TokenType.T_KEYWORD_FUNCTION).getPosition();
-
-    Identifier name = Identifier.requireIdentifier(tokens);
-
-    Callable callable = Callable.parseCallable(tokens, TokenType.T_COLON, false);
-
-    return new FunctionStatement(position, name, callable);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/InterfaceStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/InterfaceStatement.java
deleted file mode 100644
index 96c6097ca6..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/InterfaceStatement.java
+++ /dev/null
@@ -1,54 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Statement;
-
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.GenericParameter;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
-import org.ooml.oomlc.core.env.gen.Syntax.Interface.Interface;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.ReferenceType;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_COMMA;
-import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_KEYWORD_EXTENDS;
-import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_KEYWORD_INTERFACE;
-import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_LEFT_CHEVRON;
-
-public class InterfaceStatement extends Statement {
-  private final Identifier name;
-  private final List<GenericParameter> genericParameters;
-  private final List<ReferenceType> parents;
-  private final Interface intface;
-
-  private InterfaceStatement (Position position, Identifier name, List<GenericParameter> genericParameters, List<ReferenceType> parents, Interface intface) {
-    super(position);
-    this.name = name;
-    this.genericParameters = genericParameters;
-    this.parents = parents;
-    this.intface = intface;
-  }
-
-  public static InterfaceStatement parseInterfaceStatement (Tokens tokens) {
-    Position position = tokens.require(T_KEYWORD_INTERFACE).getPosition();
-
-    Identifier name = Identifier.requireIdentifier(tokens);
-
-    List<GenericParameter> genericParameters = new ArrayList<>(0);
-    if (tokens.peekType() == T_LEFT_CHEVRON) {
-      genericParameters = GenericParameter.parseGenericParameters(tokens);
-    }
-
-    List<ReferenceType> parents = new ArrayList<>();
-
-    if (tokens.skipIfNext(T_KEYWORD_EXTENDS)) {
-      do {
-        parents.add(ReferenceType.parseReferenceType(tokens));
-      } while (tokens.skipIfNext(T_COMMA));
-    }
-
-    Interface intface = Interface.parseInterface(tokens);
-
-    return new InterfaceStatement(position, name, genericParameters, parents, intface);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/NamespaceStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/NamespaceStatement.java
deleted file mode 100644
index 08670999e8..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/NamespaceStatement.java
+++ /dev/null
@@ -1,35 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Statement;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-import java.util.List;
-
-import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_KEYWORD_NAMESPACE;
-
-public class NamespaceStatement extends Statement implements DeclarableStatement {
-  private final Identifier name;
-  private final List<Statement> statements;
-
-  private NamespaceStatement (Position position, Identifier name, List<Statement> statements) {
-    super(position);
-    this.name = name;
-    this.statements = statements;
-  }
-
-  public static NamespaceStatement parseNamespaceStatement (Tokens tokens) {
-    Position position = tokens.require(T_KEYWORD_NAMESPACE).getPosition();
-
-    Identifier name = Identifier.requireIdentifier(tokens);
-
-    tokens.require(TokenType.T_LEFT_BRACE);
-
-    List<Statement> statements = Statement.parseStatements(tokens, TokenType.T_RIGHT_BRACE);
-
-    tokens.require(TokenType.T_RIGHT_BRACE);
-
-    return new NamespaceStatement(position, name, statements);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STDataStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STDataStatement.java
new file mode 100644
index 0000000000..46f624a227
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STDataStatement.java
@@ -0,0 +1,9 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Statement;
+
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public abstract class STDataStatement extends STStatement {
+  protected STDataStatement (Position position, StatementType type) {
+    super(position, type);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STFunctionStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STFunctionStatement.java
new file mode 100644
index 0000000000..f3eb8e0b14
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STFunctionStatement.java
@@ -0,0 +1,37 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Statement;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.STCallable;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STFunctionStatement extends STDataStatement {
+  private final String name;
+  private final STCallable callable;
+
+  private STFunctionStatement (Position position, String name, STCallable callable) {
+    super(position, StatementType.FUNCTION);
+    this.name = name;
+    this.callable = callable;
+  }
+
+  public static STFunctionStatement parseFunctionStatement (Tokens tokens) {
+    Position position = tokens.require(TokenType.T_KEYWORD_FUNCTION).getPosition();
+
+    String name = STIdentifier.requireIdentifier(tokens);
+
+    STCallable callable = STCallable.parseCallable(tokens, TokenType.T_COLON);
+
+    return new STFunctionStatement(position, name, callable);
+  }
+
+  @Override
+  public String getName () {
+    return name;
+  }
+
+  public STCallable getCallable () {
+    return callable;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STInterfaceStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STInterfaceStatement.java
new file mode 100644
index 0000000000..ed95e7979c
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STInterfaceStatement.java
@@ -0,0 +1,74 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Statement;
+
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterfaceBody;
+import org.ooml.oomlc.core.env.gen.Syntax.STAnnotation;
+import org.ooml.oomlc.core.env.gen.Syntax.STGenericParameter;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
+import org.ooml.oomlc.core.env.gen.Syntax.STSyntax;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
+
+import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_COMMA;
+import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_KEYWORD_EXTENDS;
+import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_KEYWORD_INTERFACE;
+import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_LEFT_CHEVRON;
+
+public class STInterfaceStatement extends STTypingStatement {
+  private final String name;
+  private final List<STGenericParameter> genericParameters;
+  private final List<STType> parents;
+  private final STInterfaceBody interfaceBody;
+
+  private STInterfaceStatement (Position position, String name, List<STGenericParameter> genericParameters, List<STType> parents, STInterfaceBody interfaceBody) {
+    super(position, StatementType.INTERFACE);
+    this.name = name;
+    this.genericParameters = genericParameters;
+    this.parents = parents;
+    this.interfaceBody = interfaceBody;
+  }
+
+  public static STInterfaceStatement parseInterfaceStatement (Tokens tokens) {
+    Position position = tokens.require(T_KEYWORD_INTERFACE).getPosition();
+
+    String name = STIdentifier.requireIdentifier(tokens);
+
+    List<STGenericParameter> genericParameters = new ArrayList<>(0);
+    if (tokens.peekType() == T_LEFT_CHEVRON) {
+      genericParameters = STGenericParameter.parseGenericParameters(tokens);
+    }
+
+    List<STType> parents = new ArrayList<>();
+
+    if (tokens.skipIfNext(T_KEYWORD_EXTENDS)) {
+      do {
+        parents.add(STType.parseReferenceOrGenericOrIndexedType(tokens));
+      } while (tokens.skipIfNext(T_COMMA));
+    }
+
+    STInterfaceBody intface = STInterfaceBody.parseInterfaceBody(tokens);
+
+    return new STInterfaceStatement(position, name, genericParameters, parents, intface);
+  }
+
+  @Override
+  public String getName () {
+    return name;
+  }
+
+  public List<STGenericParameter> getGenericParameters () {
+    return genericParameters;
+  }
+
+  public List<STType> getParents () {
+    return parents;
+  }
+
+  public STInterfaceBody getInterfaceBody () {
+    return interfaceBody;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STNamespaceStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STNamespaceStatement.java
new file mode 100644
index 0000000000..4acb9517b7
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STNamespaceStatement.java
@@ -0,0 +1,43 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Statement;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.Namespace.STNamespace;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import static org.ooml.oomlc.core.env.gen.Parsing.TokenType.T_KEYWORD_NAMESPACE;
+
+public class STNamespaceStatement extends STStatement {
+  private final String name;
+  private final STNamespace namespace;
+
+  private STNamespaceStatement (Position position, String name, STNamespace namespace) {
+    super(position, StatementType.NAMESPACE);
+    this.name = name;
+    this.namespace = namespace;
+  }
+
+  public static STNamespaceStatement parseNamespaceStatement (Tokens tokens) {
+    Position position = tokens.require(T_KEYWORD_NAMESPACE).getPosition();
+
+    String name = STIdentifier.requireIdentifier(tokens);
+
+    tokens.require(TokenType.T_LEFT_BRACE);
+
+    STNamespace namespace = STNamespace.parseNamespace(tokens, TokenType.T_RIGHT_BRACE);
+
+    tokens.require(TokenType.T_RIGHT_BRACE);
+
+    return new STNamespaceStatement(position, name, namespace);
+  }
+
+  @Override
+  public String getName () {
+    return name;
+  }
+
+  public STNamespace getNamespace () {
+    return namespace;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STStatement.java
new file mode 100644
index 0000000000..341a888c76
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STStatement.java
@@ -0,0 +1,58 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Statement;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.STSyntax;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.function.Function;
+
+public abstract class STStatement extends STSyntax {
+  private static final Map<TokenType, Function<Tokens, STStatement>> PARSERS = _createParsersMap();
+
+  private final StatementType statementType;
+
+  protected STStatement (Position position, StatementType statementType) {
+    super(position);
+    this.statementType = statementType;
+  }
+
+  private static Map<TokenType, Function<Tokens, STStatement>> _createParsersMap () {
+    Map<TokenType, Function<Tokens, STStatement>> map = new HashMap<>();
+
+    map.put(TokenType.T_KEYWORD_CONST, STVariableStatement::parseVariableStatement);
+    map.put(TokenType.T_KEYWORD_VAR, STVariableStatement::parseVariableStatement);
+    map.put(TokenType.T_KEYWORD_TYPE, STTypeAliasStatement::parseTypeAliasStatement);
+    map.put(TokenType.T_KEYWORD_FUNCTION, STFunctionStatement::parseFunctionStatement);
+    map.put(TokenType.T_KEYWORD_NAMESPACE, STNamespaceStatement::parseNamespaceStatement);
+    map.put(TokenType.T_KEYWORD_INTERFACE, STInterfaceStatement::parseInterfaceStatement);
+
+    return map;
+  }
+
+  public static STStatement parseStatement (Tokens tokens) {
+    TokenType nextTokenType = tokens.peekType();
+
+    STStatement statement;
+
+    if (!STStatement.PARSERS.containsKey(nextTokenType)) {
+      throw tokens.constructMalformedSyntaxException("Unknown statement");
+    }
+
+    statement = STStatement.PARSERS.get(nextTokenType).apply(tokens);
+
+    return statement;
+  }
+
+  public abstract String getName ();
+
+  public StatementType getStatementType () {
+    return statementType;
+  }
+
+  public enum StatementType {
+    FUNCTION, TYPE_ALIAS, NAMESPACE, VARIABLE, DECLARATION, INTERFACE
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STTypeAliasStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STTypeAliasStatement.java
new file mode 100644
index 0000000000..2acbfb6719
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STTypeAliasStatement.java
@@ -0,0 +1,39 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Statement;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STTypeAliasStatement extends STTypingStatement {
+  private final String name;
+  private final STType type;
+
+  private STTypeAliasStatement (Position position, String name, STType type) {
+    super(position, StatementType.TYPE_ALIAS);
+    this.name = name;
+    this.type = type;
+  }
+
+  public static STTypeAliasStatement parseTypeAliasStatement (Tokens tokens) {
+    Position position = tokens.require(TokenType.T_KEYWORD_TYPE).getPosition();
+
+    String name = STIdentifier.requireIdentifier(tokens);
+
+    tokens.require(TokenType.T_EQUALS);
+
+    STType type = STType.parseType(tokens);
+
+    return new STTypeAliasStatement(position, name, type);
+  }
+
+  @Override
+  public String getName () {
+    return name;
+  }
+
+  public STType getType () {
+    return type;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STTypingStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STTypingStatement.java
new file mode 100644
index 0000000000..15d8684a8d
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STTypingStatement.java
@@ -0,0 +1,9 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Statement;
+
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public abstract class STTypingStatement extends STStatement {
+  protected STTypingStatement (Position position, StatementType type) {
+    super(position, type);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/VariableStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STVariableStatement.java
similarity index 50%
rename from gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/VariableStatement.java
rename to gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STVariableStatement.java
index 839a890e56..23dce29c1b 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/VariableStatement.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/STVariableStatement.java
@@ -3,23 +3,23 @@ package org.ooml.oomlc.core.env.gen.Syntax.Statement;
 import org.ooml.oomlc.core.env.gen.Parsing.Token;
 import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
 import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.Type;
+import org.ooml.oomlc.core.env.gen.Syntax.Type.STType;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
 import org.ooml.oomlc.core.env.gen.Utils.Position;
 
-public class VariableStatement extends Statement implements DeclarableStatement {
-  private final Identifier name;
-  private final Type type;
+public class STVariableStatement extends STDataStatement {
+  private final String name;
+  private final STType type;
   private final boolean isReadOnly;
 
-  private VariableStatement (Position position, Identifier name, Type type, boolean isReadOnly) {
-    super(position);
+  private STVariableStatement (Position position, String name, STType type, boolean isReadOnly) {
+    super(position, StatementType.VARIABLE);
     this.name = name;
     this.type = type;
     this.isReadOnly = isReadOnly;
   }
 
-  public static VariableStatement parseVariableStatement(Tokens tokens) {
+  public static STVariableStatement parseVariableStatement (Tokens tokens) {
     Token t = tokens.accept();
     Position position = t.getPosition();
 
@@ -38,10 +38,23 @@ public class VariableStatement extends Statement implements DeclarableStatement
       throw tokens.constructRequiredSyntaxNotFoundException("Expected variable or constant declaration");
     }
 
-    Identifier name = Identifier.requireIdentifier(tokens);
+    String name = STIdentifier.requireIdentifier(tokens);
     tokens.require(TokenType.T_COLON);
-    Type type = Type.parseType(tokens);
+    STType type = STType.parseType(tokens);
 
-    return new VariableStatement(position, name, type, isReadOnly);
+    return new STVariableStatement(position, name, type, isReadOnly);
+  }
+
+  @Override
+  public String getName () {
+    return name;
+  }
+
+  public STType getType () {
+    return type;
+  }
+
+  public boolean isReadOnly () {
+    return isReadOnly;
   }
 }
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/Statement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/Statement.java
deleted file mode 100644
index 4a98e4145a..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/Statement.java
+++ /dev/null
@@ -1,76 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Statement;
-
-import org.ooml.oomlc.core.env.gen.Exception.UnexpectedEndOfCodeException;
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Serialising.JSONExc;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.function.Function;
-
-public abstract class Statement {
-  private static final Map<TokenType, Function<Tokens, Statement>> PARSERS = _createParsersMap();
-
-  @JSONExc private final Position position;
-
-  protected Statement (Position position) {
-    this.position = position;
-  }
-
-  private static Map<TokenType, Function<Tokens, Statement>> _createParsersMap () {
-    Map<TokenType, Function<Tokens, Statement>> map = new HashMap<>();
-
-    map.put(TokenType.T_KEYWORD_CONST, VariableStatement::parseVariableStatement);
-    map.put(TokenType.T_KEYWORD_VAR, VariableStatement::parseVariableStatement);
-    map.put(TokenType.T_KEYWORD_TYPE, TypeAliasStatement::parseTypeAliasStatement);
-    map.put(TokenType.T_KEYWORD_FUNCTION, FunctionStatement::parseFunctionStatement);
-    map.put(TokenType.T_KEYWORD_DECLARE, DeclarationStatement::parseDeclarationStatement);
-    map.put(TokenType.T_KEYWORD_NAMESPACE, NamespaceStatement::parseNamespaceStatement);
-    map.put(TokenType.T_KEYWORD_INTERFACE, InterfaceStatement::parseInterfaceStatement);
-
-    return map;
-  }
-
-  public static Statement parseStatement (Tokens tokens) {
-    TokenType nextTokenType = tokens.peekType();
-
-    Statement statement;
-
-    if (!Statement.PARSERS.containsKey(nextTokenType)) {
-      throw tokens.constructMalformedSyntaxException("Unknown statement");
-    }
-
-    statement = Statement.PARSERS.get(nextTokenType).apply(tokens);
-
-    return statement;
-  }
-
-  public static List<Statement> parseStatements (Tokens tokens, TokenType breakOn) {
-    List<Statement> statements = new ArrayList<>();
-
-    while (true) {
-      try {
-        if (tokens.peekType() == breakOn) {
-          break;
-        }
-      } catch (UnexpectedEndOfCodeException ueoce) {
-        if (breakOn == null) {
-          break;
-        }
-        throw ueoce;
-      }
-
-      Statement statement = parseStatement(tokens);
-
-      tokens.skipIfNext(TokenType.T_SEMICOLON);
-
-      statements.add(statement);
-    }
-
-    return statements;
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/TypeAliasStatement.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/TypeAliasStatement.java
deleted file mode 100644
index 0976e349fa..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Statement/TypeAliasStatement.java
+++ /dev/null
@@ -1,30 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Statement;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
-import org.ooml.oomlc.core.env.gen.Syntax.Type.Type;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-public class TypeAliasStatement extends Statement implements DeclarableStatement {
-  private final Identifier name;
-  private final Type type;
-
-  private TypeAliasStatement (Position position, Identifier name, Type type) {
-    super(position);
-    this.name = name;
-    this.type = type;
-  }
-
-  public static TypeAliasStatement parseTypeAliasStatement (Tokens tokens) {
-    Position position = tokens.require(TokenType.T_KEYWORD_TYPE).getPosition();
-
-    Identifier name = Identifier.requireIdentifier(tokens);
-
-    tokens.require(TokenType.T_EQUALS);
-
-    Type type = Type.parseType(tokens);
-
-    return new TypeAliasStatement(position, name, type);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/ArrayType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/ArrayType.java
deleted file mode 100644
index 89c6122439..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/ArrayType.java
+++ /dev/null
@@ -1,12 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Type;
-
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-public class ArrayType extends Type {
-  private final Type elementType;
-
-  public ArrayType (Position position, Type elementType) {
-    super(position);
-    this.elementType = elementType;
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/CallableType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/CallableType.java
deleted file mode 100644
index 35bfecc6c6..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/CallableType.java
+++ /dev/null
@@ -1,22 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Type;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Callable;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-public class CallableType extends Type {
-  private final Callable callable;
-
-  private CallableType (Position position, Callable callable) {
-    super(position);
-    this.callable = callable;
-  }
-
-  public static CallableType parseCallableType (Tokens tokens) {
-    Position position = tokens.peek().getPosition();
-    Callable callable = Callable.parseCallable(tokens, TokenType.T_EQUALS_AND_RIGHT_CHEVRON, false);
-
-    return new CallableType(position, callable);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/IndexQueryType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/IndexQueryType.java
deleted file mode 100644
index f92eb68781..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/IndexQueryType.java
+++ /dev/null
@@ -1,12 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Type;
-
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-public class IndexQueryType extends Type {
-  private final Type enumerable;
-
-  public IndexQueryType (Position position, Type enumerable) {
-    super(position);
-    this.enumerable = enumerable;
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/InlineInterfaceType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/InlineInterfaceType.java
deleted file mode 100644
index c3f5888772..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/InlineInterfaceType.java
+++ /dev/null
@@ -1,17 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Type;
-
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Interface.Interface;
-
-public class InlineInterfaceType extends Type {
-  private final Interface intface;
-
-  private InlineInterfaceType (Interface intface) {
-    super(intface.getPosition());
-    this.intface = intface;
-  }
-
-  public static InlineInterfaceType parseInlineInterfaceType (Tokens tokens) {
-    return new InlineInterfaceType(Interface.parseInterface(tokens));
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/KeyofType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/KeyofType.java
deleted file mode 100644
index eb008fd1b0..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/KeyofType.java
+++ /dev/null
@@ -1,20 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Type;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-public class KeyofType extends Type {
-  private final ReferenceType enumerable;
-
-  private KeyofType (Position position, ReferenceType enumerable) {
-    super(position);
-    this.enumerable = enumerable;
-  }
-
-  public static KeyofType parseKeyofType (Tokens tokens) {
-    Position position = tokens.require(TokenType.T_KEYWORD_KEYOF).getPosition();
-
-    return new KeyofType(position, ReferenceType.parseReferenceType(tokens));
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/PredicateType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/PredicateType.java
deleted file mode 100644
index 09f5be326c..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/PredicateType.java
+++ /dev/null
@@ -1,28 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Type;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-public class PredicateType extends Type {
-  private final Identifier argumentName;
-  private final Type type;
-
-  private PredicateType (Position position, Identifier argumentName, Type type) {
-    super(position);
-    this.argumentName = argumentName;
-    this.type = type;
-  }
-
-  public static PredicateType parsePredicateType (Tokens tokens) {
-    Identifier argumentName = Identifier.requireIdentifier(tokens);
-    Position position = argumentName.getPosition();
-
-    tokens.require(TokenType.T_KEYWORD_IS);
-
-    Type type = Type.parseType(tokens);
-
-    return new PredicateType(position, argumentName, type);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/ReferenceType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/ReferenceType.java
deleted file mode 100644
index 74a4772cea..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/ReferenceType.java
+++ /dev/null
@@ -1,46 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Type;
-
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class ReferenceType extends Type {
-  private final List<Identifier> reference;
-  private final List<Type> genericArguments;
-
-  private ReferenceType (Position position, List<Identifier> reference, List<Type> genericArguments) {
-    super(position);
-    this.reference = reference;
-    this.genericArguments = genericArguments;
-  }
-
-  public static ReferenceType parseReferenceType (Tokens tokens) {
-    List<Identifier> reference = new ArrayList<>();
-    do {
-      Identifier name = Identifier.requireIdentifier(tokens);
-      reference.add(name);
-    } while (tokens.skipIfNext(TokenType.T_DOT));
-
-    Position position = reference.get(0).getPosition();
-
-    List<Type> genericArguments = new ArrayList<>();
-
-    if (tokens.skipIfNext(TokenType.T_LEFT_CHEVRON)) {
-      do {
-        if (tokens.peekType() == TokenType.T_RIGHT_CHEVRON) {
-          break;
-        }
-
-        genericArguments.add(Type.parseType(tokens));
-      } while (tokens.skipIfNext(TokenType.T_COMMA));
-
-      tokens.require(TokenType.T_RIGHT_CHEVRON);
-    }
-
-    return new ReferenceType(position, reference, genericArguments);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STAnyType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STAnyType.java
new file mode 100644
index 0000000000..fac7910e2a
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STAnyType.java
@@ -0,0 +1,17 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STAnyType extends STType {
+  private STAnyType (Position position) {
+    super(position, TypeType.ANY);
+  }
+
+  public static STAnyType parseAnyType (Tokens tokens) {
+    Position position = tokens.require(TokenType.T_KEYWORD_ANY).getPosition();
+
+    return new STAnyType(position);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STArrayType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STArrayType.java
new file mode 100644
index 0000000000..0ba73dd4b3
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STArrayType.java
@@ -0,0 +1,16 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STArrayType extends STType {
+  private final STType elementType;
+
+  public STArrayType (Position position, STType elementType) {
+    super(position, TypeType.ARRAY);
+    this.elementType = elementType;
+  }
+
+  public STType getElementType () {
+    return elementType;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STCallableType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STCallableType.java
new file mode 100644
index 0000000000..2ef2bc1d8b
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STCallableType.java
@@ -0,0 +1,26 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.STCallable;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STCallableType extends STType {
+  private final STCallable callable;
+
+  private STCallableType (Position position, STCallable callable) {
+    super(position, TypeType.CALLABLE);
+    this.callable = callable;
+  }
+
+  public static STCallableType parseCallableType (Tokens tokens) {
+    Position position = tokens.peek().getPosition();
+    STCallable callable = STCallable.parseCallable(tokens, TokenType.T_EQUALS_AND_RIGHT_CHEVRON);
+
+    return new STCallableType(position, callable);
+  }
+
+  public STCallable getCallable () {
+    return callable;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STGenericType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STGenericType.java
new file mode 100644
index 0000000000..0b78840b5b
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STGenericType.java
@@ -0,0 +1,24 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import java.util.List;
+
+public class STGenericType extends STType {
+  private final STReferenceType referenceType;
+  private final List<STType> genericArguments;
+
+  public STGenericType (Position position, STReferenceType referenceType, List<STType> genericArguments) {
+    super(position, TypeType.GENERIC);
+    this.referenceType = referenceType;
+    this.genericArguments = genericArguments;
+  }
+
+  public STReferenceType getReferenceType () {
+    return referenceType;
+  }
+
+  public List<STType> getGenericArguments () {
+    return genericArguments;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STIndexedType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STIndexedType.java
new file mode 100644
index 0000000000..e00a28d168
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STIndexedType.java
@@ -0,0 +1,22 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STIndexedType extends STType {
+  private final STReferenceType indexable;
+  private final String term;
+
+  public STIndexedType (Position position, STReferenceType indexable, String term) {
+    super(position, TypeType.INDEXED);
+    this.indexable = indexable;
+    this.term = term;
+  }
+
+  public STReferenceType getIndexable () {
+    return indexable;
+  }
+
+  public String getTerm () {
+    return term;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STInlineInterfaceType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STInlineInterfaceType.java
new file mode 100644
index 0000000000..ca2599113f
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STInlineInterfaceType.java
@@ -0,0 +1,21 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.Interface.STInterfaceBody;
+
+public class STInlineInterfaceType extends STType {
+  private final STInterfaceBody intface;
+
+  private STInlineInterfaceType (STInterfaceBody intface) {
+    super(intface.getPosition(), TypeType.INLINE_INTERFACE);
+    this.intface = intface;
+  }
+
+  public static STInlineInterfaceType parseInlineInterfaceType (Tokens tokens) {
+    return new STInlineInterfaceType(STInterfaceBody.parseInterfaceBody(tokens));
+  }
+
+  public STInterfaceBody getInterfaceBody () {
+    return intface;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STKeyofType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STKeyofType.java
new file mode 100644
index 0000000000..c1b8fc1061
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STKeyofType.java
@@ -0,0 +1,24 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STKeyofType extends STType {
+  private final STReferenceType enumerable;
+
+  private STKeyofType (Position position, STReferenceType enumerable) {
+    super(position, TypeType.KEYOF);
+    this.enumerable = enumerable;
+  }
+
+  public static STKeyofType parseKeyofType (Tokens tokens) {
+    Position position = tokens.require(TokenType.T_KEYWORD_KEYOF).getPosition();
+
+    return new STKeyofType(position, STReferenceType.parseReferenceType(tokens));
+  }
+
+  public STReferenceType getEnumerable () {
+    return enumerable;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STNeverType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STNeverType.java
new file mode 100644
index 0000000000..8fd307e758
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STNeverType.java
@@ -0,0 +1,17 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STNeverType extends STType {
+  private STNeverType (Position position) {
+    super(position, TypeType.NEVER);
+  }
+
+  public static STNeverType parseNeverType (Tokens tokens) {
+    Position position = tokens.require(TokenType.T_KEYWORD_NEVER).getPosition();
+
+    return new STNeverType(position);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STPredicateType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STPredicateType.java
new file mode 100644
index 0000000000..149986d4d6
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STPredicateType.java
@@ -0,0 +1,37 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STPredicateType extends STType {
+  private final String argumentName;
+  private final STType type;
+
+  private STPredicateType (Position position, String argumentName, STType type) {
+    super(position, TypeType.PREDICATE);
+    this.argumentName = argumentName;
+    this.type = type;
+  }
+
+  public static STPredicateType parsePredicateType (Tokens tokens) {
+    Position position = tokens.peek().getPosition();
+
+    String argumentName = STIdentifier.requireIdentifier(tokens);
+
+    tokens.require(TokenType.T_KEYWORD_IS);
+
+    STType type = STType.parseType(tokens);
+
+    return new STPredicateType(position, argumentName, type);
+  }
+
+  public String getArgumentName () {
+    return argumentName;
+  }
+
+  public STType getType () {
+    return type;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/PrimitiveType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STPrimitiveType.java
similarity index 54%
rename from gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/PrimitiveType.java
rename to gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STPrimitiveType.java
index f4cac5f68d..2b163cbdba 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/PrimitiveType.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STPrimitiveType.java
@@ -1,42 +1,50 @@
 package org.ooml.oomlc.core.env.gen.Syntax.Type;
 
 import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Syntax.Identifier;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
 import org.ooml.oomlc.core.env.gen.Utils.Position;
 
 import java.util.HashMap;
 import java.util.Map;
 
-import static org.ooml.oomlc.core.env.gen.Syntax.Type.PrimitiveType.Primitive.STRING_TO_PRIMITIVE_MAP;
+import static org.ooml.oomlc.core.env.gen.Syntax.Type.STPrimitiveType.Primitive.STRING_TO_PRIMITIVE_MAP;
 
-public class PrimitiveType extends Type {
+public class STPrimitiveType extends STType {
   private final Primitive primitive;
 
-  private PrimitiveType (Position position, Primitive primitive) {
-    super(position);
+  private STPrimitiveType (Position position, Primitive primitive) {
+    super(position, TypeType.PRIMITIVE);
     this.primitive = primitive;
   }
 
-  public static PrimitiveType parsePrimitiveType (Tokens tokens) {
-    Identifier identifier = Identifier.requireIdentifier(tokens);
-    Position position = identifier.getPosition();
-    String name = identifier.getName();
+  public static STPrimitiveType parsePrimitiveType (Tokens tokens) {
+    Position position = tokens.peek().getPosition();
+
+    String name = STIdentifier.requireIdentifier(tokens);
+
     if (!STRING_TO_PRIMITIVE_MAP.containsKey(name)) {
       throw tokens.constructRequiredSyntaxNotFoundException("Required a primitive subtype");
     }
-    return new PrimitiveType(position, STRING_TO_PRIMITIVE_MAP.get(name));
+
+    return new STPrimitiveType(position, STRING_TO_PRIMITIVE_MAP.get(name));
+  }
+
+  public Primitive getPrimitive () {
+    return primitive;
   }
 
   public enum Primitive {
-    NUMBER, NULL, BOOLEAN, STRING;
+    OBJECT, NUMBER, NULL, UNDEFINED, BOOLEAN, STRING;
 
     public static final Map<String, Primitive> STRING_TO_PRIMITIVE_MAP = _createStringToPrimitiveMap();
 
     private static Map<String, Primitive> _createStringToPrimitiveMap () {
       Map<String, Primitive> stringPrimitiveMap = new HashMap<>();
 
+      stringPrimitiveMap.put("object", OBJECT);
       stringPrimitiveMap.put("boolean", BOOLEAN);
       stringPrimitiveMap.put("null", NULL);
+      stringPrimitiveMap.put("undefined", UNDEFINED);
       stringPrimitiveMap.put("number", NUMBER);
       stringPrimitiveMap.put("string", STRING);
 
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STReferenceType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STReferenceType.java
new file mode 100644
index 0000000000..86183e07ce
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STReferenceType.java
@@ -0,0 +1,26 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STReferenceType extends STType {
+  private final String reference;
+
+  private STReferenceType (Position position, String reference) {
+    super(position, TypeType.REFERENCE);
+    this.reference = reference;
+  }
+
+  public static STReferenceType parseReferenceType (Tokens tokens) {
+    Position position = tokens.peek().getPosition();
+
+    String reference = STIdentifier.requireReference(tokens);
+
+    return new STReferenceType(position, reference);
+  }
+
+  public String getReference () {
+    return reference;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/StringLiteralType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STStringLiteralType.java
similarity index 51%
rename from gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/StringLiteralType.java
rename to gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STStringLiteralType.java
index 06d953c610..f6968f84ad 100644
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/StringLiteralType.java
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STStringLiteralType.java
@@ -5,16 +5,20 @@ import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
 import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
 import org.ooml.oomlc.core.env.gen.Utils.Position;
 
-public class StringLiteralType extends Type {
+public class STStringLiteralType extends STType {
   private final String value;
 
-  private StringLiteralType (Position position, String value) {
-    super(position);
+  private STStringLiteralType (Position position, String value) {
+    super(position, TypeType.STRING_LITERAL);
     this.value = value;
   }
 
-  public static StringLiteralType parseStringLiteraltype (Tokens tokens) {
+  public static STStringLiteralType parseStringLiteraltype (Tokens tokens) {
     Token t = tokens.require(TokenType.T_LITERAL_STRING);
-    return new StringLiteralType(t.getPosition(), t.getValue());
+    return new STStringLiteralType(t.getPosition(), t.getValue());
+  }
+
+  public String getValue () {
+    return value;
   }
 }
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STType.java
new file mode 100644
index 0000000000..732f33cf7d
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STType.java
@@ -0,0 +1,180 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Syntax.STIdentifier;
+import org.ooml.oomlc.core.env.gen.Syntax.STSyntax;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static org.ooml.oomlc.core.env.gen.Syntax.Type.STPrimitiveType.Primitive.STRING_TO_PRIMITIVE_MAP;
+
+public abstract class STType extends STSyntax {
+  private final TypeType typeType;
+
+  protected STType (Position position, TypeType typeType) {
+    super(position);
+    this.typeType = typeType;
+  }
+
+  public static STType parseReferenceOrGenericOrIndexedType (Tokens tokens) {
+    STType type = STReferenceType.parseReferenceType(tokens);
+
+    List<STType> genericArguments = new ArrayList<>();
+    Position genericArgumentsPosition = null;
+
+    String query = null;
+    Position queryPosition = null;
+
+    if (tokens.peekType() == TokenType.T_LEFT_CHEVRON) {
+      genericArgumentsPosition = tokens.accept().getPosition();
+
+      do {
+        if (tokens.peekType() == TokenType.T_RIGHT_CHEVRON) {
+          break;
+        }
+
+        genericArguments.add(STType.parseType(tokens));
+      } while (tokens.skipIfNext(TokenType.T_COMMA));
+
+      tokens.require(TokenType.T_RIGHT_CHEVRON);
+
+    } else if (tokens.peekType() == TokenType.T_LEFT_SQUARE_BRACKET &&
+               tokens.peekType(2) != TokenType.T_RIGHT_SQUARE_BRACKET) {
+      queryPosition = tokens.accept().getPosition();
+
+      query = STIdentifier.requireIdentifier(tokens);
+      tokens.require(TokenType.T_RIGHT_SQUARE_BRACKET);
+    }
+
+    if (!genericArguments.isEmpty()) {
+      type = new STGenericType(genericArgumentsPosition, (STReferenceType) type, genericArguments);
+
+    } else if (query != null) {
+      type = new STIndexedType(queryPosition, (STReferenceType) type, query);
+    }
+
+    return type;
+  }
+
+  public static STType parseType (Tokens tokens) {
+    Position position = tokens.peek().getPosition();
+
+    List<STType> subtypes = new ArrayList<>();
+
+    do {
+      STType subtype;
+
+      switch (tokens.peekType()) {
+      case T_IDENTIFIER:
+        String identifierName = tokens.peek().getValue();
+
+        if (STRING_TO_PRIMITIVE_MAP.containsKey(identifierName)) {
+          // Primitive type
+          subtype = STPrimitiveType.parsePrimitiveType(tokens);
+
+        } else if (STRING_TO_PRIMITIVE_MAP.containsKey(identifierName.toLowerCase())) {
+          throw tokens.constructMalformedSyntaxException("Type cannot be the same as a primitive type case-insensitively");
+
+        } else if (tokens.peekType(2) == TokenType.T_KEYWORD_IS) {
+          // Predicate type
+          subtype = STPredicateType.parsePredicateType(tokens);
+
+        } else {
+          // Reference, generic, or indexed type
+          subtype = parseReferenceOrGenericOrIndexedType(tokens);
+        }
+        break;
+
+      case T_LEFT_PARENTHESIS:
+        if (tokens.peekType(2) == TokenType.T_RIGHT_PARENTHESIS ||
+            tokens.peekType(2) == TokenType.T_ELLIPSIS ||
+            tokens.peekType(3) == TokenType.T_COLON) {
+          // Callable type
+          subtype = STCallableType.parseCallableType(tokens);
+        } else {
+          // Grouping
+          tokens.skip();
+          subtype = STType.parseType(tokens);
+          tokens.require(TokenType.T_RIGHT_PARENTHESIS);
+        }
+        break;
+
+      case T_LEFT_CHEVRON:
+        // Callable type
+        subtype = STCallableType.parseCallableType(tokens);
+        break;
+
+      case T_LEFT_BRACE:
+        // Inline interface type
+        subtype = STInlineInterfaceType.parseInlineInterfaceType(tokens);
+        break;
+
+      case T_LITERAL_STRING:
+        subtype = STStringLiteralType.parseStringLiteraltype(tokens);
+        break;
+
+      case T_KEYWORD_KEYOF:
+        subtype = STKeyofType.parseKeyofType(tokens);
+        break;
+
+      case T_KEYWORD_TYPEOF:
+        subtype = STTypeofType.parseTypeofType(tokens);
+        break;
+
+      case T_KEYWORD_ANY:
+        subtype = STAnyType.parseAnyType(tokens);
+        break;
+
+      case T_KEYWORD_NEVER:
+        subtype = STNeverType.parseNeverType(tokens);
+        break;
+
+      case T_KEYWORD_VOID:
+        subtype = STVoidType.parseVoidType(tokens);
+        break;
+
+      default:
+        throw tokens.constructRequiredSyntaxNotFoundException("Expected type");
+      }
+
+      while (tokens.peek().getType() == TokenType.T_LEFT_SQUARE_BRACKET) {
+        // Array type
+        subtype = new STArrayType(tokens.require(TokenType.T_LEFT_SQUARE_BRACKET).getPosition(), subtype);
+        tokens.require(TokenType.T_RIGHT_SQUARE_BRACKET);
+      }
+
+      subtypes.add(subtype);
+    } while (tokens.skipIfNext(TokenType.T_PIPE));
+
+    if (subtypes.size() == 1) {
+      return subtypes.get(0);
+    }
+
+    return new STUnionType(position, subtypes);
+  }
+
+  public TypeType getTypeType () {
+    return typeType;
+  }
+
+  public enum TypeType {
+    ANY,
+    ARRAY,
+    CALLABLE,
+    GENERIC,
+    INDEXED,
+    INLINE_INTERFACE,
+    KEYOF,
+    NEVER,
+    PREDICATE,
+    PRIMITIVE,
+    REFERENCE,
+    STRING_LITERAL,
+    TYPEOF,
+    UNION,
+    VOID
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STTypeofType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STTypeofType.java
new file mode 100644
index 0000000000..4a8f32de08
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STTypeofType.java
@@ -0,0 +1,24 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STTypeofType extends STType {
+  private final STType capture;
+
+  private STTypeofType (Position position, STType capture) {
+    super(position, TypeType.TYPEOF);
+    this.capture = capture;
+  }
+
+  public static STTypeofType parseTypeofType (Tokens tokens) {
+    Position position = tokens.require(TokenType.T_KEYWORD_TYPEOF).getPosition();
+
+    return new STTypeofType(position, STType.parseType(tokens));
+  }
+
+  public STType getCapture () {
+    return capture;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STUnionType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STUnionType.java
new file mode 100644
index 0000000000..a16f7a260b
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STUnionType.java
@@ -0,0 +1,18 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+import java.util.List;
+
+public class STUnionType extends STType {
+  private final List<STType> subtypes;
+
+  public STUnionType (Position position, List<STType> subtypes) {
+    super(position, TypeType.UNION);
+    this.subtypes = subtypes;
+  }
+
+  public List<STType> getSubtypes () {
+    return subtypes;
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STVoidType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STVoidType.java
new file mode 100644
index 0000000000..d939af9f5e
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/STVoidType.java
@@ -0,0 +1,17 @@
+package org.ooml.oomlc.core.env.gen.Syntax.Type;
+
+import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
+import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
+import org.ooml.oomlc.core.env.gen.Utils.Position;
+
+public class STVoidType extends STType {
+  private STVoidType (Position position) {
+    super(position, TypeType.VOID);
+  }
+
+  public static STVoidType parseVoidType (Tokens tokens) {
+    Position position = tokens.require(TokenType.T_KEYWORD_VOID).getPosition();
+
+    return new STVoidType(position);
+  }
+}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/Type.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/Type.java
deleted file mode 100644
index 44fe4d4931..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/Type.java
+++ /dev/null
@@ -1,104 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Type;
-
-import org.ooml.oomlc.core.env.gen.Parsing.Token;
-import org.ooml.oomlc.core.env.gen.Parsing.TokenType;
-import org.ooml.oomlc.core.env.gen.Parsing.Tokens;
-import org.ooml.oomlc.core.env.gen.Serialising.JSONExc;
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.ooml.oomlc.core.env.gen.Syntax.Type.PrimitiveType.Primitive.STRING_TO_PRIMITIVE_MAP;
-
-public abstract class Type {
-  @JSONExc private final Position position;
-
-  protected Type (Position position) {
-    this.position = position;
-  }
-
-  public static Type parseType (Tokens tokens) {
-    Position position = tokens.peek().getPosition();
-
-    List<Type> subtypes = new ArrayList<>();
-
-    do {
-      Type subtype;
-
-      switch (tokens.peekType()) {
-      case T_IDENTIFIER:
-        String identifierName = tokens.peek().getValue();
-
-        if (STRING_TO_PRIMITIVE_MAP.containsKey(identifierName)) {
-          // Primitive type
-          subtype = PrimitiveType.parsePrimitiveType(tokens);
-
-        } else if (tokens.peekType(2) == TokenType.T_KEYWORD_IS) {
-          // Predicate type
-          subtype = PredicateType.parsePredicateType(tokens);
-
-        } else {
-          // Reference type
-          subtype = ReferenceType.parseReferenceType(tokens);
-        }
-        break;
-
-      case T_LEFT_PARENTHESIS:
-        if (tokens.peekType(2) == TokenType.T_RIGHT_PARENTHESIS ||
-            tokens.peekType(3) == TokenType.T_COLON) {
-          // Callable type
-          subtype = CallableType.parseCallableType(tokens);
-        } else {
-          // Grouping
-          tokens.skip();
-          subtype = Type.parseType(tokens);
-          tokens.require(TokenType.T_RIGHT_PARENTHESIS);
-        }
-        break;
-
-      case T_LEFT_CHEVRON:
-        // Callable type
-        subtype = CallableType.parseCallableType(tokens);
-        break;
-
-      case T_LEFT_BRACE:
-        // Inline interface type
-        subtype = InlineInterfaceType.parseInlineInterfaceType(tokens);
-        break;
-
-      case T_LITERAL_STRING:
-        subtype = StringLiteralType.parseStringLiteraltype(tokens);
-        break;
-
-      case T_KEYWORD_KEYOF:
-        subtype = KeyofType.parseKeyofType(tokens);
-        break;
-
-      default:
-        throw tokens.constructRequiredSyntaxNotFoundException("Expected type");
-      }
-
-      while (tokens.peek().getType() == TokenType.T_LEFT_SQUARE_BRACKET) {
-        Token postToken = tokens.accept();
-        Position postPosition = postToken.getPosition();
-        if (tokens.peekType() == TokenType.T_RIGHT_SQUARE_BRACKET) {
-          // Array type
-          subtype = new ArrayType(postPosition, subtype);
-        } else {
-          // Index query type
-          subtype = new IndexQueryType(postPosition, Type.parseType(tokens));
-        }
-        tokens.require(TokenType.T_RIGHT_SQUARE_BRACKET);
-      }
-
-      subtypes.add(subtype);
-    } while (tokens.skipIfNext(TokenType.T_PIPE));
-
-    if (subtypes.size() == 1) {
-      return subtypes.get(0);
-    }
-
-    return new UnionType(position, subtypes);
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/UnionType.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/UnionType.java
deleted file mode 100644
index 37a3e9b91f..0000000000
--- a/gen/main/java/org/ooml/oomlc/core/env/gen/Syntax/Type/UnionType.java
+++ /dev/null
@@ -1,14 +0,0 @@
-package org.ooml.oomlc.core.env.gen.Syntax.Type;
-
-import org.ooml.oomlc.core.env.gen.Utils.Position;
-
-import java.util.List;
-
-public class UnionType extends Type {
-  private final List<Type> subtypes;
-
-  public UnionType (Position position, List<Type> subtypes) {
-    super(position);
-    this.subtypes = subtypes;
-  }
-}
diff --git a/gen/main/java/org/ooml/oomlc/core/env/gen/Utils/Util.java b/gen/main/java/org/ooml/oomlc/core/env/gen/Utils/Util.java
new file mode 100644
index 0000000000..213f28ab52
--- /dev/null
+++ b/gen/main/java/org/ooml/oomlc/core/env/gen/Utils/Util.java
@@ -0,0 +1,20 @@
+package org.ooml.oomlc.core.env.gen.Utils;
+
+import java.util.Collection;
+import java.util.List;
+import java.util.function.Function;
+import java.util.stream.Collectors;
+
+public class Util {
+  public static String join (String joiner, Collection<?> collection) {
+    return collection.stream().map(Object::toString).collect(Collectors.joining(joiner));
+  }
+
+  public static <T, R> List<R> map (Collection<T> collection, Function<? super T, ? extends R> mapper) {
+    return collection.stream().map(mapper).collect(Collectors.toList());
+  }
+
+  public static String indent (String code) {
+    return code.replaceAll("(?m)^", "\t");
+  }
+}
diff --git a/notes/Compiling/Modules vs. inner classes.md b/notes/Compiling/Modules vs. inner classes.md
new file mode 100644
index 0000000000..73f0e93b5c
--- /dev/null
+++ b/notes/Compiling/Modules vs. inner classes.md	
@@ -0,0 +1,5 @@
+# Modules vs. inner classes
+
+Should use one class `window` and have everything in it (including classes and namespaces), so that:
+
+- Feature testing works e.g. `!!window.Set`
diff --git a/notes/Compiling/Normalising types.md b/notes/Compiling/Normalising types.md
new file mode 100644
index 0000000000..2043cba280
--- /dev/null
+++ b/notes/Compiling/Normalising types.md	
@@ -0,0 +1,69 @@
+# Normalising types
+
+TypeScript can have very complex types which can be near impossible to transpile to other languages. However, most can fit into a standard category, which can be transpiled in a specific way.
+
+## Before categorising
+
+If it's a union type and contains `null` or `undefined`, remove them and mark the type as optional. If there is only one subtype remaining, unwrap it. If there are no subtypes remaining, throw an exception.
+
+|From|To|
+|---|---|
+|`string | null | undefined`|`Optional<string>`|
+|`string | number | null`|`Optional<string | number>`|
+
+## Preprocessing type aliases
+
+### Union type aliases with string literal subtypes
+
+If a type alias is a union containing two or more string literals, create an enum with its string literal subtypes, and replace them in the type alias with a reference to the enum.
+
+|From|To|
+|---|---|
+|`someMethod(argName: number | 'a' | 'b' | 'c'): any`|`someMethod(argName: number | ArgNameValue): any`|
+
+## Unsupported types
+
+### Array of union type
+
+### Union type as generic argument
+
+## Union-safe categories
+
+These are applied first to any type and, for union types, any subtypes non-recursively.
+
+### Primitive or simple reference types
+
+Simple reference types are reference types with no generic arguments, or with only simple reference types as generic arguments.
+
+Transpile directly.
+
+|From|To|
+|---|---|
+|`string`|`String`|
+|`number`|`double`|
+|`SomeClass<string[]>`|`SomeClass<ArrayList<String>>`|
+
+### Array of reference or primitive type
+
+Transpile directly.
+
+### String literal type
+
+If part of a union and there is at least another string literal subtype in the same union,
+create an enum from it and any other string literal types in the union.
+Otherwise, throw an exception.
+
+### Inline interface type with no index property or with one index property and more than one regular property
+
+Move into own class.
+Do not deduplicate if two interfaces (inline or named) have the same structure.
+
+### Inline interface type with one index property and no regular properties
+
+## Top-level categories
+
+Note that these categories only apply to top-level types. For example, an array of a union type cannot be overloaded.
+
+### Union of reference, primitive, array of reference, or array or primitive types
+
+Overload.
diff --git a/notes/Compiling/Overloading for optional and union-type parameters.md b/notes/Compiling/Overloading for optional and union-type parameters.md
new file mode 100644
index 0000000000..593a4faf3f
--- /dev/null
+++ b/notes/Compiling/Overloading for optional and union-type parameters.md	
@@ -0,0 +1,25 @@
+# Overloading for optional and union-type parameters
+
+Given:
+
+```typescript
+interface A {
+  fn(a: string, b?: number, c?: boolean | string, d?: string | string[]): number;
+}
+```
+
+Generate:
+
+```java
+class A {
+  double fn(String a);
+  double fn(String a, double b);
+  double fn(String a, double b, boolean c);
+  double fn(String a, double b, String c);
+  double fn(String a, double b, boolean c, String d);
+  double fn(String a, double b, boolean c, String[] d);
+  double fn(String a, double b, String c);
+  double fn(String a, double b, String c, String d);
+  double fn(String a, double b, String c, String[] d);
+}
+```
diff --git a/notes/Compiling/Reference assumptions.md b/notes/Compiling/Reference assumptions.md
new file mode 100644
index 0000000000..eeb230804e
--- /dev/null
+++ b/notes/Compiling/Reference assumptions.md	
@@ -0,0 +1,5 @@
+# Reference assumptions
+
+- No cyclic or non-existent references (forward references are OK)
+- All parents are valid and point to const/var (i.e. parents are exported)
+- Namespace names do not contain dots.
diff --git a/notes/Compiling/Union types.md b/notes/Compiling/Union types.md
new file mode 100644
index 0000000000..d0a0716a9d
--- /dev/null
+++ b/notes/Compiling/Union types.md	
@@ -0,0 +1,6 @@
+# Union types
+
+- Collapse all string subtypes to one enum.
+- If has `null`, make all overloads' argument optional.
+- Avoid subtypes that are union types.
+- Avoid types that are an array of a union type.
diff --git a/notes/TypeScript spec/Events.md b/notes/TypeScript spec/Events.md
new file mode 100644
index 0000000000..7495da61a4
--- /dev/null
+++ b/notes/TypeScript spec/Events.md	
@@ -0,0 +1,27 @@
+# Event declarations
+
+- Classes may be a target of events.
+- There are event classes.
+- There are event names.
+- More than one event name may use the same event class.
+  - For example, `dragend` uses `DragEvent`, but so does `dragenter`.
+- An event name may be the same name as an event class.
+  - For example, `wheel` uses `Wheel`.
+
+## Structure
+
+- There are 5 types of types:
+  - The event target class e.g. `Window`.
+    - It may extend another event target.
+    - It either extends a handler methods interface or implements one directly (i.e. has its own `addEventListener` and `removeEventListener`).
+  - The handler methods interface for a common set of event names e.g. `WindowEventHandlers`.
+    - It should have `addEventListener` and `removeEventListener` for its set of specific event names.
+  - The interface that maps a common set of event names to their event classes e.g. `WindowEventHandlersEventMap`.
+    - This may extend another map-like interface.
+  - The specific event names e.g. `pointercancel`.
+  - The event class e.g. `PointerEvent`.
+
+## Type checking
+
+- TypeScript uses `keyof` and index queries for type checking, but this is basically impossible to replicate in other languages directly.
+- A plan for type checking in Java:
diff --git a/notes/TypeScript spec/Exporting interfaces.md b/notes/TypeScript spec/Exporting interfaces.md
new file mode 100644
index 0000000000..501f677053
--- /dev/null
+++ b/notes/TypeScript spec/Exporting interfaces.md	
@@ -0,0 +1,46 @@
+# Exporting interfaces
+
+Given:
+
+```typescript
+interface SomeClass {
+  prop: string;
+  method(a: boolean | null): number;
+}
+```
+
+There are two forms:
+
+```typescript
+interface SomeClassConstructor {
+  new(ca: number, ca2: string): SomeClass;
+  readonly prototype: SomeClass;
+}
+
+declare const SomeClass: SomeClassConstructor;
+```
+
+```typescript
+declare var SomeClass: {
+  prototype: SomeClass;
+  new(ca: number, ca2: string): SomeClass;
+};
+```
+
+When processing, on the `*Constructor` or inline interface:
+
+- ignore the return type from any constructors, as it may not handle generics properly (e.g. see `WeakSetConstructor`)
+- remove the `prototype` property
+- ignore the name of the `const`/`var` or `*Constructor` interface
+- add all interface body units as static units to the `prototype` interface
+- drop the `const`/`var` or `*Constructor` interface
+
+## Indirect constructor
+
+When the constructor return value does not match the class name. 
+
+```typescript
+declare var Audio: {
+  new(src?: string): HTMLAudioElement;
+}
+```
diff --git a/notes/TypeScript spec/Index properties.md b/notes/TypeScript spec/Index properties.md
new file mode 100644
index 0000000000..ca0b22b7c2
--- /dev/null
+++ b/notes/TypeScript spec/Index properties.md	
@@ -0,0 +1,5 @@
+# Index properties
+
+To allow classes in other languages to take advantage, need to implement base generic interface with method that acts as JS lookup operator (`[key]`).
+
+If a type is an interface with only one property, which is a index property, replace with base interface.
diff --git a/notes/TypeScript spec/References and statements.md b/notes/TypeScript spec/References and statements.md
new file mode 100644
index 0000000000..b71949953f
--- /dev/null
+++ b/notes/TypeScript spec/References and statements.md	
@@ -0,0 +1,14 @@
+# References and statements
+
+- Top-level should only have `declare`, `type`, or `interface`.
+- Interfaces are compile-time helper structures, not actual code.
+- References are dereferenced like so:
+  - Split into parts.
+  - Look for something at the same level with the first part's name.
+  - If not found, look for something at a level higher with the first part's name.
+  - Repeat the last step until found or top-level reached.
+  - If not found in top-level, throw error.
+  - If there is more than one part:
+    - The first part must resolve to a namespace.
+    - Traverse for each part after the first and before the last, making sure each part resolves to a namespace.
+    - Find an interface, type alias, or non-namespace declaration.
diff --git a/notes/TypeScript spec/Types.md b/notes/TypeScript spec/Types.md
new file mode 100644
index 0000000000..5a713766a9
--- /dev/null
+++ b/notes/TypeScript spec/Types.md	
@@ -0,0 +1,3 @@
+# Types
+
+- Indexed access types only access reference types (i.e. no chained indexed access or access of anything other than a reference), and the accessed term is only a single identifier (i.e. no literal string or multi-namespace reference).
diff --git a/pom.xml b/pom.xml
index 373350e7e5..5020dedaad 100644
--- a/pom.xml
+++ b/pom.xml
@@ -6,7 +6,7 @@
 
   <groupId>org.ooml.oomlc.core.env.gen</groupId>
   <artifactId>oomlc-core-env-gen</artifactId>
-  <version>20180431-SNAPSHOT</version>
+  <version>20180507.0-SNAPSHOT</version>
 
   <properties>
     <maven.compiler.source>1.8</maven.compiler.source>
@@ -20,6 +20,12 @@
       <artifactId>gson</artifactId>
       <version>2.8.2</version>
     </dependency>
+    <dependency>
+      <groupId>org.junit.jupiter</groupId>
+      <artifactId>junit-jupiter-api</artifactId>
+      <version>RELEASE</version>
+      <scope>test</scope>
+    </dependency>
   </dependencies>
 
   <build>
diff --git a/tsconfig.json b/tsconfig.json
new file mode 100644
index 0000000000..e53fb99bec
--- /dev/null
+++ b/tsconfig.json
@@ -0,0 +1,5 @@
+{
+  "compilerOptions": {
+    "noLib": true
+  }
+}
-- 
2.19.1

